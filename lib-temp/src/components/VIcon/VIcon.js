import './VIcon.scss';
import { defineComponent, h, computed } from 'vue';
import { useColors, colorProps } from '../../effects/use-colors';
import { sizeProps } from '../../effects/use-sizes';
import { convertToUnit } from '../../helpers';
import { Sizes } from '../../services/sizes';
export const VIcon = defineComponent({
    name: 'v-icon',
    props: {
        disabled: Boolean,
        active: Boolean,
        clickable: Boolean,
        size: [String, Number],
        dense: Boolean,
        icon: String,
        iconType: String,
        tag: {
            type: String,
            default: 'i',
        },
        ...colorProps(),
        ...sizeProps(),
    },
    setup(props, { slots }) {
        const { setTextColor } = useColors();
        const iconTag = props.clickable ? 'button' : props.tag;
        const icon = computed(() => {
            return props.icon || (slots.default && slots.default()[0].children);
        });
        const classes = computed(() => ({
            'v-icon': true,
            'v-icon--disabled': props.disabled,
            'v-icon--link': props.clickable,
            'v-icon--dense': props.dense,
            'v-icon--clickable': props.clickable,
            [props.iconType]: !!props.iconType,
            [icon.value]: !!icon.value,
        }));
        const isMedium = computed(() => {
            return (!props.large &&
                !props.small &&
                !props.xLarge &&
                !props.xSmall &&
                !props.size);
        });
        function getSizes() {
            const sizeProps = {
                large: props.large,
                small: props.small,
                xLarge: props.xLarge,
                xSmall: props.xSmall,
                medium: isMedium.value,
            };
            const explicitSize = Object.keys(sizeProps).find(key => sizeProps[key]);
            return (explicitSize && Sizes[explicitSize]) || convertToUnit(props.size);
        }
        function genDataProps() {
            return {
                class: classes.value,
                style: {
                    fontSize: getSizes(),
                },
            };
        }
        return () => h(iconTag, setTextColor(props.color, genDataProps()));
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVkljb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9WSWNvbi9WSWNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLGNBQWMsQ0FBQTtBQUdyQixPQUFPLEVBQUUsZUFBZSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsTUFBTSxLQUFLLENBQUE7QUFHbEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQTtBQUNoRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0seUJBQXlCLENBQUE7QUFHbkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQU03QyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sc0JBQXNCLENBQUE7QUFHNUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLGVBQWUsQ0FBQztJQUNuQyxJQUFJLEVBQUUsUUFBUTtJQUVkLEtBQUssRUFBRTtRQUNMLFFBQVEsRUFBRSxPQUFPO1FBQ2pCLE1BQU0sRUFBRSxPQUFPO1FBQ2YsU0FBUyxFQUFFLE9BQU87UUFDbEIsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQztRQUN0QixLQUFLLEVBQUUsT0FBTztRQUNkLElBQUksRUFBRSxNQUFNO1FBQ1osUUFBUSxFQUFFLE1BQU07UUFDaEIsR0FBRyxFQUFFO1lBQ0gsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsR0FBRztTQUNiO1FBQ0QsR0FBRyxVQUFVLEVBQUU7UUFDZixHQUFHLFNBQVMsRUFBRTtLQUNSO0lBRVIsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRTtRQUNwQixNQUFNLEVBQUUsWUFBWSxFQUFFLEdBQUcsU0FBUyxFQUFFLENBQUE7UUFDcEMsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFBO1FBRXRELE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBUyxHQUFHLEVBQUU7WUFDakMsT0FBTyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDckUsQ0FBQyxDQUFDLENBQUE7UUFFRixNQUFNLE9BQU8sR0FBRyxRQUFRLENBQTBCLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDdkQsUUFBUSxFQUFFLElBQUk7WUFDZCxrQkFBa0IsRUFBRSxLQUFLLENBQUMsUUFBUTtZQUNsQyxjQUFjLEVBQUUsS0FBSyxDQUFDLFNBQVM7WUFDL0IsZUFBZSxFQUFFLEtBQUssQ0FBQyxLQUFLO1lBQzVCLG1CQUFtQixFQUFFLEtBQUssQ0FBQyxTQUFTO1lBQ3BDLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUTtZQUNsQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUs7U0FDM0IsQ0FBQyxDQUFDLENBQUE7UUFFSCxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQVUsR0FBRyxFQUFFO1lBQ3RDLE9BQU8sQ0FDTCxDQUFDLEtBQUssQ0FBQyxLQUFLO2dCQUNaLENBQUMsS0FBSyxDQUFDLEtBQUs7Z0JBQ1osQ0FBQyxLQUFLLENBQUMsTUFBTTtnQkFDYixDQUFDLEtBQUssQ0FBQyxNQUFNO2dCQUNiLENBQUMsS0FBSyxDQUFDLElBQUksQ0FDWixDQUFBO1FBQ0gsQ0FBQyxDQUFDLENBQUE7UUFFRixTQUFTLFFBQVE7WUFDZixNQUFNLFNBQVMsR0FBRztnQkFDaEIsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLO2dCQUNsQixLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7Z0JBQ2xCLE1BQU0sRUFBRSxLQUFLLENBQUMsTUFBTTtnQkFDcEIsTUFBTSxFQUFFLEtBQUssQ0FBQyxNQUFNO2dCQUNwQixNQUFNLEVBQUUsUUFBUSxDQUFDLEtBQUs7YUFDdkIsQ0FBQTtZQUNELE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7WUFFdkUsT0FBTyxDQUFDLFlBQVksSUFBSSxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxhQUFhLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQzNFLENBQUM7UUFFRCxTQUFTLFlBQVk7WUFDbkIsT0FBTztnQkFDTCxLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUs7Z0JBQ3BCLEtBQUssRUFBRTtvQkFDTCxRQUFRLEVBQUUsUUFBUSxFQUFFO2lCQUNyQjthQUNGLENBQUE7UUFDSCxDQUFDO1FBRUQsT0FBTyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLFlBQVksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUNwRSxDQUFDO0NBQ0YsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU3R5bGVzXG5pbXBvcnQgJy4vVkljb24uc2NzcydcblxuLy8gVnVlIEFQSVxuaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50LCBoLCBjb21wdXRlZCB9IGZyb20gJ3Z1ZSdcblxuLy8gRWZmZWN0c1xuaW1wb3J0IHsgdXNlQ29sb3JzLCBjb2xvclByb3BzIH0gZnJvbSAnLi4vLi4vZWZmZWN0cy91c2UtY29sb3JzJ1xuaW1wb3J0IHsgc2l6ZVByb3BzIH0gZnJvbSAnLi4vLi4vZWZmZWN0cy91c2Utc2l6ZXMnXG5cbi8vIEhlbHBlcnNcbmltcG9ydCB7IGNvbnZlcnRUb1VuaXQgfSBmcm9tICcuLi8uLi9oZWxwZXJzJ1xuXG4vLyBUeXBlc1xuaW1wb3J0IHsgVk5vZGUgfSBmcm9tICd2dWUnXG5cbi8vIFNlcnZpY2VzXG5pbXBvcnQgeyBTaXplcyB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3NpemVzJ1xuXG5cbmV4cG9ydCBjb25zdCBWSWNvbiA9IGRlZmluZUNvbXBvbmVudCh7XG4gIG5hbWU6ICd2LWljb24nLFxuXG4gIHByb3BzOiB7XG4gICAgZGlzYWJsZWQ6IEJvb2xlYW4sXG4gICAgYWN0aXZlOiBCb29sZWFuLFxuICAgIGNsaWNrYWJsZTogQm9vbGVhbixcbiAgICBzaXplOiBbU3RyaW5nLCBOdW1iZXJdLFxuICAgIGRlbnNlOiBCb29sZWFuLFxuICAgIGljb246IFN0cmluZyxcbiAgICBpY29uVHlwZTogU3RyaW5nLFxuICAgIHRhZzoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2knLFxuICAgIH0sXG4gICAgLi4uY29sb3JQcm9wcygpLFxuICAgIC4uLnNpemVQcm9wcygpLFxuICB9IGFzIGFueSxcblxuICBzZXR1cChwcm9wcywgeyBzbG90cyB9KTogKCkgPT4gVk5vZGUge1xuICAgIGNvbnN0IHsgc2V0VGV4dENvbG9yIH0gPSB1c2VDb2xvcnMoKVxuICAgIGNvbnN0IGljb25UYWcgPSBwcm9wcy5jbGlja2FibGUgPyAnYnV0dG9uJyA6IHByb3BzLnRhZ1xuXG4gICAgY29uc3QgaWNvbiA9IGNvbXB1dGVkPHN0cmluZz4oKCkgPT4ge1xuICAgICAgcmV0dXJuIHByb3BzLmljb24gfHwgKHNsb3RzLmRlZmF1bHQgJiYgc2xvdHMuZGVmYXVsdCgpWzBdLmNoaWxkcmVuKVxuICAgIH0pXG5cbiAgICBjb25zdCBjbGFzc2VzID0gY29tcHV0ZWQ8UmVjb3JkPHN0cmluZywgYm9vbGVhbj4+KCgpID0+ICh7XG4gICAgICAndi1pY29uJzogdHJ1ZSxcbiAgICAgICd2LWljb24tLWRpc2FibGVkJzogcHJvcHMuZGlzYWJsZWQsXG4gICAgICAndi1pY29uLS1saW5rJzogcHJvcHMuY2xpY2thYmxlLFxuICAgICAgJ3YtaWNvbi0tZGVuc2UnOiBwcm9wcy5kZW5zZSxcbiAgICAgICd2LWljb24tLWNsaWNrYWJsZSc6IHByb3BzLmNsaWNrYWJsZSxcbiAgICAgIFtwcm9wcy5pY29uVHlwZV06ICEhcHJvcHMuaWNvblR5cGUsXG4gICAgICBbaWNvbi52YWx1ZV06ICEhaWNvbi52YWx1ZSxcbiAgICB9KSlcblxuICAgIGNvbnN0IGlzTWVkaXVtID0gY29tcHV0ZWQ8Ym9vbGVhbj4oKCkgPT4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgIXByb3BzLmxhcmdlICYmXG4gICAgICAgICFwcm9wcy5zbWFsbCAmJlxuICAgICAgICAhcHJvcHMueExhcmdlICYmXG4gICAgICAgICFwcm9wcy54U21hbGwgJiZcbiAgICAgICAgIXByb3BzLnNpemVcbiAgICAgIClcbiAgICB9KVxuXG4gICAgZnVuY3Rpb24gZ2V0U2l6ZXMoKTogc3RyaW5nIHtcbiAgICAgIGNvbnN0IHNpemVQcm9wcyA9IHtcbiAgICAgICAgbGFyZ2U6IHByb3BzLmxhcmdlLFxuICAgICAgICBzbWFsbDogcHJvcHMuc21hbGwsXG4gICAgICAgIHhMYXJnZTogcHJvcHMueExhcmdlLFxuICAgICAgICB4U21hbGw6IHByb3BzLnhTbWFsbCxcbiAgICAgICAgbWVkaXVtOiBpc01lZGl1bS52YWx1ZSxcbiAgICAgIH1cbiAgICAgIGNvbnN0IGV4cGxpY2l0U2l6ZSA9IE9iamVjdC5rZXlzKHNpemVQcm9wcykuZmluZChrZXkgPT4gc2l6ZVByb3BzW2tleV0pXG5cbiAgICAgIHJldHVybiAoZXhwbGljaXRTaXplICYmIFNpemVzW2V4cGxpY2l0U2l6ZV0pIHx8IGNvbnZlcnRUb1VuaXQocHJvcHMuc2l6ZSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZW5EYXRhUHJvcHMoKTogUmVjb3JkPHN0cmluZywgYW55PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjbGFzczogY2xhc3Nlcy52YWx1ZSxcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBmb250U2l6ZTogZ2V0U2l6ZXMoKSxcbiAgICAgICAgfSxcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4gaChpY29uVGFnLCBzZXRUZXh0Q29sb3IocHJvcHMuY29sb3IsIGdlbkRhdGFQcm9wcygpKSlcbiAgfSxcbn0pXG4iXX0=