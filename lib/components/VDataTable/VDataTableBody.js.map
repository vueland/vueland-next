{"version":3,"sources":["../../../../src/components/VDataTable/VDataTableBody.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VDataTableBody.scss'\n\n// Vue API\nimport { h, ref, watch, computed, defineComponent } from 'vue'\n\n// Effects\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Components\nimport { VDataTableCell } from './VDataTableCell'\nimport { VCheckbox } from '../VCheckbox'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VDataTableBody = defineComponent({\n  name: 'v-data-table-body',\n\n  props: {\n    dark: Boolean,\n    numbered: Boolean,\n    checkbox: Boolean,\n    checkAllRows: Boolean,\n    cols: Array,\n    rows: Array,\n    align: String,\n    colWidth: {\n      type: [String, Number],\n      default: 125,\n    },\n    bodyHeight: {},\n    page: Number,\n    rowsPerPage: Number,\n    ...colorProps(),\n  } as any,\n\n  setup(props, { slots, emit }) {\n    const checkedRows = ref([])\n\n    const { setBackground } = useColors()\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-data-table__body': true,\n    }))\n\n    const rowsOnTable = computed(() => {\n      return props.rows?.slice(\n        (props.page - 1) * props.rowsPerPage,\n        props.page * props.rowsPerPage,\n      )\n    })\n\n    watch(\n      () => props.checkAllRows,\n      to => {\n        if (to) onCheckRows(props.rows)\n        else onCheckRows([])\n      },\n    )\n\n    function onCheckRows(rows) {\n      checkedRows.value = rows\n      emit('check', checkedRows.value)\n    }\n\n    function genTableRow(cells) {\n      return h(\n        'div',\n        {\n          class: {\n            'v-data-table__row': true,\n          },\n        },\n        cells,\n      )\n    }\n\n    function genNumberCell(count) {\n      return h(VDataTableCell, {\n        width: 50,\n        align: 'center',\n        dark: props.dark,\n        color: props.color,\n        class: 'v-data-table__row-number',\n      }, {\n        default: () => count + 1,\n      })\n    }\n\n    function genCheckboxCell(row) {\n      return h(VDataTableCell, {\n          width: 50,\n          align: 'center',\n          dark: props.dark,\n          color: props.color,\n          class: 'v-data-table__row-checkbox',\n        },\n        {\n          default: () =>\n            h(VCheckbox, {\n              modelValue: checkedRows.value,\n              color: props.dark ? 'white' : '',\n              value: row,\n              ['onUpdate:modelValue']: onCheckRows,\n            }),\n        },\n      )\n    }\n\n    function genRowCell(col, row) {\n      const { format } = col\n\n      const slotContent = slots[col.key] && slots[col.key]!(row)\n\n      return h(VDataTableCell, {\n          width: col.width,\n          align: props.align || col.align,\n          dark: props.dark,\n        },\n        {\n          default: () =>\n            slotContent\n              ? slotContent\n              : format\n              ? format(row)\n              : String(row[col.key]),\n        },\n      )\n    }\n\n    function genTableRows() {\n      const tableRows: VNode[] = []\n\n      const rowsLength = rowsOnTable.value?.length\n      const colsLength = props.cols.length\n\n      let rowCells: VNode[] = []\n      const count = (props.page - 1) * props.rowsPerPage\n\n      for (let i = 0; i < rowsLength; i += 1) {\n        props.numbered && rowCells.push(genNumberCell(count + i))\n        props.checkbox && rowCells.push(genCheckboxCell(props.rows[i]))\n\n        for (let j = 0; j < colsLength; j += 1) {\n          props.cols[j].show && rowCells.push(\n            genRowCell(props.cols[j], rowsOnTable.value[i]),\n          )\n        }\n\n        tableRows.push(genTableRow(rowCells))\n\n        rowCells = []\n      }\n\n      return tableRows\n    }\n\n    return () => {\n      const propsData = {\n        class: classes.value,\n      }\n\n      return h(\n        'div',\n        props.color ? setBackground(props.color, propsData) : propsData,\n        genTableRows(),\n      )\n    }\n  },\n})\n"],"sourceRoot":"","file":"VDataTableBody.js"}