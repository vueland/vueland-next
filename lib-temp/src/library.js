import * as components from './components';
import * as directives from './directives';
export class Vueland {
    static installed = false;
    static options;
    constructor(options) {
        Vueland.options = options;
    }
    static install(app) {
        if (Vueland.installed)
            return;
        Vueland.installed = true;
        Object.keys(components).forEach((key) => {
            if (key && components[key]) {
                const component = components[key];
                app.component(key, component);
            }
        });
        Object.keys(directives).forEach((key) => {
            if (key && directives[key]) {
                app.directive(key, directives[key]);
            }
        });
        app.provide('$options', Vueland.options);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWJyYXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxVQUFVLE1BQU0sY0FBYyxDQUFBO0FBQzFDLE9BQU8sS0FBSyxVQUFVLE1BQU0sY0FBYyxDQUFBO0FBRzFDLE1BQU0sT0FBTyxPQUFPO0lBQ2xCLE1BQU0sQ0FBQyxTQUFTLEdBQVksS0FBSyxDQUFBO0lBQ2pDLE1BQU0sQ0FBQyxPQUFPLENBQWE7SUFFM0IsWUFBWSxPQUFxQjtRQUMvQixPQUFPLENBQUMsT0FBTyxHQUFHLE9BQVEsQ0FBQTtJQUM1QixDQUFDO0lBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFRO1FBQ3JCLElBQUksT0FBTyxDQUFDLFNBQVM7WUFBRSxPQUFNO1FBRTdCLE9BQU8sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFBO1FBRXhCLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7WUFDdEMsSUFBSSxHQUFHLElBQUssVUFBa0IsQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDbkMsTUFBTSxTQUFTLEdBQUksVUFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQTtnQkFDMUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsU0FBdUIsQ0FBQyxDQUFBO2FBQzVDO1FBQ0gsQ0FBQyxDQUFDLENBQUE7UUFFRixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ3RDLElBQUksR0FBRyxJQUFLLFVBQWtCLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ25DLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFHLFVBQWtCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTthQUM3QztRQUNILENBQUMsQ0FBQyxDQUFBO1FBRUYsR0FBRyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQzFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjb21wb25lbnRzIGZyb20gJy4vY29tcG9uZW50cydcbmltcG9ydCAqIGFzIGRpcmVjdGl2ZXMgZnJvbSAnLi9kaXJlY3RpdmVzJ1xuaW1wb3J0IHsgVXNlck9wdGlvbnMgfSBmcm9tICcuLi90eXBlcydcblxuZXhwb3J0IGNsYXNzIFZ1ZWxhbmQge1xuICBzdGF0aWMgaW5zdGFsbGVkOiBib29sZWFuID0gZmFsc2VcbiAgc3RhdGljIG9wdGlvbnM6IFVzZXJPcHRpb25zXG5cbiAgY29uc3RydWN0b3Iob3B0aW9ucz86IFVzZXJPcHRpb25zKSB7XG4gICAgVnVlbGFuZC5vcHRpb25zID0gb3B0aW9ucyFcbiAgfVxuXG4gIHN0YXRpYyBpbnN0YWxsKGFwcDogYW55KSB7XG4gICAgaWYgKFZ1ZWxhbmQuaW5zdGFsbGVkKSByZXR1cm5cblxuICAgIFZ1ZWxhbmQuaW5zdGFsbGVkID0gdHJ1ZVxuXG4gICAgT2JqZWN0LmtleXMoY29tcG9uZW50cykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBpZiAoa2V5ICYmIChjb21wb25lbnRzIGFzIGFueSlba2V5XSkge1xuICAgICAgICBjb25zdCBjb21wb25lbnQgPSAoY29tcG9uZW50cyBhcyBhbnkpW2tleV1cbiAgICAgICAgYXBwLmNvbXBvbmVudChrZXksIGNvbXBvbmVudCBhcyB0eXBlb2YgYXBwKVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBPYmplY3Qua2V5cyhkaXJlY3RpdmVzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIGlmIChrZXkgJiYgKGRpcmVjdGl2ZXMgYXMgYW55KVtrZXldKSB7XG4gICAgICAgIGFwcC5kaXJlY3RpdmUoa2V5LCAoZGlyZWN0aXZlcyBhcyBhbnkpW2tleV0pXG4gICAgICB9XG4gICAgfSlcblxuICAgIGFwcC5wcm92aWRlKCckb3B0aW9ucycsIFZ1ZWxhbmQub3B0aW9ucylcbiAgfVxufVxuIl19