{"version":3,"sources":["../../../../src/components/VDataTable/VDataTableCell.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;AAGA;;AAGA;;AAGA;;;;;;;;AAEO,IAAM,cAAc,GAAG,0BAAgB;AAC5C,EAAA,IAAI,EAAE,mBADsC;AAE5C,EAAA,KAAK;AACH,IAAA,IAAI,EAAE,OADH;AAEH,IAAA,UAAU,EAAE,OAFT;AAGH,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,MADD;AAEL,iBAAS;AAFJ,KAHJ;AAOH,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADD;AAEL,iBAAS;AAFJ,KAPJ;AAWH,IAAA,YAAY,EAAE;AAXX,KAYA,6BAZA,CAFuC;AAiB5C,EAAA,KAAK,EAAE,CAAC,QAAD,CAjBqC;AAmB5C,EAAA,KAnB4C,iBAmBtC,KAnBsC,QAmBhB;AAAA,QAAb,KAAa,QAAb,KAAa;AAAA,QAAN,IAAM,QAAN,IAAM;;AAAA,qBACD,4BADC;AAAA,QAClB,YADkB,cAClB,YADkB;;AAG1B,QAAM,OAAO,GAAG,mBAAkC;AAAA,aAAO;AACvD,8BAAsB;AADiC,OAAP;AAAA,KAAlC,CAAhB;;AAIA,aAAS,SAAT,GAAkB;AAChB,aAAO,YAAE,gBAAF,EAAW;AAChB,QAAA,KAAK,EAAE,IADS;AAEhB,QAAA,IAAI,EAAE,IAFU;AAGhB,iBAAO;AACL,UAAA,KAAK,EAAE,KAAK,CAAC,IADR;AAEL,UAAA,OAAO,EAAE,CAAC,KAAK,CAAC;AAFX,SAHS;AAOhB,QAAA,QAAQ,EAAE,kBAAC,KAAD;AAAA,iBAAW,IAAI,CAAC,QAAD,EAAW,KAAX,CAAf;AAAA;AAPM,OAAX,CAAP;AASD;;AAED,aAAS,cAAT,GAAuB;AACrB,UAAM,SAAS,GAAG;AAChB;AACE,wCAA8B;AADhC,iCAEmB,KAAK,CAAC,KAFzB,GAEoC,CAAC,CAAC,KAAK,CAAC,KAF5C;AADgB,OAAlB;AAMA,aAAO,YAAE,KAAF,EAAS,SAAT,EAAoB,KAAK,WAAL,IAAiB,KAAK,WAAL,EAArC,CAAP;AAED;;AAED,WAAO,YAAK;AACV,UAAM,KAAK,GAAG,KAAK,CAAC,KAAN,KAAgB,KAAK,CAAC,IAAN,GAAa,OAAb,GAAuB,EAAvC,CAAd;AAEA,UAAM,SAAS,GAAG,YAAY,CAAC,KAAD,EAAQ;AACpC,iBAAO,OAAO,CAAC,KADqB;AAEpC,QAAA,KAAK,EAAE;AACL,UAAA,KAAK,EAAE,4BAAc,CAAC,KAAK,CAAC,KAArB;AADF;AAF6B,OAAR,CAA9B;AAOA,aAAO,YAAE,KAAF,EAAS,SAAT,EAAoB,CACzB,cAAc,EADW,EAEzB,KAAK,CAAC,UAAN,IAAoB,SAAS,EAFJ,CAApB,CAAP;AAID,KAdD;AAeD;AAhE2C,CAAhB,CAAvB","sourcesContent":["// Styles\nimport './VDataTableCell.scss'\n\n// Vue API\nimport { h, computed, defineComponent } from 'vue'\n\n// Effects\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Helpers\nimport { convertToUnit } from '../../helpers'\n\n// Components\nimport { VResize } from '../VResize'\n\nexport const VDataTableCell = defineComponent({\n  name: 'v-data-table-cell',\n  props: {\n    dark: Boolean,\n    resizeable: Boolean,\n    align: {\n      type: String,\n      default: 'start',\n    },\n    width: {\n      type: [String, Number],\n      default: 75,\n    },\n    contentColor: String,\n    ...colorProps(),\n  } as any,\n\n  emits: ['resize'],\n\n  setup(props, { slots, emit }) {\n    const { setTextColor } = useColors()\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-data-table__cell': true,\n    }))\n\n    function genResize() {\n      return h(VResize, {\n        right: true,\n        emit: true,\n        class: {\n          white: props.dark,\n          primary: !props.dark,\n        },\n        onResize: ($size) => emit('resize', $size),\n      })\n    }\n\n    function genCellContent() {\n      const propsData = {\n        class: {\n          'v-data-table__cell-content': true,\n          [`text-align--${ props.align }`]: !!props.align,\n        },\n      }\n      return h('div', propsData, slots.default && slots.default(),\n      )\n    }\n\n    return () => {\n      const color = props.color || (props.dark ? 'white' : '')\n\n      const propsData = setTextColor(color, {\n        class: classes.value,\n        style: {\n          width: convertToUnit(+props.width),\n        },\n      })\n\n      return h('div', propsData, [\n        genCellContent(),\n        props.resizeable && genResize(),\n      ])\n    }\n  },\n})\n"],"sourceRoot":"","file":"VDataTableCell.js"}