{"version":3,"sources":["../../../../src/components/VTooltip/VTooltip.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VTooltip.scss'\n\n// Vue API\nimport {\n  h,\n  ref,\n  reactive,\n  watch,\n  computed,\n  withDirectives,\n  defineComponent,\n  onMounted,\n  vShow,\n} from 'vue'\n\n// Effects\nimport { useToggle } from '../../effects/use-toggle'\nimport { useColors } from '../../effects/use-colors'\nimport { useActivator } from '../../effects/use-activator'\nimport { useTransition } from '../../effects/use-transition'\nimport { elevationProps, useElevation } from '../../effects/use-elevation'\nimport { positionProps } from '../../effects/use-position'\n\n// Types\nimport { OffsetSizes } from '../../types'\nimport { VNode } from 'vue'\n\n// Helpers\nimport { convertToUnit } from '../../helpers'\n\n// Services\nimport { Transitions } from '../../services/transitions'\n\n// TODO fix behavior on window resize if v-model used on component\n\nexport const VTooltip = defineComponent({\n  name: 'v-tooltip',\n\n  props: {\n    openOnHover: {\n      type: Boolean,\n      default: true,\n    },\n    color: {\n      type: String,\n      default: 'grey lighten-1',\n    },\n    zIndex: [Number, String],\n    maxWidth: [Number, String],\n    minWidth: [Number, String],\n    modelValue: Boolean,\n    ...elevationProps(),\n    ...positionProps(),\n  } as any,\n\n  setup(props, { slots }) {\n    const tooltip = reactive<Partial<OffsetSizes>>({})\n    const activator = reactive<Partial<OffsetSizes>>({})\n\n    const tooltipRef = ref<HTMLElement | null>(null)\n\n    const { isActive } = useToggle(props)\n    const { elevationClasses } = useElevation(props)\n    const { setBackground } = useColors()\n    const {\n      activatorRef,\n      getActivatorSizes,\n      genActivatorListeners,\n    } = useActivator()\n\n    const listeners = genActivatorListeners(props, isActive)\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-tooltip': true,\n      'v-tooltip--top': props.top,\n      'v-tooltip--right': props.right,\n      'v-tooltip--left': props.left,\n      'v-tooltip--bottom': props.bottom,\n      ...elevationClasses.value,\n    }))\n\n    const computeTopPosition = computed<number>(() => {\n      return (\n        (props.top\n          ? activator!.top! - tooltip.height!\n          : props.bottom\n            ? activator.top! + activator.height!\n            : activator.top! + (activator.height! - tooltip.height!) / 2) +\n        +props.offsetY\n      )\n    })\n\n    const computeLeftPosition = computed<number>(() => {\n      return (\n        (props.left\n          ? activator.left! - tooltip.width!\n          : props.right\n            ? activator.left! + activator.width!\n            : activator.left! + (activator.width! - tooltip.width!) / 2) +\n        +props.offsetX\n      )\n    })\n\n    const styles = computed<Record<string, string>>(() => ({\n      top: tooltip.top ? (convertToUnit(tooltip.top) as string) : '',\n      left: tooltip.top ? (convertToUnit(tooltip.left) as string) : '',\n      maxWidth: !!props.maxWidth ? `${props.maxWidth}px` : '',\n      minWidth: !!props.minWidth ? `${props.minWidth}px` : '',\n      zIndex: props.zIndex,\n    }))\n\n    function genActivator(): VNode | null {\n      const slotContent =\n        slots.activator &&\n        slots.activator({\n          on: listeners,\n        })\n\n      return h(slotContent![0], { ref: activatorRef })\n    }\n\n    function genContent(): VNode {\n      const propsData = {\n        class: classes.value,\n        style: styles.value,\n        ref: tooltipRef,\n      }\n\n      return withDirectives(\n        h(\n          'span',\n          setBackground(props.color, propsData),\n          slots.default && slots.default(),\n        ),\n        [[vShow, isActive.value]],\n      )\n    }\n\n    function setTooltipPosition() {\n      if (tooltipRef.value) {\n        tooltip.width = tooltipRef.value!.offsetWidth\n        tooltip.height = tooltipRef.value!.offsetHeight\n        tooltip.top = computeTopPosition.value\n        tooltip.left = computeLeftPosition.value\n      }\n    }\n\n    onMounted(() => {\n      watch(\n        () => isActive.value,\n        (to) => {\n          if (to) {\n            const { left, top, height, width } = getActivatorSizes()\n\n            activator.left = left as number\n            activator.top = top as number\n            activator.height = height as number\n            activator.width = width as number\n\n            tooltip.top = 0\n            tooltip.left = 0\n\n            requestAnimationFrame(setTooltipPosition)\n          }\n        },\n        { immediate: true },\n      )\n    })\n\n    return () => {\n      const content = useTransition(\n        genContent() as VNode,\n        isActive.value ? Transitions.SCALE_IN : Transitions.FADE,\n      )\n\n      return [content, genActivator()]\n    }\n  },\n})\n"],"sourceRoot":"","file":"VTooltip.js"}