{"version":3,"sources":["../../../src/helpers/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AAEM,SAAU,sBAAV,CACJ,CADI,EAGa;AAAA,MADjB,EACiB,uEADZ,KACY;AAAA,MAAjB,IAAiB,uEAAF,EAAE;AAEjB,SAAO,0BAAgB;AACrB,IAAA,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,GAAjB,CADO;AAGrB,IAAA,KAHqB,iBAGf,CAHe,QAGH;AAAA,UAAP,KAAO,QAAP,KAAO;AAChB,aAAO;AAAA,eACL,YACE,EADF,EAEE;AACE,uCACG,CAAC,CAAC,IAAF,EADH,EACc,IADd;AADF,SAFF,EAOE,KAAK,WAAL,IAAiB,KAAK,WAAL,EAPnB,CADK;AAAA,OAAP;AAUD;AAdoB,GAAhB,CAAP;AAgBD;;AAEK,SAAU,eAAV,CACJ,EADI,EAEJ,SAFI,EAGJ,EAHI,EAI8C;AAAA,MAAlD,OAAkD,uEAAL,KAAK;;AAElD,MAAM,IAAI,GAAG,SAAP,IAAO,CAAC,KAAD,EAAiB;AAC5B,IAAA,EAAE,CAAC,KAAD,CAAF;AACA,IAAA,EAAE,CAAC,mBAAH,CAAuB,SAAvB,EAAkC,IAAlC,EAAwC,OAAxC;AACD,GAHD;;AAKA,EAAA,EAAE,CAAC,gBAAH,CAAoB,SAApB,EAA+B,IAA/B,EAAqC,OAArC;AACD;;AAEK,SAAU,aAAV,CACJ,GADI,EAEO;AAAA,MAAX,IAAW,uEAAJ,IAAI;;AAEX,MAAI,GAAG,IAAI,IAAP,IAAe,GAAG,KAAK,EAA3B,EAA+B;AAC7B,WAAO,SAAP;AACD,GAFD,MAEO,IAAI,KAAK,CAAC,CAAC,GAAF,CAAT,EAAkB;AACvB,WAAO,MAAM,CAAC,GAAD,CAAb;AACD,GAFM,MAEA;AACL,qBAAU,MAAM,CAAC,GAAD,CAAhB,SAAwB,IAAxB;AACD;AACF;;AAEK,SAAU,OAAV,CAAkB,WAAlB,EAA6B;AACjC,EAAA,OAAO,CAAC,IAAR,CAAa,WAAb;AACD","sourcesContent":["import { defineComponent, h } from 'vue'\n\nexport function createSimpleFunctional(\n  c: string,\n  el = 'div',\n  name: string = '',\n) {\n  return defineComponent({\n    name: name || c.replace(/__/g, '-'),\n\n    setup(_, { slots }) {\n      return () =>\n        h(\n          el,\n          {\n            class: {\n              [c.trim()]: true,\n            },\n          },\n          slots.default && slots.default(),\n        )\n    },\n  })\n}\n\nexport function addOnceListener(\n  el: EventTarget,\n  eventName: string,\n  cb: (event: Event) => void,\n  options: boolean | AddEventListenerOptions = false,\n): void {\n  const once = (event: Event) => {\n    cb(event)\n    el.removeEventListener(eventName, once, options)\n  }\n\n  el.addEventListener(eventName, once, options)\n}\n\nexport function convertToUnit(\n  str: string | number | null | undefined,\n  unit = 'px',\n): string | undefined {\n  if (str == null || str === '') {\n    return undefined\n  } else if (isNaN(+str!)) {\n    return String(str)\n  } else {\n    return `${Number(str)}${unit}`\n  }\n}\n\nexport function warning(warningText) {\n  console.warn(warningText)\n}\n"],"sourceRoot":"","file":"index.js"}