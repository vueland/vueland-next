{"version":3,"sources":["../../../../src/components/VBadge/VBadge.ts"],"names":[],"mappings":"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","sourcesContent":["import './VBadge.scss'\n\n// Vue API\nimport { defineComponent, h, computed, withDirectives, vShow } from 'vue'\n\n// Effects\nimport { useColors } from '../../effects/use-colors'\nimport { positionProps } from '../../effects/use-position'\nimport { toggleProps, useToggle } from '../../effects/use-toggle'\nimport { elevationProps, useElevation } from '../../effects/use-elevation'\nimport { useTransition } from '../../effects/use-transition'\n\n// Types\nimport { Props } from '../../types'\n\nconst vBadgeProps: Props = {\n  dot: Boolean,\n  avatar: Boolean,\n  border: Boolean,\n  content: {\n    required: false,\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  transition: {\n    type: String,\n    default: 'scaleIn',\n  },\n  ...positionProps(),\n  ...elevationProps(),\n  ...toggleProps()\n}\n\nexport const VBadge = defineComponent({\n  name: 'v-badge',\n\n  props: vBadgeProps,\n\n  setup(props, { slots }) {\n\n    const { elevationClasses } = useElevation(props)\n    const { isActive } = useToggle(props)\n    const { setBackground } = useColors()\n\n    const offset = computed<number>(() => {\n      return props.dot ? 4 : 12\n    })\n\n    const calcPosition = (offsetVal: string | number = 0): string => {\n      const value = offset.value + Number(offsetVal)\n      return `calc(100% - ${ value }px)`\n    }\n\n    const computedLeft = computed<string | boolean>(() => {\n      if (props.right) {\n        return calcPosition(props.offsetX)\n      }\n\n      return false\n    })\n\n    const computedRight = computed<string | boolean>(() => {\n      if (props.left) {\n        return calcPosition(props.offsetX)\n      }\n\n      return false\n    })\n\n    const computedTop = computed<string | boolean>(() => {\n      if (props.bottom) {\n        return calcPosition(props.offsetY)\n      }\n\n      return false\n    })\n\n    const computedBottom = computed<string | boolean>(() => {\n      if (props.top) {\n        return calcPosition(props.offsetY)\n      }\n\n      return false\n    })\n\n    const classes = computed<Record<string, boolean>>(() => {\n      return {\n        'v-badge__badge': true,\n        'v-badge--border': props.border,\n        'v-badge--dot': props.dot,\n        'v-badge--avatar': props.avatar,\n        ...elevationClasses.value,\n      }\n    })\n\n    const styles = computed<Record<string, string | boolean>>(() => {\n      return {\n        top: computedTop.value,\n        right: computedRight.value,\n        bottom: computedBottom.value,\n        left: computedLeft.value\n      }\n    })\n\n\n    const content = () => {\n      if (props.dot) return undefined\n\n      const slot = slots.badge\n      if (slot) return slot\n\n      if (props.content) return String(props.content)\n\n      return undefined\n    }\n\n    const genBadge = () => {\n      return withDirectives(h('span',\n        setBackground(props.color, {\n          class: {\n            ...classes.value\n          },\n          style: [styles.value]\n        }),\n        [h('span',\n          {\n            class: {\n              'vue-badge__content': true\n            }\n          }, content())\n        ]),\n        [[vShow, isActive.value]])\n    }\n\n    return () => {\n      const slotContent = slots.default && slots.default()\n      const transitionedBadge = useTransition(props, genBadge())\n\n      return h('span', {\n        class: {\n          'v-badge': true\n        }\n      }, [h(transitionedBadge()), slotContent])\n    }\n  },\n})\n"],"sourceRoot":"","file":"VBadge.js"}