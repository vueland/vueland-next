import { render } from 'vue';
import { VOverlay } from '../components';
import { addOnceListener } from '@/helpers';
const TIMEOUT = 40;
export function overlayProps() {
    return {
        overlay: Boolean,
        overlayColor: {
            type: String,
            default: '#000000',
        },
    };
}
export function useOverlay(props, overlayOn) {
    const container = document.createElement('div');
    const overlayPropsObject = {
        active: false,
        hide: true,
        color: props.overlayColor,
    };
    const overlayVNode = () => {
        return VOverlay.setup(overlayPropsObject, {});
    };
    const renderOverlay = () => {
        render(overlayVNode(), container);
    };
    renderOverlay();
    const overlayElement = container.firstChild;
    const createOverlay = () => {
        overlayOn?.parentNode?.insertBefore(overlayElement, overlayOn);
        setTimeout(() => {
            overlayPropsObject.active = true;
            overlayPropsObject.hide = !props.overlay;
            renderOverlay();
        }, TIMEOUT);
    };
    const removeOverlay = () => {
        overlayPropsObject.active = false;
        renderOverlay();
        const remove = () => {
            overlayOn?.parentNode?.removeChild(overlayElement);
        };
        addOnceListener(overlayElement, 'transitionend', remove);
    };
    return {
        createOverlay,
        removeOverlay,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLW92ZXJsYXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZWZmZWN0cy91c2Utb3ZlcmxheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sS0FBSyxDQUFBO0FBRzVCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFPeEMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFdBQVcsQ0FBQTtBQU8zQyxNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUE7QUFFbEIsTUFBTSxVQUFVLFlBQVk7SUFDMUIsT0FBTztRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLFlBQVksRUFBRTtZQUNaLElBQUksRUFBRSxNQUFNO1lBQ1osT0FBTyxFQUFFLFNBQVM7U0FDbkI7S0FDRixDQUFBO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxVQUFVLENBQUMsS0FBWSxFQUFFLFNBQW1CO0lBQzFELE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUE7SUFFL0MsTUFBTSxrQkFBa0IsR0FBVTtRQUNoQyxNQUFNLEVBQUUsS0FBSztRQUNiLElBQUksRUFBRSxJQUFJO1FBQ1YsS0FBSyxFQUFFLEtBQUssQ0FBQyxZQUFZO0tBQzFCLENBQUE7SUFFRCxNQUFNLFlBQVksR0FBRyxHQUFHLEVBQUU7UUFDeEIsT0FBTyxRQUFRLENBQUMsS0FBTSxDQUNwQixrQkFBMkMsRUFDM0MsRUFBa0IsQ0FDbkIsQ0FBQTtJQUNILENBQUMsQ0FBQTtJQUVELE1BQU0sYUFBYSxHQUFHLEdBQUcsRUFBRTtRQUN6QixNQUFNLENBQUMsWUFBWSxFQUFXLEVBQUUsU0FBVSxDQUFDLENBQUE7SUFDN0MsQ0FBQyxDQUFBO0lBRUQsYUFBYSxFQUFFLENBQUE7SUFDZixNQUFNLGNBQWMsR0FBRyxTQUFTLENBQUMsVUFBVSxDQUFBO0lBRTNDLE1BQU0sYUFBYSxHQUFHLEdBQUcsRUFBRTtRQUN6QixTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksQ0FBQyxjQUFlLEVBQUUsU0FBUyxDQUFDLENBQUE7UUFFL0QsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNkLGtCQUFrQixDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUE7WUFDaEMsa0JBQWtCLENBQUMsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQTtZQUN4QyxhQUFhLEVBQUUsQ0FBQTtRQUNqQixDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUE7SUFDYixDQUFDLENBQUE7SUFFRCxNQUFNLGFBQWEsR0FBRyxHQUFHLEVBQUU7UUFDekIsa0JBQWtCLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQTtRQUVqQyxhQUFhLEVBQUUsQ0FBQTtRQUVmLE1BQU0sTUFBTSxHQUFHLEdBQUcsRUFBRTtZQUNsQixTQUFTLEVBQUUsVUFBVSxFQUFFLFdBQVcsQ0FBQyxjQUFlLENBQUMsQ0FBQTtRQUNyRCxDQUFDLENBQUE7UUFFRCxlQUFlLENBQUMsY0FBZSxFQUFFLGVBQWUsRUFBRSxNQUFNLENBQUMsQ0FBQTtJQUMzRCxDQUFDLENBQUE7SUFFRCxPQUFPO1FBQ0wsYUFBYTtRQUNiLGFBQWE7S0FDZCxDQUFBO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3Z1ZSdcblxuLy8gQ29tcG9uZW50c1xuaW1wb3J0IHsgVk92ZXJsYXkgfSBmcm9tICcuLi9jb21wb25lbnRzJ1xuXG4vLyBUeXBlc1xuaW1wb3J0IHsgUHJvcHMgfSBmcm9tICcuLi90eXBlcydcbmltcG9ydCB7IFNldHVwQ29udGV4dCwgVk5vZGUgfSBmcm9tICd2dWUnXG5cbi8vIEhlbHBlcnNcbmltcG9ydCB7IGFkZE9uY2VMaXN0ZW5lciB9IGZyb20gJ0AvaGVscGVycydcblxuaW50ZXJmYWNlIE92ZXJsYXlhYmxlIHtcbiAgY3JlYXRlT3ZlcmxheTogKCkgPT4gdm9pZFxuICByZW1vdmVPdmVybGF5OiAoKSA9PiB2b2lkXG59XG5cbmNvbnN0IFRJTUVPVVQgPSA0MFxuXG5leHBvcnQgZnVuY3Rpb24gb3ZlcmxheVByb3BzKCk6IFByb3BzIHtcbiAgcmV0dXJuIHtcbiAgICBvdmVybGF5OiBCb29sZWFuLFxuICAgIG92ZXJsYXlDb2xvcjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJyMwMDAwMDAnLFxuICAgIH0sXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZU92ZXJsYXkocHJvcHM6IFByb3BzLCBvdmVybGF5T24/OiBFbGVtZW50KTogT3ZlcmxheWFibGUge1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuXG4gIGNvbnN0IG92ZXJsYXlQcm9wc09iamVjdDogUHJvcHMgPSB7XG4gICAgYWN0aXZlOiBmYWxzZSxcbiAgICBoaWRlOiB0cnVlLFxuICAgIGNvbG9yOiBwcm9wcy5vdmVybGF5Q29sb3IsXG4gIH1cblxuICBjb25zdCBvdmVybGF5Vk5vZGUgPSAoKSA9PiB7XG4gICAgcmV0dXJuIFZPdmVybGF5LnNldHVwIShcbiAgICAgIG92ZXJsYXlQcm9wc09iamVjdCBhcyB0eXBlb2YgVk92ZXJsYXkucHJvcHMsXG4gICAgICB7fSBhcyBTZXR1cENvbnRleHQsXG4gICAgKVxuICB9XG5cbiAgY29uc3QgcmVuZGVyT3ZlcmxheSA9ICgpID0+IHtcbiAgICByZW5kZXIob3ZlcmxheVZOb2RlKCkgYXMgVk5vZGUsIGNvbnRhaW5lciEpXG4gIH1cblxuICByZW5kZXJPdmVybGF5KClcbiAgY29uc3Qgb3ZlcmxheUVsZW1lbnQgPSBjb250YWluZXIuZmlyc3RDaGlsZFxuXG4gIGNvbnN0IGNyZWF0ZU92ZXJsYXkgPSAoKSA9PiB7XG4gICAgb3ZlcmxheU9uPy5wYXJlbnROb2RlPy5pbnNlcnRCZWZvcmUob3ZlcmxheUVsZW1lbnQhLCBvdmVybGF5T24pXG5cbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIG92ZXJsYXlQcm9wc09iamVjdC5hY3RpdmUgPSB0cnVlXG4gICAgICBvdmVybGF5UHJvcHNPYmplY3QuaGlkZSA9ICFwcm9wcy5vdmVybGF5XG4gICAgICByZW5kZXJPdmVybGF5KClcbiAgICB9LCBUSU1FT1VUKVxuICB9XG5cbiAgY29uc3QgcmVtb3ZlT3ZlcmxheSA9ICgpID0+IHtcbiAgICBvdmVybGF5UHJvcHNPYmplY3QuYWN0aXZlID0gZmFsc2VcblxuICAgIHJlbmRlck92ZXJsYXkoKVxuXG4gICAgY29uc3QgcmVtb3ZlID0gKCkgPT4ge1xuICAgICAgb3ZlcmxheU9uPy5wYXJlbnROb2RlPy5yZW1vdmVDaGlsZChvdmVybGF5RWxlbWVudCEpXG4gICAgfVxuXG4gICAgYWRkT25jZUxpc3RlbmVyKG92ZXJsYXlFbGVtZW50ISwgJ3RyYW5zaXRpb25lbmQnLCByZW1vdmUpXG4gIH1cblxuICByZXR1cm4ge1xuICAgIGNyZWF0ZU92ZXJsYXksXG4gICAgcmVtb3ZlT3ZlcmxheSxcbiAgfVxufVxuIl19