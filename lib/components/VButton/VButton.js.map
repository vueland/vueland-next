{"version":3,"sources":["../../../../src/components/VButton/VButton.ts"],"names":[],"mappings":"AACA,OAAO,8CAAP;AAGA,SAAS,eAAT,EAA0B,CAA1B,EAA6B,QAA7B,QAA6C,KAA7C;AAGA,SAAS,UAAT,EAAqB,SAArB,QAAsC,0BAAtC;AACA,SAAS,cAAT,EAAyB,YAAzB,QAA6C,6BAA7C;AACA,SAAS,aAAT,EAAwB,WAAxB,QAA2C,4BAA3C;AAKA,OAAO,MAAM,OAAO,GAAG,eAAe,CAAC;AACrC,EAAA,IAAI,EAAE,UAD+B;AAGrC,EAAA,KAAK,EAAE;AACL,IAAA,QAAQ,EAAE,OADL;AAEL,IAAA,QAAQ,EAAE,OAFL;AAGL,IAAA,QAAQ,EAAE,OAHL;AAIL,IAAA,IAAI,EAAE,OAJD;AAKL,IAAA,KAAK,EAAE,OALF;AAML,IAAA,IAAI,EAAE,OAND;AAOL,IAAA,KAAK,EAAE,MAPF;AAQL,OAAG,UAAU,EARR;AASL,OAAG,cAAc,EATZ;AAUL,OAAG,aAAa;AAVX,GAH8B;;AAgBrC,EAAA,KAAK,CAAC,KAAD,EAAQ;AAAE,IAAA;AAAF,GAAR,EAAiB;AACpB,UAAM;AAAE,MAAA,YAAF;AAAgB,MAAA;AAAhB,QAAkC,SAAS,EAAjD;AAEA,UAAM;AAAE,MAAA;AAAF,QAAuB,YAAY,CAAC,KAAD,CAAzC;AAEA,UAAM;AAAE,MAAA;AAAF,QAAsB,WAAW,CAAC,KAAD,CAAvC;AAEA,UAAM,MAAM,GAAG,QAAQ,CAAU,MAAK;AACpC,aAAO,KAAK,CAAC,IAAN,IAAc,KAAK,CAAC,QAA3B;AACD,KAFsB,CAAvB;AAIA,UAAM,OAAO,GAAG,QAAQ,CAA0B,OAAO;AACrD,kBAAY,IADyC;AAErD,4BAAsB,KAAK,CAAC,QAFyB;AAGrD,wBAAkB,KAAK,CAAC,IAAN,IAAc,KAAK,CAAC,QAHe;AAIrD,4BAAsB,KAAK,CAAC,QAJyB;AAKrD,SAAG,gBAAgB,CAAC,KALiC;AAMrD,SAAG,eAAe,CAAC;AANkC,KAAP,CAA1B,CAAxB;;AAUA,aAAS,QAAT,GAAiB;AACf,YAAM,SAAS,GAAG;AAChB,QAAA,KAAK,EAAE;AACL,6BAAmB;AADd;AADS,OAAlB;AAMA,aAAO,CAAC,CAAC,MAAD,EAAS,SAAT,EAAoB,KAAK,CAAC,KAA1B,CAAR;AACD;;AAED,WAAO,MAAK;AACV,YAAM,QAAQ,GAAG,MAAM,CAAC,KAAP,GAAe,YAAf,GAA8B,aAA/C;AACA,YAAM,OAAO,GAAU,EAAvB;AAEA,YAAM,SAAS,GAAG,KAAK,CAAC,KAAN,GACd,QAAQ,CAAC,KAAK,CAAC,KAAP,EAAc;AAAE,QAAA,KAAK,EAAE,OAAO,CAAC;AAAjB,OAAd,CADM,GAEd;AAAE,QAAA,KAAK,EAAE,OAAO,CAAC;AAAjB,OAFJ;AAIA,MAAA,KAAK,CAAC,KAAN,IAAe,OAAO,CAAC,IAAR,CAAa,QAAQ,EAArB,CAAf;AACA,MAAA,KAAK,CAAC,OAAN,IAAiB,OAAO,CAAC,IAAR,CAAa,KAAK,CAAC,OAAN,EAAb,CAAjB;AAEA,aAAO,CAAC,CAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,CAAR;AACD,KAZD;AAaD;;AA5DoC,CAAD,CAA/B","sourcesContent":["// Styles\nimport './VButton.scss'\n\n// Vue API\nimport { defineComponent, h, computed } from 'vue'\n\n// Compositions\nimport { colorProps, useColors } from '../../effects/use-colors'\nimport { elevationProps, useElevation } from '../../effects/use-elevation'\nimport { positionProps, usePosition } from '../../effects/use-position'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VButton = defineComponent({\n  name: 'v-button',\n\n  props: {\n    disabled: Boolean,\n    outlined: Boolean,\n    absolute: Boolean,\n    left: Boolean,\n    right: Boolean,\n    text: Boolean,\n    label: String,\n    ...colorProps(),\n    ...elevationProps(),\n    ...positionProps(),\n  } as any,\n\n  setup(props, { slots }): () => VNode {\n    const { setTextColor, setBackground } = useColors()\n\n    const { elevationClasses } = useElevation(props)\n\n    const { positionClasses } = usePosition(props)\n\n    const isFlat = computed<boolean>(() => {\n      return props.text || props.outlined\n    })\n\n    const classes = computed<Record<string, boolean>>(() => ({\n        'v-button': true,\n        'v-button--disabled': props.disabled,\n        'v-button--text': props.text || props.outlined,\n        'v-button--outlined': props.outlined,\n        ...elevationClasses.value,\n        ...positionClasses.value,\n      }),\n    )\n\n    function genLabel() {\n      const propsData = {\n        class: {\n          'v-button__label': true,\n        },\n      }\n\n      return h('span', propsData, props.label)\n    }\n\n    return () => {\n      const setColor = isFlat.value ? setTextColor : setBackground\n      const content: any[] = []\n\n      const propsData = props.color\n        ? setColor(props.color, { class: classes.value })\n        : { class: classes.value }\n\n      props.label && content.push(genLabel())\n      slots.default && content.push(slots.default())\n\n      return h('button', propsData, content)\n    }\n  },\n})\n"],"sourceRoot":"","file":"VButton.js"}