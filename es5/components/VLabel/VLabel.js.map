{"version":3,"sources":["../../../../src/components/VLabel/VLabel.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;AAGA;;AAGA;;;;;;;;AAMO,IAAM,MAAM,GAAG,0BAAgB;AACpC,EAAA,IAAI,EAAE,SAD8B;AAGpC,EAAA,KAAK;AACH,IAAA,QAAQ,EAAE,OADP;AAEH,IAAA,QAAQ,EAAE,OAFP;AAGH,IAAA,OAAO,EAAE,OAHN;AAIH,IAAA,OAAO,EAAE,OAJN;AAKH,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,CAAE,MAAF,EAAU,MAAV,CADF;AAEJ,iBAAS;AAFL,KALH;AASH,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,CAAE,MAAF,EAAU,MAAV,CADD;AAEL,iBAAS;AAFJ,KATJ;AAaH,IAAA,QAAQ,EAAE;AAbP,KAcA,6BAdA,CAH+B;AAoBpC,EAAA,KApBoC,iBAoB9B,KApB8B,QAoBd;AAAA,QAAP,KAAO,QAAP,KAAO;;AACpB,qBAAyB,4BAAzB;AAAA,QAAQ,YAAR,cAAQ,YAAR;;AAEA,QAAM,QAAQ,GAAG,mBAAkB,YAAK;AACtC,aAAO,CAAC,CAAC,KAAK,CAAC,QAAR,IAAoB,CAAC,CAAC,KAAK,CAAC,OAAnC;AACD,KAFgB,CAAjB;AAIA,QAAM,OAAO,GAAG,mBAAkC;AAAA,aAAO;AACvD,mBAAW,IAD4C;AAEvD,2BAAmB,QAAQ,CAAC,KAF2B;AAGvD,8BAAsB,KAAK,CAAC,QAH2B;AAIvD,6BAAqB,KAAK,CAAC,OAJ4B;AAKvD,gCAAwB,CAAC,CAAC,KAAK,CAAC;AALuB,OAAP;AAAA,KAAlC,CAAhB;;AAQA,aAAS,YAAT,GAAqB;AACnB,aAAO;AACL,iBAAO,OAAO,CAAC,KADV;AAEL,QAAA,KAAK,EAAE;AACL,UAAA,IAAI,EAAE,4BAAc,KAAK,CAAC,IAApB,CADD;AAEL,UAAA,KAAK,EAAE,4BAAc,KAAK,CAAC,KAApB,CAFF;AAGL,UAAA,QAAQ,EAAE,KAAK,CAAC,QAAN,GAAiB,UAAjB,GAA8B;AAHnC;AAFF,OAAP;AAQD;;AAED,WAAO,YAAY;AACjB,UAAM,SAAS,GAAG,YAAY,EAA9B;AAEA,aAAO,YACL,OADK,EAEL,KAAK,CAAC,KAAN,GAAc,YAAY,CAAC,KAAK,CAAC,KAAP,EAAe,SAAf,CAA1B,GAAsD,SAFjD,EAGL,KAAK,WAAL,IAAiB,KAAK,WAAL,EAHZ,CAAP;AAKD,KARD;AASD;AAvDmC,CAAhB,CAAf","sourcesContent":["// Styles\nimport './VLabel.scss'\n\n// Vue API\nimport { h, computed, defineComponent } from 'vue'\n\n// Helpers\nimport { convertToUnit } from '../../helpers'\n\n// Effects\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Types\nimport { VNode } from 'vue'\n\n// @ts-ignore\nexport const VLabel = defineComponent({\n  name: 'v-label',\n\n  props: {\n    absolute: Boolean,\n    disabled: Boolean,\n    focused: Boolean,\n    onField: Boolean,\n    left: {\n      type: [ Number, String ],\n      default: 0\n    },\n    right: {\n      type: [ Number, String ],\n      default: 'auto'\n    },\n    hasState: Boolean,\n    ...colorProps()\n  } as any,\n\n  setup(props, { slots }): () => VNode {\n    const { setTextColor } = useColors()\n\n    const isActive = computed<boolean>(() => {\n      return !!props.hasState || !!props.focused\n    })\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-label': true,\n      'v-label--active': isActive.value,\n      'v-label--has-state': props.hasState,\n      'v-label--on-field': props.onField,\n      'v-label--is-disabled': !!props.disabled\n    }) as any)\n\n    function genPropsData(): Record<string, any> {\n      return {\n        class: classes.value,\n        style: {\n          left: convertToUnit(props.left),\n          right: convertToUnit(props.right),\n          position: props.absolute ? 'absolute' : 'relative'\n        }\n      }\n    }\n\n    return (): VNode => {\n      const propsData = genPropsData()\n\n      return h(\n        'label',\n        props.color ? setTextColor(props.color!, propsData) : propsData,\n        slots.default && slots.default()\n      )\n    }\n  }\n})\n"],"sourceRoot":"","file":"VLabel.js"}