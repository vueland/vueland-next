{"version":3,"sources":["../../../src/effects/use-toggle.ts"],"names":[],"mappings":";;;;;;;AACA;;AAeM,SAAU,SAAV,CAAoB,KAApB,EAAgC,QAAhC,EAAiD;AACrD,MAAM,QAAQ,GAAG,cAAI,KAAJ,CAAjB;AACA,MAAM,IAAI,GAAG,QAAQ,GAAG,QAAH,GAAc,YAAnC;AAEA,kBACE;AAAA,WAAM,KAAK,CAAC,IAAD,CAAX;AAAA,GADF,EAEE,UAAC,EAAD;AAAA,WAAS,QAAQ,CAAC,KAAT,GAAiB,CAAC,CAAC,EAA5B;AAAA,GAFF,EAGE;AAAE,IAAA,SAAS,EAAE;AAAb,GAHF;AAMA,SAAO;AACL,IAAA,QAAQ,EAAR;AADK,GAAP;AAGD","sourcesContent":["// Vue API\nimport { ref, watch } from 'vue'\n\n// Types\nimport { Ref } from 'vue'\n\ntype Toggleable = {\n  isActive: Ref<boolean>;\n};\n\n/***\n *\n * @param props {object} - props object of the component\n * @param propName {string} - the prop name which is tracked for changes\n */\n\nexport function useToggle(props: any, propName?: string): Toggleable {\n  const isActive = ref(false)\n  const prop = propName ? propName : 'modelValue'\n\n  watch(\n    () => props[prop],\n    (to) => (isActive.value = !!to),\n    { immediate: true },\n  )\n\n  return {\n    isActive,\n  }\n}\n"],"sourceRoot":"","file":"use-toggle.js"}