{"version":3,"sources":["../../../../src/components/VDataTable/VDataTableBody.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VDataTableBody.scss'\n\n// Vue API\nimport { h, ref, watch, computed, defineComponent } from 'vue'\n\n// Effects\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Components\nimport { VDataTableCell } from './VDataTableCell'\nimport { VCheckbox } from '../VCheckbox'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VDataTableBody = defineComponent({\n  name: 'v-data-table-body',\n\n  props: {\n    dark: Boolean,\n    numbered: Boolean,\n    checkbox: Boolean,\n    checkAllRows: Boolean,\n    cols: Array,\n    rows: Array,\n    align: String,\n    colWidth: {\n      type: [String, Number],\n      default: 125,\n    },\n    bodyHeight: {},\n    page: Number,\n    rowsPerPage: Number,\n    ...colorProps(),\n  } as any,\n\n  setup(props, { slots, emit }) {\n    const checkedRows = ref([])\n\n    const { setBackground } = useColors()\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-data-table__body': true,\n    }))\n\n    const rowsOnTable = computed(() => {\n      return props.rows?.slice(\n        (props.page - 1) * props.rowsPerPage,\n        props.page * props.rowsPerPage,\n      )\n    })\n\n    watch(\n      () => props.checkAllRows,\n      to => {\n        if (to) onCheckRows(props.rows)\n        else onCheckRows([])\n      },\n    )\n\n    function onCheckRows(rows) {\n      checkedRows.value = rows\n      emit('check', checkedRows.value)\n    }\n\n    function genTableRow(cells) {\n      return h(\n        'div',\n        {\n          class: {\n            'v-data-table__row': true,\n          },\n        },\n        cells,\n      )\n    }\n\n    function genNumberCell(count) {\n      return h(VDataTableCell, {\n        width: 50,\n        align: 'center',\n        dark: props.dark,\n        color: props.color,\n        class: 'v-data-table__row-number',\n      }, {\n        default: () => count + 1,\n      })\n    }\n\n    function genCheckboxCell(row) {\n      return h(VDataTableCell, {\n          width: 50,\n          align: 'center',\n          dark: props.dark,\n          color: props.color,\n          class: 'v-data-table__row-checkbox',\n        },\n        {\n          default: () =>\n            h(VCheckbox, {\n              modelValue: checkedRows.value,\n              color: props.dark ? 'white' : '',\n              value: row,\n              ['onUpdate:modelValue']: onCheckRows,\n            }),\n        },\n      )\n    }\n\n    function genRowCell(col, row) {\n      const { format } = col\n\n      const slotContent = slots[col.key] && slots[col.key]!(row)\n\n      return h(VDataTableCell, {\n          width: col.width,\n          align: props.align || col.align,\n          dark: props.dark,\n        },\n        {\n          default: () =>\n            slotContent\n              ? slotContent\n              : format\n              ? format(row)\n              : String(row[col.key]),\n        },\n      )\n    }\n\n    function genTableRows() {\n      const tableRows: VNode[] = []\n\n      const rowsLength = rowsOnTable.value?.length\n      const colsLength = props.cols.length\n\n      let rowCells: VNode[] = []\n      const count = (props.page - 1) * props.rowsPerPage\n\n      for (let i = 0; i < rowsLength; i += 1) {\n        props.numbered && rowCells.push(genNumberCell(count + i))\n        props.checkbox && rowCells.push(genCheckboxCell(props.rows[i]))\n\n        for (let j = 0; j < colsLength; j += 1) {\n          props.cols[j].show && rowCells.push(\n            genRowCell(props.cols[j], rowsOnTable.value[i]),\n          )\n        }\n\n        tableRows.push(genTableRow(rowCells))\n\n        rowCells = []\n      }\n\n      return tableRows\n    }\n\n    return () => {\n      const propsData = {\n        class: classes.value,\n      }\n\n      return h(\n        'div',\n        props.color ? setBackground(props.color, propsData) : propsData,\n        genTableRows(),\n      )\n    }\n  },\n})\n"],"sourceRoot":"","file":"VDataTableBody.js"}