{"version":3,"sources":["../../../src/helpers/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;AAEM,SAAU,sBAAV,CACJ,CADI,EAGa;AAAA,MADjB,EACiB,uEADZ,KACY;AAAA,MAAjB,IAAiB,uEAAF,EAAE;AAEjB,SAAO,0BAAgB;AACrB,IAAA,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,GAAjB,CADO;AAGrB,IAAA,KAHqB,iBAGf,CAHe,QAGH;AAAA,UAAP,KAAO,QAAP,KAAO;AAChB,UAAM,SAAS,GAAG;AAChB,qCACG,CAAC,CAAC,IAAF,EADH,EACc,IADd;AADgB,OAAlB;AAMA,aAAO;AAAA,eAAM,YAAE,EAAF,EAAM,SAAN,EAAiB,KAAK,WAAL,IAAiB,KAAK,WAAL,EAAlC,CAAN;AAAA,OAAP;AACD;AAXoB,GAAhB,CAAP;AAaD;;AAEK,SAAU,eAAV,CACJ,EADI,EAEJ,SAFI,EAGJ,EAHI,EAI8C;AAAA,MAAlD,OAAkD,uEAAL,KAAK;;AAElD,MAAM,IAAI,GAAG,SAAP,IAAO,CAAC,KAAD,EAAiB;AAC5B,IAAA,EAAE,CAAC,KAAD,CAAF;AACA,IAAA,EAAE,CAAC,mBAAH,CAAuB,SAAvB,EAAkC,IAAlC,EAAwC,OAAxC;AACD,GAHD;;AAKA,EAAA,EAAE,CAAC,gBAAH,CAAoB,SAApB,EAA+B,IAA/B,EAAqC,OAArC;AACD;;AAEK,SAAU,aAAV,CACJ,GADI,EAEO;AAAA,MAAX,IAAW,uEAAJ,IAAI;;AAEX,MAAI,GAAG,IAAI,IAAP,IAAe,GAAG,KAAK,EAA3B,EAA+B;AAC7B,WAAO,SAAP;AACD,GAFD,MAEO,IAAI,KAAK,CAAC,CAAC,GAAF,CAAT,EAAkB;AACvB,WAAO,MAAM,CAAC,GAAD,CAAb;AACD,GAFM,MAEA;AACL,qBAAU,MAAM,CAAC,GAAD,CAAhB,SAAwB,IAAxB;AACD;AACF;;AAEK,SAAU,OAAV,CAAkB,WAAlB,EAA6B;AACjC,EAAA,OAAO,CAAC,IAAR,CAAa,WAAb;AACD;;AAEK,SAAU,eAAV,CAA0B,GAA1B,EAA6B;AACjC,SAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,GAAf,CAAX,CAAP;AACD;;AAEM,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,QAAD,EAAmB,KAAnB,EAAmC;AAC9D,SAAO,UAAC,MAAD,EAAW;AAChB,QAAM,GAAG,qBAAa,MAAb,CAAT;;AAEA,WAAO,KAAK,CAAC,QAAD,CAAL,IAAmB,KAAK,CAAC,QAAD,CAAL,CAAiB,GAAjB,CAA1B;AACD,GAJD;AAKD,CANM","sourcesContent":["import { defineComponent, h, Slots } from 'vue'\n\nexport function createSimpleFunctional(\n  c: string,\n  el = 'div',\n  name: string = ''\n) {\n  return defineComponent({\n    name: name || c.replace(/__/g, '-'),\n\n    setup(_, { slots }) {\n      const propsData = {\n        class: {\n          [c.trim()]: true,\n        },\n      }\n\n      return () => h(el, propsData, slots.default && slots.default())\n    },\n  })\n}\n\nexport function addOnceListener(\n  el: EventTarget,\n  eventName: string,\n  cb: (event: Event) => void,\n  options: boolean | AddEventListenerOptions = false\n): void {\n  const once = (event: Event) => {\n    cb(event)\n    el.removeEventListener(eventName, once, options)\n  }\n\n  el.addEventListener(eventName, once, options)\n}\n\nexport function convertToUnit(\n  str: string | number | null | undefined,\n  unit = 'px'\n): string | undefined {\n  if (str == null || str === '') {\n    return undefined\n  } else if (isNaN(+str!)) {\n    return String(str)\n  } else {\n    return `${Number(str)}${unit}`\n  }\n}\n\nexport function warning(warningText) {\n  console.warn(warningText)\n}\n\nexport function copyWithoutLink(obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nexport const addScopedSlot = (slotName: string, slots: Slots) => {\n  return (scoped) => {\n    const arg: any = { ...scoped }\n\n    return slots[slotName] && slots[slotName]!(arg)\n  }\n}\n"],"sourceRoot":"","file":"index.js"}