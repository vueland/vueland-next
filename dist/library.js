import components from './paths.json';
import * as directives from './directives';
import { defineAsyncComponent } from 'vue';
export class Vueland {
    static installed = false;
    static options;
    constructor(options) {
        Vueland.options = options;
    }
    static install(app) {
        if (Vueland.installed)
            return;
        Vueland.installed = true;
        Object.keys(components).forEach((key) => {
            if (key && components[key]) {
                app.component(key, defineAsyncComponent(() => import(`${components[key]}`)));
            }
        });
        Object.keys(directives).forEach((key) => {
            if (key && directives[key]) {
                app.directive(key, directives[key]);
            }
        });
        app.provide('$options', Vueland.options);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWJyYXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sVUFBVSxNQUFNLGNBQWMsQ0FBQTtBQUNyQyxPQUFPLEtBQUssVUFBVSxNQUFNLGNBQWMsQ0FBQTtBQUUxQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxLQUFLLENBQUE7QUFFMUMsTUFBTSxPQUFPLE9BQU87SUFDbEIsTUFBTSxDQUFDLFNBQVMsR0FBWSxLQUFLLENBQUE7SUFDakMsTUFBTSxDQUFDLE9BQU8sQ0FBYTtJQUUzQixZQUFZLE9BQXFCO1FBQy9CLE9BQU8sQ0FBQyxPQUFPLEdBQUcsT0FBUSxDQUFBO0lBQzVCLENBQUM7SUFFRCxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQVE7UUFDckIsSUFBSSxPQUFPLENBQUMsU0FBUztZQUFFLE9BQU07UUFFN0IsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUE7UUFFeEIsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUN0QyxJQUFJLEdBQUcsSUFBSSxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQzFCLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUNyQyxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBSSxVQUFVLENBQUMsR0FBRyxDQUFFLEVBQUUsQ0FBQyxDQUFDLENBQ3RDLENBQUE7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUFBO1FBRUYsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUN0QyxJQUFJLEdBQUcsSUFBSyxVQUFrQixDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUNuQyxHQUFHLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRyxVQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7YUFDN0M7UUFDSCxDQUFDLENBQUMsQ0FBQTtRQUVGLEdBQUcsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQTtJQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLWlnbm9yZVxuaW1wb3J0IGNvbXBvbmVudHMgZnJvbSAnLi9wYXRocy5qc29uJ1xuaW1wb3J0ICogYXMgZGlyZWN0aXZlcyBmcm9tICcuL2RpcmVjdGl2ZXMnXG5pbXBvcnQgeyBVc2VyT3B0aW9ucyB9IGZyb20gJy4uL3R5cGVzJ1xuaW1wb3J0IHsgZGVmaW5lQXN5bmNDb21wb25lbnQgfSBmcm9tICd2dWUnXG5cbmV4cG9ydCBjbGFzcyBWdWVsYW5kIHtcbiAgc3RhdGljIGluc3RhbGxlZDogYm9vbGVhbiA9IGZhbHNlXG4gIHN0YXRpYyBvcHRpb25zOiBVc2VyT3B0aW9uc1xuXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnM/OiBVc2VyT3B0aW9ucykge1xuICAgIFZ1ZWxhbmQub3B0aW9ucyA9IG9wdGlvbnMhXG4gIH1cblxuICBzdGF0aWMgaW5zdGFsbChhcHA6IGFueSkge1xuICAgIGlmIChWdWVsYW5kLmluc3RhbGxlZCkgcmV0dXJuXG5cbiAgICBWdWVsYW5kLmluc3RhbGxlZCA9IHRydWVcblxuICAgIE9iamVjdC5rZXlzKGNvbXBvbmVudHMpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgaWYgKGtleSAmJiBjb21wb25lbnRzW2tleV0pIHtcbiAgICAgICAgYXBwLmNvbXBvbmVudChrZXksIGRlZmluZUFzeW5jQ29tcG9uZW50KFxuICAgICAgICAgICgpID0+IGltcG9ydChgJHsgY29tcG9uZW50c1trZXldIH1gKSksXG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgT2JqZWN0LmtleXMoZGlyZWN0aXZlcykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBpZiAoa2V5ICYmIChkaXJlY3RpdmVzIGFzIGFueSlba2V5XSkge1xuICAgICAgICBhcHAuZGlyZWN0aXZlKGtleSwgKGRpcmVjdGl2ZXMgYXMgYW55KVtrZXldKVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBhcHAucHJvdmlkZSgnJG9wdGlvbnMnLCBWdWVsYW5kLm9wdGlvbnMpXG4gIH1cbn1cbiJdfQ==