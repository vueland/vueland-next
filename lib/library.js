import { ref, unref } from 'vue';
import { defaultTheme } from './composables/use-theme';
export class Vueland {
    theme;
    icons;
    constructor() {
        this.icons = null;
        this.theme = ref(null);
    }
    install(app, args = {}) {
        if (this.install.installed)
            return;
        this.install.installed = true;
        const { components, directives } = args;
        for (const key in components) {
            if (components[key]) {
                app.component(key, components[key]);
            }
        }
        for (const key in directives) {
            if (directives[key]) {
                app.directive(key, directives[key]);
            }
        }
        if (!unref(this.theme)) {
            this.setTheme(defaultTheme);
        }
        app.provide('$v', this);
        app.provide('$v_theme', this.theme);
        app.provide('$v_icons', this.icons);
    }
    setTheme(theme) {
        if (typeof document === 'undefined') {
            return;
        }
        const root = document.documentElement;
        this.theme.value = Object.assign(this.theme.value || {}, theme);
        Object.keys(this.theme.value).forEach(key => {
            root.style.setProperty(`--${key}`, this.theme.value[key]);
        });
    }
    setIcons(icons) {
        this.icons = icons;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL3Z1ZWxhbmQvc3JjL2xpYnJhcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFPLEdBQUcsRUFBRSxLQUFLLEVBQUUsTUFBTSxLQUFLLENBQUE7QUFHckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFBO0FBRXRELE1BQU0sT0FBTyxPQUFPO0lBQ2xCLEtBQUssQ0FBa0M7SUFDdkMsS0FBSyxDQUE2QjtJQUVsQztRQUNFLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFBO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3hCLENBQUM7SUFFRCxPQUFPLENBQUMsR0FBUSxFQUFFLE9BQVksRUFBRTtRQUM5QixJQUFLLElBQUksQ0FBQyxPQUFlLENBQUMsU0FBUztZQUFFLE9BQU07UUFFMUMsSUFBSSxDQUFDLE9BQWUsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFBO1FBRXRDLE1BQU0sRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEdBQUcsSUFBSSxDQUFBO1FBRXZDLEtBQUssTUFBTSxHQUFHLElBQUksVUFBVSxFQUFFO1lBQzVCLElBQUksVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUNuQixHQUFHLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTthQUNwQztTQUNGO1FBRUQsS0FBSyxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUU7WUFDNUIsSUFBSSxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ25CLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO2FBQ3BDO1NBQ0Y7UUFFRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFBO1NBQzVCO1FBRUQsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUE7UUFDdkIsR0FBRyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ25DLEdBQUcsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUNyQyxDQUFDO0lBRUQsUUFBUSxDQUFDLEtBQTJCO1FBQ2xDLElBQUksT0FBTyxRQUFRLEtBQUssV0FBVyxFQUFFO1lBQ25DLE9BQU07U0FDUDtRQUVELE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxlQUFlLENBQUE7UUFFckMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUE7UUFFL0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUMxQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxLQUFNLEdBQUksRUFBRSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7UUFDOUQsQ0FBQyxDQUFDLENBQUE7SUFFSixDQUFDO0lBRUQsUUFBUSxDQUFDLEtBQTJCO1FBQ2xDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFBO0lBQ3BCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFR5cGVzXG5pbXBvcnQgeyBSZWYsIHJlZiwgdW5yZWYgfSBmcm9tICd2dWUnXG5pbXBvcnQgeyBMaWJyYXJ5LCBVc2VyT3B0aW9ucyB9IGZyb20gJy4vdHlwZXMnXG5pbXBvcnQgeyBBcHAgfSBmcm9tICd2dWUnXG5pbXBvcnQgeyBkZWZhdWx0VGhlbWUgfSBmcm9tICcuL2NvbXBvc2FibGVzL3VzZS10aGVtZSdcblxuZXhwb3J0IGNsYXNzIFZ1ZWxhbmQgaW1wbGVtZW50cyBMaWJyYXJ5IHtcbiAgdGhlbWU6IFJlZjxNYXliZTxVc2VyT3B0aW9uc1sndGhlbWUnXT4+XG4gIGljb25zOiBNYXliZTxVc2VyT3B0aW9uc1snaWNvbnMnXT5cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmljb25zID0gbnVsbFxuICAgIHRoaXMudGhlbWUgPSByZWYobnVsbClcbiAgfVxuXG4gIGluc3RhbGwoYXBwOiBBcHAsIGFyZ3M6IGFueSA9IHt9KSB7XG4gICAgaWYgKCh0aGlzLmluc3RhbGwgYXMgYW55KS5pbnN0YWxsZWQpIHJldHVyblxuXG4gICAgKHRoaXMuaW5zdGFsbCBhcyBhbnkpLmluc3RhbGxlZCA9IHRydWVcblxuICAgIGNvbnN0IHsgY29tcG9uZW50cywgZGlyZWN0aXZlcyB9ID0gYXJnc1xuXG4gICAgZm9yIChjb25zdCBrZXkgaW4gY29tcG9uZW50cykge1xuICAgICAgaWYgKGNvbXBvbmVudHNba2V5XSkge1xuICAgICAgICBhcHAuY29tcG9uZW50KGtleSwgY29tcG9uZW50c1trZXldKVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoY29uc3Qga2V5IGluIGRpcmVjdGl2ZXMpIHtcbiAgICAgIGlmIChkaXJlY3RpdmVzW2tleV0pIHtcbiAgICAgICAgYXBwLmRpcmVjdGl2ZShrZXksIGRpcmVjdGl2ZXNba2V5XSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXVucmVmKHRoaXMudGhlbWUpKSB7XG4gICAgICB0aGlzLnNldFRoZW1lKGRlZmF1bHRUaGVtZSlcbiAgICB9XG5cbiAgICBhcHAucHJvdmlkZSgnJHYnLCB0aGlzKVxuICAgIGFwcC5wcm92aWRlKCckdl90aGVtZScsIHRoaXMudGhlbWUpXG4gICAgYXBwLnByb3ZpZGUoJyR2X2ljb25zJywgdGhpcy5pY29ucylcbiAgfVxuXG4gIHNldFRoZW1lKHRoZW1lOiBVc2VyT3B0aW9uc1sndGhlbWUnXSkge1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCByb290ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG5cbiAgICB0aGlzLnRoZW1lLnZhbHVlID0gT2JqZWN0LmFzc2lnbih0aGlzLnRoZW1lLnZhbHVlIHx8IHt9LCB0aGVtZSlcblxuICAgIE9iamVjdC5rZXlzKHRoaXMudGhlbWUudmFsdWUpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoYC0tJHsga2V5IH1gLCB0aGlzLnRoZW1lLnZhbHVlIVtrZXldKVxuICAgIH0pXG5cbiAgfVxuXG4gIHNldEljb25zKGljb25zOiBVc2VyT3B0aW9uc1snaWNvbnMnXSkge1xuICAgIHRoaXMuaWNvbnMgPSBpY29uc1xuICB9XG59XG4iXX0=