{"version":3,"sources":["../../../../src/components/VModal/VModal.ts"],"names":[],"mappings":"AACA,OAAO,4CAAP;AAGA,SAAS,eAAT,EAA0B,CAA1B,EAA6B,KAA7B,EAAoC,cAApC,EAAoD,KAApD,QAAiE,KAAjE;AAGA,SAAS,YAAT,EAAuB,UAAvB,QAAyC,2BAAzC;AACA,SAAS,eAAT,EAA0B,aAA1B,QAA+C,8BAA/C;AACA,SAAS,WAAT,EAAsB,SAAtB,QAAuC,sBAAvC;AAKA,MAAM,WAAW,GAAwB;AACvC,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADD;AAEL,IAAA,OAAO,EAAE;AAFJ,GADgC;AAKvC,EAAA,IAAI,EAAE,OALiC;AAMvC,KAAG,YAAY,EANwB;AAOvC,KAAG,eAAe,EAPqB;AAQvC,KAAG,WAAW;AARyB,CAAzC;AAWA,OAAO,MAAM,MAAM,GAAG,eAAe,CAAC;AACpC,EAAA,IAAI,EAAE,SAD8B;AAGpC,EAAA,KAAK,EAAE,WAH6B;;AAKpC,EAAA,KAAK,CAAC,KAAD,EAAQ;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,GAAR,EAAuB;AAE1B,UAAM;AAAE,MAAA;AAAF,QAAe,SAAS,CAAC,KAAD,CAA9B;;AAEA,QAAI,KAAK,CAAC,OAAV,EAAmB;AACjB,YAAM,OAAO,GAAG,UAAU,CAAC,KAAD,EAAQ,SAAR,CAA1B;AAEA,MAAA,KAAK,CACH,MAAM,QAAQ,CAAC,KADZ,EAEH,EAAE,IAAG;AACH,QAAA,EAAE,IAAI,OAAO,CAAC,aAAR,EAAN;AACA,SAAC,EAAD,IAAO,OAAO,CAAC,aAAR,EAAP;AACD,OALE,CAAL;AAOD;;AAED,UAAM,UAAU,GAAG,MACjB,CAAC,CACC,KADD,EAEC;AACE,MAAA,KAAK,EAAE;AACL,4BAAoB;AADf;AADT,KAFD,EAOC,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,EAPlB,CADH;;AAWA,UAAM,QAAQ,GAAG,MACf,CAAC,CACC,KADD,EAEC;AACE,MAAA,KAAK,EAAE;AACL,mBAAW;AADN,OADT;AAIE,6BAAuB,GAAG,IAAI,IAAI,CAAC,mBAAD,EAAsB,GAAtB;AAJpC,KAFD,EAQC,CAAC,OAAD,CARD,CADH;;AAYA,UAAM,OAAO,GAAG,UAAU,EAA1B;AAEA,QAAI,KAAK,GAAG,QAAQ,EAApB;;AAEA,QAAI,CAAC,CAAC,KAAK,CAAC,UAAZ,EAAwB;AACtB,YAAM,iBAAiB,GAAG,aAAa,CAAC,KAAD,EAAQ,KAAR,CAAvC;AACA,MAAA,KAAK,GAAG,iBAAiB,EAAzB;AACD;;AAED,WAAO,MAAM,cAAc,CAAC,CAAC,CAAC,KAAD,CAAF,EAAW,CAAC,CAAC,KAAD,EAAQ,QAAQ,CAAC,KAAjB,CAAD,CAAX,CAA3B;AACD;;AAtDmC,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VModal.scss'\n\n// Vue API\nimport { defineComponent, h, watch, withDirectives, vShow } from 'vue'\n\n// Effects\nimport { overlayProps, useOverlay } from '../../effects/use-overlay'\nimport { transitionProps, useTransition } from '../../effects/use-transition'\nimport { toggleProps, useToggle } from '@/effects/use-toggle'\n\n// Types\nimport { VNode } from 'vue'\n\nconst vModalProps: Record<string, any> = {\n  width: {\n    type: [String, Number],\n    default: 400,\n  },\n  show: Boolean,\n  ...overlayProps(),\n  ...transitionProps(),\n  ...toggleProps()\n}\n\nexport const VModal = defineComponent({\n  name: 'v-modal',\n\n  props: vModalProps,\n\n  setup(props, { slots, emit }) {\n\n    const { isActive } = useToggle(props)\n\n    if (props.overlay) {\n      const overlay = useOverlay(props, 'v-modal')\n\n      watch(\n        () => isActive.value,\n        to => {\n          to && overlay.createOverlay()\n          !to && overlay.removeOverlay()\n        },\n      )\n    }\n\n    const genContent = (): VNode =>\n      h(\n        'div',\n        {\n          class: {\n            'v-modal__content': true,\n          },\n        },\n        slots.default && slots.default(),\n      )\n\n    const genModal = () =>\n      h(\n        'div',\n        {\n          class: {\n            'v-modal': true,\n          },\n          'onUpdate:modelValue': val => emit('update:modelValue', val),\n        },\n        [content],\n      )\n\n    const content = genContent()\n\n    let modal = genModal()\n\n    if (!!props.transition) {\n      const transitionedModal = useTransition(props, modal)\n      modal = transitionedModal()\n    }\n\n    return () => withDirectives(h(modal), [[vShow, isActive.value]])\n  },\n})\n"],"sourceRoot":"","file":"VModal.js"}