{"version":3,"sources":["../../../../src/components/VDataTable/VDataTableCell.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;AAGA;;AAGA;;AAGA;;;;;;;;AAEO,IAAM,cAAc,GAAG,0BAAgB;AAC5C,EAAA,IAAI,EAAE,mBADsC;AAE5C,EAAA,KAAK;AACH,IAAA,IAAI,EAAE,OADH;AAEH,IAAA,UAAU,EAAE,OAFT;AAGH,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,MADD;AAEL,iBAAS;AAFJ,KAHJ;AAOH,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADD;AAEL,iBAAS;AAFJ;AAPJ,KAWA,6BAXA,CAFuC;AAgB5C,EAAA,KAhB4C,iBAgBtC,KAhBsC,QAgBhB;AAAA,QAAb,KAAa,QAAb,KAAa;AAAA,QAAN,IAAM,QAAN,IAAM;;AAAA,qBACc,4BADd;AAAA,QAClB,YADkB,cAClB,YADkB;AAAA,QACJ,aADI,cACJ,aADI;;AAG1B,QAAM,OAAO,GAAG,mBAAkC;AAAA;AAChD,8BAAsB;AAD0B,+BAE/B,KAAK,CAAC,KAFyB,GAEd,CAAC,CAAC,KAAK,CAAC,KAFM;AAAA,KAAlC,CAAhB;;AAKA,aAAS,SAAT,GAAkB;AAChB,aAAO,YAAE,gBAAF,EAAW;AAChB,QAAA,KAAK,EAAE,IADS;AAEhB,QAAA,IAAI,EAAE,IAFU;AAGhB,iBAAO;AACL,mBAAS,KAAK,CAAC,IADV;AAEL,qBAAW,CAAC,KAAK,CAAC;AAFb,SAHS;AAOhB,QAAA,QAAQ,EAAE,kBAAA,KAAK;AAAA,iBAAI,IAAI,CAAC,QAAD,EAAW,KAAX,CAAR;AAAA;AAPC,OAAX,CAAP;AASD;;AAED,aAAS,cAAT,GAAuB;AACrB,aAAO,YAAE,KAAF,EAAS;AACd,iBAAO;AADO,OAAT,EAEJ,KAAK,WAAL,IAAiB,KAAK,WAAL,EAFb,CAAP;AAGD;;AAED,WAAO,YAAK;AACV,UAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,IAAN,GAAa,OAAb,GAAuB,EAAxB,EAA4B;AACxD,iBAAO,OAAO,CAAC,KADyC;AAExD,QAAA,KAAK,EAAE;AACL,UAAA,KAAK,EAAE,4BAAc,CAAC,KAAK,CAAC,KAArB;AADF;AAFiD,OAA5B,CAA9B;AAOA,aAAO,YAAE,KAAF,EACL,aAAa,CAAC,KAAK,CAAC,KAAP,EAAc,SAAd,CADR,EAEL,CAAC,cAAc,EAAf,EAAmB,KAAK,CAAC,UAAN,IAAoB,SAAS,EAAhD,CAFK,CAAP;AAID,KAZD;AAaD;AAvD2C,CAAhB,CAAvB","sourcesContent":["// Styles\nimport './VDataTableCell.scss'\n\n// Vue API\nimport { h, computed, defineComponent } from 'vue'\n\n// Effects\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Helpers\nimport { convertToUnit } from '../../helpers'\n\n// Components\nimport { VResize } from '../VResize'\n\nexport const VDataTableCell = defineComponent({\n  name: 'v-data-table-cell',\n  props: {\n    dark: Boolean,\n    resizeable: Boolean,\n    align: {\n      type: String,\n      default: 'start',\n    },\n    width: {\n      type: [String, Number],\n      default: 75,\n    },\n    ...colorProps(),\n  } as any,\n\n  setup(props, { slots, emit }) {\n    const { setTextColor, setBackground } = useColors()\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-data-table__cell': true,\n      [`text-align--${ props.align }`]: !!props.align,\n    }))\n\n    function genResize() {\n      return h(VResize, {\n        right: true,\n        emit: true,\n        class: {\n          'white': props.dark,\n          'primary': !props.dark,\n        },\n        onResize: $size => emit('resize', $size),\n      })\n    }\n\n    function genCellContent() {\n      return h('div', {\n        class: 'v-data-table__cell-content',\n      }, slots.default && slots.default())\n    }\n\n    return () => {\n      const propsData = setTextColor(props.dark ? 'white' : '', {\n        class: classes.value,\n        style: {\n          width: convertToUnit(+props.width),\n        },\n      })\n\n      return h('div',\n        setBackground(props.color, propsData),\n        [genCellContent(), props.resizeable && genResize()],\n      )\n    }\n  },\n})\n"],"sourceRoot":"","file":"VDataTableCell.js"}