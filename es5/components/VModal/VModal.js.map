{"version":3,"sources":["../../../../src/components/VModal/VModal.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;AAGA;;AACA;;AACA;;;;;;;;AAKA,IAAM,WAAW;AACf,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADD;AAEL,eAAS;AAFJ,GADQ;AAKf,EAAA,IAAI,EAAE;AALS,GAMZ,+BANY,GAOZ,qCAPY,GAQZ,8BARY,CAAjB;;AAWO,IAAM,MAAM,GAAG,0BAAgB;AACpC,EAAA,IAAI,EAAE,SAD8B;AAGpC,EAAA,KAAK,EAAE,WAH6B;AAKpC,EAAA,KALoC,iBAK9B,KAL8B,QAKR;AAAA,QAAb,KAAa,QAAb,KAAa;AAAA,QAAN,IAAM,QAAN,IAAM;;AAAA,qBAEL,2BAAU,KAAV,CAFK;AAAA,QAElB,QAFkB,cAElB,QAFkB;;AAI1B,QAAI,KAAK,CAAC,OAAV,EAAmB;AACjB,UAAM,OAAO,GAAG,4BAAW,KAAX,EAAkB,SAAlB,CAAhB;AAEA,sBACE;AAAA,eAAM,QAAQ,CAAC,KAAf;AAAA,OADF,EAEE,UAAA,EAAE,EAAG;AACH,QAAA,EAAE,IAAI,OAAO,CAAC,aAAR,EAAN;AACA,SAAC,EAAD,IAAO,OAAO,CAAC,aAAR,EAAP;AACD,OALH;AAOD;;AAED,QAAM,UAAU,GAAG,SAAb,UAAa;AAAA,aACjB,YACE,KADF,EAEE;AACE,iBAAO;AACL,8BAAoB;AADf;AADT,OAFF,EAOE,KAAK,WAAL,IAAiB,KAAK,WAAL,EAPnB,CADiB;AAAA,KAAnB;;AAWA,QAAM,QAAQ,GAAG,SAAX,QAAW;AAAA,aACf,YACE,KADF,EAEE;AACE,iBAAO;AACL,qBAAW;AADN,SADT;AAIE,+BAAuB,4BAAA,GAAG;AAAA,iBAAI,IAAI,CAAC,mBAAD,EAAsB,GAAtB,CAAR;AAAA;AAJ5B,OAFF,EAQE,CAAC,OAAD,CARF,CADe;AAAA,KAAjB;;AAYA,QAAM,OAAO,GAAG,UAAU,EAA1B;AAEA,QAAI,KAAK,GAAG,QAAQ,EAApB;;AAEA,QAAI,CAAC,CAAC,KAAK,CAAC,UAAZ,EAAwB;AACtB,UAAM,iBAAiB,GAAG,kCAAc,KAAd,EAAqB,KAArB,CAA1B;AACA,MAAA,KAAK,GAAG,iBAAiB,EAAzB;AACD;;AAED,WAAO;AAAA,aAAM,yBAAe,YAAE,KAAF,CAAf,EAAyB,CAAC,CAAC,UAAD,EAAQ,QAAQ,CAAC,KAAjB,CAAD,CAAzB,CAAN;AAAA,KAAP;AACD;AAtDmC,CAAhB,CAAf","sourcesContent":["// Styles\nimport './VModal.scss'\n\n// Vue API\nimport { defineComponent, h, watch, withDirectives, vShow } from 'vue'\n\n// Effects\nimport { overlayProps, useOverlay } from '../../effects/use-overlay'\nimport { transitionProps, useTransition } from '../../effects/use-transition'\nimport { toggleProps, useToggle } from '@/effects/use-toggle'\n\n// Types\nimport { VNode } from 'vue'\n\nconst vModalProps: Record<string, any> = {\n  width: {\n    type: [String, Number],\n    default: 400,\n  },\n  show: Boolean,\n  ...overlayProps(),\n  ...transitionProps(),\n  ...toggleProps()\n}\n\nexport const VModal = defineComponent({\n  name: 'v-modal',\n\n  props: vModalProps,\n\n  setup(props, { slots, emit }) {\n\n    const { isActive } = useToggle(props)\n\n    if (props.overlay) {\n      const overlay = useOverlay(props, 'v-modal')\n\n      watch(\n        () => isActive.value,\n        to => {\n          to && overlay.createOverlay()\n          !to && overlay.removeOverlay()\n        },\n      )\n    }\n\n    const genContent = (): VNode =>\n      h(\n        'div',\n        {\n          class: {\n            'v-modal__content': true,\n          },\n        },\n        slots.default && slots.default(),\n      )\n\n    const genModal = () =>\n      h(\n        'div',\n        {\n          class: {\n            'v-modal': true,\n          },\n          'onUpdate:modelValue': val => emit('update:modelValue', val),\n        },\n        [content],\n      )\n\n    const content = genContent()\n\n    let modal = genModal()\n\n    if (!!props.transition) {\n      const transitionedModal = useTransition(props, modal)\n      modal = transitionedModal()\n    }\n\n    return () => withDirectives(h(modal), [[vShow, isActive.value]])\n  },\n})\n"],"sourceRoot":"","file":"VModal.js"}