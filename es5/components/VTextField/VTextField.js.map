{"version":3,"sources":["../../../../src/components/VTextField/VTextField.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VTextField.scss'\n\n// Vue API\nimport {\n  h,\n  inject,\n  watch,\n  computed,\n  reactive,\n  defineComponent,\n  onBeforeUnmount,\n} from 'vue'\n\n// Effects\nimport { useValidate, validateProps } from '../../effects/use-validate'\nimport { useColors, colorProps } from '../../effects/use-colors'\n\n// Components\nimport { VInput } from '../VInput'\n\n// Types\nimport { VNode, Ref } from 'vue'\n\ntype TextFieldState = {\n  value: string | number\n  focused: boolean\n}\n\nexport const VTextField = defineComponent({\n  name: 'v-text-field',\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    label: String,\n    isDirty: Boolean,\n    type: {\n      type: String,\n      default: 'text',\n    },\n    modelValue: [String, Number],\n    tag: {\n      type: String,\n      default: 'input',\n    },\n    ...validateProps(),\n    ...colorProps(),\n  } as any,\n\n  setup(props, { emit, attrs }): () => VNode {\n    const state: TextFieldState = reactive({\n      value: '',\n      focused: false,\n    })\n\n    state.value = props.modelValue\n\n    const fields: Ref<any[]> | undefined =\n      props.rules?.length && inject('fields')\n\n    const { setTextColor } = useColors()\n\n    const {\n      validate,\n      dirty,\n      update,\n      errorState,\n      validateClasses,\n      validationState,\n    } = useValidate(props)\n\n    watch(() => props.modelValue, value => {\n        state.value = value\n        !value && validateValue()\n      },\n    )\n\n    const classes = computed<Record<string, boolean>>(() => ({\n        'v-text-field': true,\n        'v-text-field--disabled': props.disabled,\n        'v-text-field--dirty': errorState.isDirty,\n        'v-text-field--valid': errorState.isDirty && !errorState.innerError,\n        'v-text-field--not-valid': errorState.isDirty && !!errorState.innerError,\n        ...validateClasses.value,\n      }),\n    )\n\n    function validateValue(): boolean | void {\n      return props.rules?.length && validate(state.value)\n    }\n\n    if (fields?.value && props.rules?.length) {\n      fields!.value.push(validateValue)\n    }\n\n    onBeforeUnmount(() => {\n      if (fields?.value) {\n        fields.value = fields.value.filter(v => v !== validateValue)\n      }\n    })\n\n    function focusHandler() {\n      dirty()\n      update(errorState.innerError)\n      state.focused = true\n      emit('focus')\n    }\n\n    function blurHandler() {\n      state.focused = false\n      emit('blur')\n      validateValue()\n    }\n\n    function inputHandler(e) {\n      state.value = e.target.value\n      emit('update:modelValue', state.value)\n    }\n\n    function genInput(): VNode {\n      const propsData = {\n        disabled: props.disabled,\n        value: state.value,\n        class: {\n          'v-text-field__input': true,\n        },\n        autocomplete: attrs.autocomplete,\n        onFocus: focusHandler,\n        onBlur: blurHandler,\n        onInput: inputHandler,\n      }\n\n      if (props.tag === 'input') {\n        (propsData as any).type = props.type\n      }\n\n      return h(props.tag,\n        props.dark\n          ? setTextColor('white', propsData)\n          : propsData,\n      )\n    }\n\n    function genTextField(): VNode {\n      return h('div', {\n          class: classes.value,\n        }, genInput(),\n      )\n    }\n\n    return () => {\n      const propsData = {\n        label: props.label,\n        focused: state.focused,\n        hasState: !!state.value,\n        hasError: errorState.innerError,\n        dark: props.dark,\n        color: validationState.value,\n        isDirty: errorState.isDirty,\n        disabled: props.disabled,\n        message: errorState.innerErrorMessage,\n      }\n\n      return h(VInput, propsData, {\n          textField: () => genTextField(),\n        },\n      )\n    }\n  },\n})\n"],"sourceRoot":"","file":"VTextField.js"}