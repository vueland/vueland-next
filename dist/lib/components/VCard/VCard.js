import { defineComponent, h, computed } from 'vue';
import { colorProps, useColors } from '../../composable/use-colors';
import { elevationProps, useElevation } from '../../composable/use-elevation';
export default defineComponent({
    name: 'v-card',
    props: {
        width: {
            type: [String, Number],
            default: 350,
        },
        ...colorProps(),
        ...elevationProps(),
    },
    setup(props, { slots }) {
        const { setBackgroundClassNameColor, setBackgroundCssColor } = useColors();
        const { elevationClasses } = useElevation(props);
        const classes = computed(() => ({
            'v-card': true,
            ...elevationClasses.value,
            ...(props.color ? setBackgroundClassNameColor(props.color) : {}),
        }));
        const styles = computed(() => ({
            width: `${props.width}px`,
            ...(props.color ? setBackgroundCssColor(props.color) : {}),
        }));
        function genCard() {
            const propsData = {
                class: classes.value,
                style: styles.value,
            };
            return h('div', propsData, slots.default && slots.default());
        }
        return () => genCard();
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVkNhcmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9WQ2FyZC9WQ2FyZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsZUFBZSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsTUFBTSxLQUFLLENBQUE7QUFHbEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQTtBQUNuRSxPQUFPLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBRSxNQUFNLGdDQUFnQyxDQUFBO0FBSzdFLGVBQWUsZUFBZSxDQUFDO0lBQzdCLElBQUksRUFBRSxRQUFRO0lBRWQsS0FBSyxFQUFFO1FBQ0wsS0FBSyxFQUFFO1lBQ0wsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQztZQUN0QixPQUFPLEVBQUUsR0FBRztTQUNiO1FBQ0QsR0FBRyxVQUFVLEVBQUU7UUFDZixHQUFHLGNBQWMsRUFBRTtLQUNiO0lBRVIsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRTtRQUNwQixNQUFNLEVBQUUsMkJBQTJCLEVBQUUscUJBQXFCLEVBQUUsR0FBRyxTQUFTLEVBQUUsQ0FBQTtRQUMxRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUE7UUFFaEQsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUN0QixHQUE0QixFQUFFLENBQUMsQ0FBQztZQUM5QixRQUFRLEVBQUUsSUFBSTtZQUNkLEdBQUcsZ0JBQWdCLENBQUMsS0FBSztZQUN6QixHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsMkJBQTJCLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7U0FDakUsQ0FBQyxDQUNILENBQUE7UUFFRCxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztZQUM3QixLQUFLLEVBQUUsR0FBSSxLQUFLLENBQUMsS0FBTSxJQUFJO1lBQzNCLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztTQUMzRCxDQUFDLENBQUMsQ0FBQTtRQUVILFNBQVMsT0FBTztZQUNkLE1BQU0sU0FBUyxHQUFHO2dCQUNoQixLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUs7Z0JBQ3BCLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSzthQUNwQixDQUFBO1lBQ0QsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxLQUFLLENBQUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFBO1FBQzlELENBQUM7UUFFRCxPQUFPLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQ3hCLENBQUM7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBWdWUgQVBJXG5pbXBvcnQgeyBkZWZpbmVDb21wb25lbnQsIGgsIGNvbXB1dGVkIH0gZnJvbSAndnVlJ1xuXG4vLyBDb21wb3NpdGlvbnNcbmltcG9ydCB7IGNvbG9yUHJvcHMsIHVzZUNvbG9ycyB9IGZyb20gJy4uLy4uL2NvbXBvc2FibGUvdXNlLWNvbG9ycydcbmltcG9ydCB7IGVsZXZhdGlvblByb3BzLCB1c2VFbGV2YXRpb24gfSBmcm9tICcuLi8uLi9jb21wb3NhYmxlL3VzZS1lbGV2YXRpb24nXG5cbi8vIFR5cGVzXG5pbXBvcnQgeyBWTm9kZSB9IGZyb20gJ3Z1ZSdcblxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHtcbiAgbmFtZTogJ3YtY2FyZCcsXG5cbiAgcHJvcHM6IHtcbiAgICB3aWR0aDoge1xuICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSxcbiAgICAgIGRlZmF1bHQ6IDM1MCxcbiAgICB9LFxuICAgIC4uLmNvbG9yUHJvcHMoKSxcbiAgICAuLi5lbGV2YXRpb25Qcm9wcygpLFxuICB9IGFzIGFueSxcblxuICBzZXR1cChwcm9wcywgeyBzbG90cyB9KTogKCkgPT4gVk5vZGUge1xuICAgIGNvbnN0IHsgc2V0QmFja2dyb3VuZENsYXNzTmFtZUNvbG9yLCBzZXRCYWNrZ3JvdW5kQ3NzQ29sb3IgfSA9IHVzZUNvbG9ycygpXG4gICAgY29uc3QgeyBlbGV2YXRpb25DbGFzc2VzIH0gPSB1c2VFbGV2YXRpb24ocHJvcHMpXG5cbiAgICBjb25zdCBjbGFzc2VzID0gY29tcHV0ZWQoXG4gICAgICAoKTogUmVjb3JkPHN0cmluZywgYm9vbGVhbj4gPT4gKHtcbiAgICAgICAgJ3YtY2FyZCc6IHRydWUsXG4gICAgICAgIC4uLmVsZXZhdGlvbkNsYXNzZXMudmFsdWUsXG4gICAgICAgIC4uLihwcm9wcy5jb2xvciA/IHNldEJhY2tncm91bmRDbGFzc05hbWVDb2xvcihwcm9wcy5jb2xvcikgOiB7fSksXG4gICAgICB9KSxcbiAgICApXG5cbiAgICBjb25zdCBzdHlsZXMgPSBjb21wdXRlZCgoKSA9PiAoe1xuICAgICAgd2lkdGg6IGAkeyBwcm9wcy53aWR0aCB9cHhgLFxuICAgICAgLi4uKHByb3BzLmNvbG9yID8gc2V0QmFja2dyb3VuZENzc0NvbG9yKHByb3BzLmNvbG9yKSA6IHt9KSxcbiAgICB9KSlcblxuICAgIGZ1bmN0aW9uIGdlbkNhcmQoKSB7XG4gICAgICBjb25zdCBwcm9wc0RhdGEgPSB7XG4gICAgICAgIGNsYXNzOiBjbGFzc2VzLnZhbHVlLFxuICAgICAgICBzdHlsZTogc3R5bGVzLnZhbHVlLFxuICAgICAgfVxuICAgICAgcmV0dXJuIGgoJ2RpdicsIHByb3BzRGF0YSwgc2xvdHMuZGVmYXVsdCAmJiBzbG90cy5kZWZhdWx0KCkpXG4gICAgfVxuXG4gICAgcmV0dXJuICgpID0+IGdlbkNhcmQoKVxuICB9LFxufSlcbiJdfQ==