{"version":3,"sources":["../../../../src/components/VDataTable/VDataTableBody.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;AAGA;;AAGA;;AACA;;;;;;;;AAKO,IAAM,cAAc,GAAG,0BAAgB;AAC5C,EAAA,IAAI,EAAE,mBADsC;AAG5C,EAAA,KAAK;AACH,IAAA,IAAI,EAAE,KADH;AAEH,IAAA,IAAI,EAAE,KAFH;AAGH,IAAA,IAAI,EAAE,OAHH;AAIH,IAAA,YAAY,EAAE,OAJX;AAKH,IAAA,YAAY,EAAE,OALX;AAMH,IAAA,YAAY,EAAE,OANX;AAOH,IAAA,KAAK,EAAE,MAPJ;AAQH,IAAA,QAAQ,EAAE;AACR,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADE;AAER,iBAAS;AAFD,KARP;AAYH,IAAA,IAAI,EAAE,MAZH;AAaH,IAAA,UAAU,EAAE;AAbT,KAcA,6BAdA,CAHuC;AAoB5C,EAAA,KAAK,EAAE,CACL,QADK,EAEL,WAFK,EAGL,cAHK,EAIL,iBAJK,CApBqC;AA2B5C,EAAA,KA3B4C,iBA2BtC,KA3BsC,QA8B3C;AAAA,QAFC,KAED,QAFC,KAED;AAAA,QADC,IACD,QADC,IACD;AACC,QAAM,WAAW,GAAG,cAAI,EAAJ,CAApB;;AAEA,qBAA0B,4BAA1B;AAAA,QAAQ,aAAR,cAAQ,aAAR;;AAEA,QAAM,OAAO,GAAG,mBAAkC;AAAA,aAAO;AACvD,8BAAsB;AADiC,OAAP;AAAA,KAAlC,CAAhB;AAIA,QAAM,WAAW,GAAG,mBAAgB,YAAK;AAAA;;AACvC,4BAAO,KAAK,CAAC,IAAb,gDAAO,YAAY,KAAZ,CACL,CAAC,KAAK,CAAC,IAAN,GAAa,CAAd,IAAmB,KAAK,CAAC,UADpB,EAEL,KAAK,CAAC,IAAN,GAAa,KAAK,CAAC,UAFd,CAAP;AAID,KALmB,CAApB;AAOA,oBACE;AAAA,aAAM,KAAK,CAAC,YAAZ;AAAA,KADF,EAEE,UAAC,EAAD,EAAO;AACL,UAAI,EAAJ,EAAQ,YAAY,CAAC,KAAK,CAAC,IAAP,CAAZ,CAAR,KACK,YAAY,CAAC,EAAD,CAAZ;AACN,KALH;;AAQA,aAAS,YAAT,CAAsB,IAAtB,EAA0B;AACxB,MAAA,WAAW,CAAC,KAAZ,GAAoB,IAApB;AACA,MAAA,IAAI,CAAC,QAAD,EAAW,WAAW,CAAC,KAAvB,CAAJ;AACD;;AAED,aAAS,aAAT,CAAuB,KAAvB,EAA4B;AAC1B,aAAO,YACL,8BADK,EAEL;AACE,QAAA,KAAK,EAAE,EADT;AAEE,QAAA,KAAK,EAAE,QAFT;AAGE,QAAA,IAAI,EAAE,KAAK,CAAC,IAHd;AAIE,QAAA,KAAK,EAAE,KAAK,CAAC,KAJf;AAKE,iBAAO;AALT,OAFK,EASL;AACE,mBAAS;AAAA,iBAAM,KAAK,GAAG,CAAd;AAAA;AADX,OATK,CAAP;AAaD;;AAED,aAAS,eAAT,CAAyB,GAAzB,EAA4B;AAC1B,aAAO,YACL,8BADK,EAEL;AACE,QAAA,KAAK,EAAE,EADT;AAEE,QAAA,KAAK,EAAE,QAFT;AAGE,QAAA,IAAI,EAAE,KAAK,CAAC,IAHd;AAIE,QAAA,KAAK,EAAE,KAAK,CAAC,KAJf;AAKE,iBAAO;AALT,OAFK,EASL;AACE,mBAAS;AAAA,iBACP,YAAE,oBAAF,EAAa;AACX,YAAA,UAAU,EAAE,WAAW,CAAC,KADb;AAEX,YAAA,KAAK,EAAE,KAAK,CAAC,IAAN,GAAa,OAAb,GAAuB,EAFnB;AAGX,YAAA,KAAK,EAAE,GAHI;AAIX,YAAA,SAAS,EAAE;AAJA,WAAb,CADO;AAAA;AADX,OATK,CAAP;AAmBD;;AAED,aAAS,UAAT,CAAoB,GAApB,EAAyB,GAAzB,EAA4B;AAC1B,UAAQ,MAAR,GAAmB,GAAnB,CAAQ,MAAR;AACA,UAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,GAAL,CAAL,IAAkB,KAAK,CAAC,GAAG,CAAC,GAAL,CAAL,CAAgB;AACpD,QAAA,GAAG,EAAH,GADoD;AAEpD,QAAA,MAAM,EAAN;AAFoD,OAAhB,CAAtC;AAKA,aAAO,YACL,8BADK,EAEL;AACE,QAAA,KAAK,EAAE,GAAG,CAAC,KADb;AAEE,QAAA,KAAK,EAAE,GAAG,CAAC,KAAJ,IAAa,KAAK,CAAC,KAF5B;AAGE,QAAA,IAAI,EAAE,KAAK,CAAC,IAHd;AAIE,qCAAU,GAAG,CAAC,YAAd,EAA6B,CAAC,CAAC,GAAG,CAAC,YAAnC;AAJF,OAFK,EAQL;AACE,mBAAS;AAAA,iBACP,WAAW,GACP,WADO,GAEP,MAAM,GACN,MAAM,CAAC,GAAD,CADA,GAEN,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAL,CAAJ,CALH;AAAA;AADX,OARK,CAAP;AAiBD;;AAED,aAAS,WAAT,CAAqB,GAArB,EAA0B,QAA1B,EAA0C;AACxC,UAAM,QAAQ,GAAY,EAA1B;AAEA,MAAA,KAAK,CAAC,YAAN,IAAsB,QAAQ,CAAC,IAAT,CAAc,aAAa,CAAC,QAAD,CAA3B,CAAtB;AACA,MAAA,KAAK,CAAC,YAAN,IAAsB,QAAQ,CAAC,IAAT,CAAc,eAAe,CAAC,GAAD,CAA7B,CAAtB;AAEA,MAAA,KAAK,CAAC,IAAN,CAAW,OAAX,CAAmB,UAAA,GAAG,EAAG;AACvB,QAAA,GAAG,CAAC,IAAJ,IAAY,QAAQ,CAAC,IAAT,CAAc,UAAU,CAAC,GAAD,EAAM,GAAN,CAAxB,CAAZ;AACD,OAFD;AAIA,aAAO,YAAE,KAAF,EAAS;AACd,iBAAO;AAAE,+BAAqB;AAAvB,SADO;AAEd,QAAA,OAAO,EAAE;AAAA,iBAAM,IAAI,CAAC,WAAD,EAAc,GAAd,CAAV;AAAA,SAFK;AAGd,QAAA,UAAU,EAAE;AAAA,iBAAM,IAAI,CAAC,cAAD,EAAiB,GAAjB,CAAV;AAAA,SAHE;AAId,QAAA,aAAa,EAAE,uBAAC,CAAD,EAAM;AACnB,UAAA,CAAC,CAAC,cAAF;AACA,UAAA,IAAI,CAAC,iBAAD,EAAoB,GAApB,CAAJ;AACD;AAPa,OAAT,EAQJ,QARI,CAAP;AASD;;AAED,aAAS,YAAT,GAAqB;AAAA;;AACnB,UAAM,SAAS,GAAY,EAA3B;AACA,UAAM,UAAU,yBAAG,WAAW,CAAC,KAAf,uDAAG,mBAAmB,MAAtC;AACA,UAAM,KAAK,GAAG,CAAC,KAAK,CAAC,IAAN,GAAa,CAAd,IAAmB,KAAK,CAAC,UAAvC;;AAEA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAApB,EAAgC,CAAC,IAAI,CAArC,EAAwC;AACtC,QAAA,SAAS,CAAC,IAAV,CAAe,WAAW,CAAC,WAAW,CAAC,KAAZ,CAAkB,CAAlB,CAAD,EAAuB,KAAK,GAAG,CAA/B,CAA1B;AACD;;AAED,aAAO,SAAP;AACD;;AAED,WAAO,YAAK;AAAA;;AACV,UAAM,SAAS,GAAG;AAChB,iBAAO,OAAO,CAAC;AADC,OAAlB;AAIA,aAAO,YACL,KADK,EAEL,kBAAA,KAAK,CAAC,OAAN,0DAAe,KAAf,GACI,aAAa,CAAC,KAAK,CAAC,OAAN,CAAc,KAAf,EAAsB,SAAtB,CADjB,GAEI,SAJC,EAKL,YAAY,EALP,CAAP;AAOD,KAZD;AAaD;AAzK2C,CAAhB,CAAvB","sourcesContent":["// Styles\nimport './VDataTableBody.scss'\n\n// Vue API\nimport { h, ref, watch, computed, defineComponent } from 'vue'\n\n// Effects\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Components\nimport { VDataTableCell } from './VDataTableCell'\nimport { VCheckbox } from '../VCheckbox'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VDataTableBody = defineComponent({\n  name: 'v-data-table-body',\n\n  props: {\n    cols: Array,\n    rows: Array,\n    dark: Boolean,\n    showSequence: Boolean,\n    showCheckbox: Boolean,\n    checkAllRows: Boolean,\n    align: String,\n    colWidth: {\n      type: [String, Number],\n      default: 125\n    },\n    page: Number,\n    rowsOnPage: Number,\n    ...colorProps()\n  } as any,\n\n  emits: [\n    'select',\n    'click:row',\n    'dblclick:row',\n    'contextmenu:row'\n  ],\n\n  setup(props, {\n    slots,\n    emit\n  }): () => VNode {\n    const checkedRows = ref([])\n\n    const { setBackground } = useColors()\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-data-table__body': true\n    }))\n\n    const rowsOnTable = computed<any[]>(() => {\n      return props.rows?.slice(\n        (props.page - 1) * props.rowsOnPage,\n        props.page * props.rowsOnPage\n      )\n    })\n\n    watch(\n      () => props.checkAllRows,\n      (to) => {\n        if (to) onSelectRows(props.rows)\n        else onSelectRows([])\n      }\n    )\n\n    function onSelectRows(rows) {\n      checkedRows.value = rows\n      emit('select', checkedRows.value)\n    }\n\n    function genNumberCell(count): VNode {\n      return h(\n        VDataTableCell,\n        {\n          width: 50,\n          align: 'center',\n          dark: props.dark,\n          color: props.color,\n          class: 'v-data-table__row-number'\n        },\n        {\n          default: () => count + 1\n        }\n      )\n    }\n\n    function genCheckboxCell(row): VNode {\n      return h(\n        VDataTableCell,\n        {\n          width: 50,\n          align: 'center',\n          dark: props.dark,\n          color: props.color,\n          class: 'v-data-table__row-checkbox'\n        },\n        {\n          default: () =>\n            h(VCheckbox, {\n              modelValue: checkedRows.value,\n              color: props.dark ? 'white' : '',\n              value: row,\n              onChecked: onSelectRows\n            })\n        }\n      )\n    }\n\n    function genRowCell(col, row): VNode {\n      const { format } = col\n      const slotContent = slots[col.key] && slots[col.key]!({\n        row,\n        format\n      })\n\n      return h(\n        VDataTableCell,\n        {\n          width: col.width,\n          align: col.align || props.align,\n          dark: props.dark,\n          class: { [col.rowCellClass]: !!col.rowCellClass }\n        },\n        {\n          default: () =>\n            slotContent\n              ? slotContent\n              : format\n              ? format(row)\n              : String(row[col.key])\n        }\n      )\n    }\n\n    function genTableRow(row, rowCount: number): VNode {\n      const rowCells: VNode[] = []\n\n      props.showSequence && rowCells.push(genNumberCell(rowCount))\n      props.showCheckbox && rowCells.push(genCheckboxCell(row))\n\n      props.cols.forEach(col => {\n        col.show && rowCells.push(genRowCell(col, row))\n      })\n\n      return h('div', {\n        class: { 'v-data-table__row': true },\n        onClick: () => emit('click:row', row),\n        onDblclick: () => emit('dblclick:row', row),\n        onContextmenu: (e) => {\n          e.preventDefault()\n          emit('contextmenu:row', row)\n        }\n      }, rowCells)\n    }\n\n    function genTableRows(): VNode[] {\n      const tableRows: VNode[] = []\n      const rowsLength = rowsOnTable.value?.length\n      const count = (props.page - 1) * props.rowsOnPage\n\n      for (let i = 0; i < rowsLength; i += 1) {\n        tableRows.push(genTableRow(rowsOnTable.value[i], count + i))\n      }\n\n      return tableRows\n    }\n\n    return () => {\n      const propsData = {\n        class: classes.value\n      }\n\n      return h(\n        'div',\n        props.options?.color\n          ? setBackground(props.options.color, propsData)\n          : propsData,\n        genTableRows()\n      )\n    }\n  }\n})\n"],"sourceRoot":"","file":"VDataTableBody.js"}