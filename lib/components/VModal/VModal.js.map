{"version":3,"sources":["../../../../src/components/VModal/VModal.ts"],"names":[],"mappings":"AACA,OAAO,4CAAP;AAGA,SACE,CADF,EAEE,GAFF,EAGE,KAHF,EAIE,cAJF,EAKE,eALF,EAME,KANF,EAOE,SAPF,QAQO,KARP;AAWA,SAAS,YAAT,EAAuB,UAAvB,QAAyC,2BAAzC;AACA,SAAS,eAAT,EAA0B,aAA1B,QAA+C,8BAA/C;AACA,SAAS,SAAT,QAA0B,0BAA1B;AAKA,OAAO,MAAM,MAAM,GAAG,eAAe,CAAC;AACpC,EAAA,IAAI,EAAE,SAD8B;AAGpC,EAAA,KAAK,EAAE;AACL,IAAA,UAAU,EAAE,OADP;AAEL,OAAG,YAAY,EAFV;AAGL,OAAG,eAAe;AAHb,GAH6B;;AASpC,EAAA,KAAK,CAAC,KAAD,EAAQ;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,GAAR,EAAuB;AAC1B,UAAM;AAAE,MAAA;AAAF,QAAe,SAAS,CAAC,KAAD,CAA9B;AAEA,UAAM,QAAQ,GAAG,GAAG,CAAC,IAAD,CAApB;AAEA,IAAA,SAAS,CAAC,MAAK;AACb,UAAI,KAAK,CAAC,OAAV,EAAmB;AACjB,cAAM;AACJ,UAAA,aADI;AAEJ,UAAA;AAFI,YAGF,UAAU,CAAC,KAAD,EAAQ,QAAQ,CAAC,KAAjB,CAHd;AAKA,QAAA,QAAQ,CAAC,KAAT,IAAkB,aAAa,EAA/B;AAEA,QAAA,KAAK,CACH,MAAM,QAAQ,CAAC,KADZ,EAEH,EAAE,IAAG;AACH,UAAA,EAAE,IAAI,aAAa,EAAnB;AACA,WAAC,EAAD,IAAO,aAAa,EAApB;AACD,SALE,CAAL;AAOD;AACF,KAjBQ,CAAT;;AAmBA,aAAS,UAAT,GAAmB;AACjB,YAAM,SAAS,GAAG;AAChB,QAAA,KAAK,EAAE;AADS,OAAlB;AAGA,aAAO,CAAC,CAAC,KAAD,EAAQ,SAAR,EAAmB,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,EAApC,CAAR;AACD;;AAED,aAAS,QAAT,GAAiB;AACf,YAAM,SAAS,GAAG;AAChB,QAAA,KAAK,EAAE,SADS;AAEhB,QAAA,GAAG,EAAE,QAFW;AAGhB,SAAC,qBAAD,GAAyB,GAAG,IAAI,IAAI,CAAC,mBAAD,EAAsB,GAAtB;AAHpB,OAAlB;AAMA,aAAO,cAAc,CACnB,CAAC,CAAC,KAAD,EAAQ,SAAR,EAAmB,UAAU,EAA7B,CADkB,EAEnB,CAAC,CAAC,KAAD,EAAQ,QAAQ,CAAC,KAAjB,CAAD,CAFmB,CAArB;AAID;;AAED,WAAO,MAAM,aAAa,CAAC,QAAQ,EAAT,EAAa,KAAK,CAAC,UAAnB,CAA1B;AACD;;AAtDmC,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VModal.scss'\n\n// Vue API\nimport {\n  h,\n  ref,\n  watch,\n  withDirectives,\n  defineComponent,\n  vShow,\n  onMounted,\n} from 'vue'\n\n// Effects\nimport { overlayProps, useOverlay } from '../../effects/use-overlay'\nimport { transitionProps, useTransition } from '../../effects/use-transition'\nimport { useToggle } from '../../effects/use-toggle'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VModal = defineComponent({\n  name: 'v-modal',\n\n  props: {\n    modelValue: Boolean,\n    ...overlayProps(),\n    ...transitionProps(),\n  } as any,\n\n  setup(props, { slots, emit }) {\n    const { isActive } = useToggle(props)\n\n    const modalRef = ref(null)\n\n    onMounted(() => {\n      if (props.overlay) {\n        const {\n          createOverlay,\n          removeOverlay\n        } = useOverlay(props, modalRef.value!,)\n\n        isActive.value && createOverlay()\n\n        watch(\n          () => isActive.value,\n          to => {\n            to && createOverlay()\n            !to && removeOverlay()\n          },\n        )\n      }\n    })\n\n    function genContent(): VNode {\n      const propsData = {\n        class: 'v-modal__content',\n      }\n      return h('div', propsData, slots.default && slots.default())\n    }\n\n    function genModal() {\n      const propsData = {\n        class: 'v-modal',\n        ref: modalRef,\n        ['onUpdate:modelValue']: val => emit('update:modelValue', val),\n      }\n\n      return withDirectives(\n        h('div', propsData, genContent()),\n        [[vShow, isActive.value]],\n      )\n    }\n\n    return () => useTransition(genModal(), props.transition)\n  },\n})\n"],"sourceRoot":"","file":"VModal.js"}