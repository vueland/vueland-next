{"version":3,"sources":["../../../src/effects/use-activator.ts"],"names":[],"mappings":"AACA,SAAS,GAAT,QAAoB,KAApB;AAiBA,OAAM,SAAU,YAAV,GAAsB;AAC1B,QAAM,YAAY,GAAG,GAAG,CAAqB,IAArB,CAAxB;AACA,QAAM,cAAc,GAAyB,EAA7C;AACA,QAAM,SAAS,GAAuB,EAAtC;;AAEA,QAAM,iBAAiB,GAAG,MAAK;AAAA;;AAC7B,IAAA,cAAc,CAAC,IAAf,0BAAsB,YAAY,CAAC,KAAnC,wDAAsB,oBAAoB,UAA1C;AACA,IAAA,cAAc,CAAC,GAAf,2BAAqB,YAAY,CAAC,KAAlC,yDAAqB,qBAAoB,SAAzC;AACA,IAAA,cAAc,CAAC,MAAf,2BAAwB,YAAY,CAAC,KAArC,yDAAwB,qBAAoB,YAA5C;AACA,IAAA,cAAc,CAAC,KAAf,2BAAuB,YAAY,CAAC,KAApC,yDAAuB,qBAAoB,WAA3C;AAEA,WAAO,cAAP;AACD,GAPD;;AASA,QAAM,qBAAqB,GAAG,CAAC,KAAD,EAAQ,QAAR,KAAoB;AAChD,QAAI,KAAK,CAAC,WAAV,EAAuB;AACrB,MAAA,SAAS,CAAC,UAAV,GAAuB,MAAK;AAC1B,QAAA,QAAQ,CAAC,KAAT,GAAiB,IAAjB;AACD,OAFD;;AAIA,MAAA,SAAS,CAAC,UAAV,GAAuB,MAAK;AAC1B,QAAA,QAAQ,CAAC,KAAT,GAAiB,KAAjB;AACD,OAFD;AAGD;;AAED,WAAO,SAAP;AACD,GAZD;;AAcA,QAAM,kBAAkB,GAAG,MAAK;AAC9B,UAAM,MAAM,GAAG,MAAM,CAAC,IAAP,CAAY,SAAZ,CAAf;;AAEA,QAAI,YAAY,CAAC,KAAjB,EAAwB;AACtB,MAAA,MAAM,CAAC,OAAP,CAAe,GAAG,IAAG;AACnB,QAAA,YAAY,CAAC,KAAb,CAAoB,gBAApB,CAAqC,GAArC,EAA0C,SAAS,CAAC,GAAD,CAAnD;AACD,OAFD;AAGD;AACF,GARD;;AAUA,QAAM,qBAAqB,GAAG,MAAK;AACjC,UAAM,MAAM,GAAG,MAAM,CAAC,IAAP,CAAY,SAAZ,CAAf;;AAEA,QAAI,YAAY,CAAC,KAAjB,EAAwB;AACtB,MAAA,MAAM,CAAC,OAAP,CAAe,GAAG,IAAG;AACnB,QAAA,YAAY,CAAC,KAAb,CAAoB,mBAApB,CAAwC,GAAxC,EAA6C,SAAS,CAAC,GAAD,CAAtD;AACD,OAFD;AAGD;AACF,GARD;;AAUA,SAAO;AACL,IAAA,YADK;AAEL,IAAA,iBAFK;AAGL,IAAA,kBAHK;AAIL,IAAA,qBAJK;AAKL,IAAA;AALK,GAAP;AAOD","sourcesContent":["// Vue API\nimport { ref } from 'vue'\n\n// Types\nimport { OffsetSizes } from '../types'\n\ntype ActivatorListeners = {\n  mouseenter?: (e: Event) => void\n  mouseleave?: (e: Event) => void\n  mouseover?: (e: Event) => void\n  mouseout?: (e: Event) => void\n  focus?: (e: Event) => void\n  blur?: (e: Event) => void\n  click?: (e: Event) => void\n  input?: (e: Event) => void\n  change?: (e: Event) => void\n}\n\nexport function useActivator() {\n  const activatorRef = ref<HTMLElement | null>(null)\n  const activatorSizes: Partial<OffsetSizes> = {}\n  const listeners: ActivatorListeners = {}\n\n  const getActivatorSizes = () => {\n    activatorSizes.left = activatorRef.value?.offsetLeft\n    activatorSizes.top = activatorRef.value?.offsetTop\n    activatorSizes.height = activatorRef.value?.offsetHeight\n    activatorSizes.width = activatorRef.value?.offsetWidth\n\n    return activatorSizes\n  }\n\n  const genActivatorListeners = (props, isActive) => {\n    if (props.openOnHover) {\n      listeners.mouseenter = () => {\n        isActive.value = true\n      }\n\n      listeners.mouseleave = () => {\n        isActive.value = false\n      }\n    }\n\n    return listeners\n  }\n\n  const addActivatorEvents = () => {\n    const events = Object.keys(listeners)\n\n    if (activatorRef.value) {\n      events.forEach(key => {\n        activatorRef.value!.addEventListener(key, listeners[key])\n      })\n    }\n  }\n\n  const removeActivatorEvents = () => {\n    const events = Object.keys(listeners)\n\n    if (activatorRef.value) {\n      events.forEach(key => {\n        activatorRef.value!.removeEventListener(key, listeners[key])\n      })\n    }\n  }\n\n  return {\n    activatorRef,\n    getActivatorSizes,\n    addActivatorEvents,\n    removeActivatorEvents,\n    genActivatorListeners,\n  }\n}\n"],"sourceRoot":"","file":"use-activator.js"}