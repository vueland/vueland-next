{"version":3,"sources":["../../../src/effects/use-overlay.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,KAAvB;AAGA,SAAS,QAAT,QAAyB,eAAzB;AAOA,SAAS,eAAT,QAAgC,WAAhC;AAOA,MAAM,OAAO,GAAG,EAAhB;AAEA,OAAM,SAAU,YAAV,GAAsB;AAC1B,SAAO;AACL,IAAA,OAAO,EAAE,OADJ;AAEL,IAAA,YAAY,EAAE;AACZ,MAAA,IAAI,EAAE,MADM;AAEZ,MAAA,OAAO,EAAE;AAFG;AAFT,GAAP;AAOD;AAED,OAAM,SAAU,UAAV,CAAqB,KAArB,EAAmC,SAAnC,EAAsD;AAC1D,QAAM,SAAS,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAlB;AAEA,QAAM,kBAAkB,GAAU;AAChC,IAAA,MAAM,EAAE,KADwB;AAEhC,IAAA,IAAI,EAAE,IAF0B;AAGhC,IAAA,KAAK,EAAE,KAAK,CAAC;AAHmB,GAAlC;;AAMA,QAAM,YAAY,GAAG,MAAK;AACxB,WAAO,QAAQ,CAAC,KAAT,CACL,kBADK,EAEL,EAFK,CAAP;AAID,GALD;;AAOA,QAAM,aAAa,GAAG,MAAK;AACzB,IAAA,MAAM,CAAC,YAAY,EAAb,EAA0B,SAA1B,CAAN;AACD,GAFD;;AAIA,EAAA,aAAa;AACb,QAAM,cAAc,GAAG,SAAS,CAAC,UAAjC;;AAEA,QAAM,aAAa,GAAG,MAAK;AAAA;;AACzB,IAAA,SAAS,SAAT,IAAA,SAAS,WAAT,qCAAA,SAAS,CAAE,UAAX,gFAAuB,YAAvB,CAAoC,cAApC,EAAqD,SAArD;AAEA,IAAA,UAAU,CAAC,MAAK;AACd,MAAA,kBAAkB,CAAC,MAAnB,GAA4B,IAA5B;AACA,MAAA,kBAAkB,CAAC,IAAnB,GAA0B,CAAC,KAAK,CAAC,OAAjC;AACA,MAAA,aAAa;AACd,KAJS,EAIP,OAJO,CAAV;AAKD,GARD;;AAUA,QAAM,aAAa,GAAG,MAAK;AACzB,IAAA,kBAAkB,CAAC,MAAnB,GAA4B,KAA5B;AAEA,IAAA,aAAa;;AAEb,UAAM,MAAM,GAAG,MAAK;AAAA;;AAClB,MAAA,SAAS,SAAT,IAAA,SAAS,WAAT,sCAAA,SAAS,CAAE,UAAX,kFAAuB,WAAvB,CAAmC,cAAnC;AACD,KAFD;;AAIA,IAAA,eAAe,CAAC,cAAD,EAAkB,eAAlB,EAAmC,MAAnC,CAAf;AACD,GAVD;;AAYA,SAAO;AACL,IAAA,aADK;AAEL,IAAA;AAFK,GAAP;AAID","sourcesContent":["import { render } from \"vue\";\n\n// Components\nimport { VOverlay } from \"../components\";\n\n// Types\nimport { Props } from \"../types\";\nimport { SetupContext, VNode } from \"vue\";\n\n// Helpers\nimport { addOnceListener } from \"@/helpers\";\n\ninterface Overlayable {\n  createOverlay: () => void;\n  removeOverlay: () => void;\n}\n\nconst TIMEOUT = 40;\n\nexport function overlayProps(): Props {\n  return {\n    overlay: Boolean,\n    overlayColor: {\n      type: String,\n      default: \"#000000\",\n    },\n  };\n}\n\nexport function useOverlay(props: Props, overlayOn?: Element): Overlayable {\n  const container = document.createElement(\"div\");\n\n  const overlayPropsObject: Props = {\n    active: false,\n    hide: true,\n    color: props.overlayColor,\n  };\n\n  const overlayVNode = () => {\n    return VOverlay.setup!(\n      overlayPropsObject as typeof VOverlay.props,\n      {} as SetupContext\n    );\n  };\n\n  const renderOverlay = () => {\n    render(overlayVNode() as VNode, container!);\n  };\n\n  renderOverlay();\n  const overlayElement = container.firstChild;\n\n  const createOverlay = () => {\n    overlayOn?.parentNode?.insertBefore(overlayElement!, overlayOn);\n\n    setTimeout(() => {\n      overlayPropsObject.active = true;\n      overlayPropsObject.hide = !props.overlay;\n      renderOverlay();\n    }, TIMEOUT);\n  };\n\n  const removeOverlay = () => {\n    overlayPropsObject.active = false;\n\n    renderOverlay();\n\n    const remove = () => {\n      overlayOn?.parentNode?.removeChild(overlayElement!);\n    };\n\n    addOnceListener(overlayElement!, \"transitionend\", remove);\n  };\n\n  return {\n    createOverlay,\n    removeOverlay,\n  };\n}\n"],"sourceRoot":"","file":"use-overlay.js"}