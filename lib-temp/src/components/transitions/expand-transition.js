const init = {
    transition: null,
    propSize: '',
    height: 0,
    width: 0,
};
const resetStyles = el => {
    el.style[init.propSize] = '';
    el.style.transition = '';
};
const getChildrenSizes = el => {
    return Array.prototype.reduce.call(el.children, (acc, it) => {
        const height = getComputedStyle(it)[init.propSize];
        return (acc += parseFloat(height));
    }, 0);
};
const setInitStyles = el => {
    init.transition = getComputedStyle(el).transition;
    init[init.propSize] = getChildrenSizes(el);
};
export const expandHooks = (expandedParentClass, x = false) => {
    return {
        onBeforeEnter(el) {
            init.propSize = x ? 'width' : 'height';
            el.style.transition = '';
        },
        onEnter(el) {
            setInitStyles(el);
            el.style[init.propSize] = '0';
            el.style.transition = init.transition;
            requestAnimationFrame(() => {
                el.style[init.propSize] = `${init[init.propSize]}px`;
            });
            if (expandedParentClass) {
                el.parentNode.classList.add(expandedParentClass);
            }
        },
        onAfterEnter(el) {
            el.parentNode.classList.remove(expandedParentClass);
            resetStyles(el);
        },
        onBeforeLeave(el) {
            setInitStyles(el);
        },
        onLeave(el) {
            el.style.transition = init.transition;
            el.style[init.propSize] = `${init[init.propSize]}px`;
            requestAnimationFrame(() => (el.style[init.propSize] = '0'));
        },
        onAfterLeave(el) {
            requestAnimationFrame(() => resetStyles(el));
        },
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5kLXRyYW5zaXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy90cmFuc2l0aW9ucy9leHBhbmQtdHJhbnNpdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxNQUFNLElBQUksR0FBa0I7SUFDMUIsVUFBVSxFQUFFLElBQUk7SUFDaEIsUUFBUSxFQUFFLEVBQUU7SUFDWixNQUFNLEVBQUUsQ0FBQztJQUNULEtBQUssRUFBRSxDQUFDO0NBQ1QsQ0FBQTtBQUVELE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZCLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtJQUM1QixFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUE7QUFDMUIsQ0FBQyxDQUFBO0FBRUQsTUFBTSxnQkFBZ0IsR0FBRyxFQUFFLENBQUMsRUFBRTtJQUM1QixPQUFPLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FDaEMsRUFBRSxDQUFDLFFBQVEsRUFDWCxDQUFDLEdBQVcsRUFBRSxFQUFlLEVBQUUsRUFBRTtRQUMvQixNQUFNLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUE7UUFFbEQsT0FBTyxDQUFDLEdBQUcsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQTtJQUNwQyxDQUFDLEVBQ0QsQ0FBQyxDQUNRLENBQUE7QUFDYixDQUFDLENBQUE7QUFFRCxNQUFNLGFBQWEsR0FBRyxFQUFFLENBQUMsRUFBRTtJQUN6QixJQUFJLENBQUMsVUFBVSxHQUFHLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQTtJQUNqRCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQzVDLENBQUMsQ0FBQTtBQUVELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUN6QixtQkFBMkIsRUFDM0IsSUFBYSxLQUFLLEVBQ2xCLEVBQUU7SUFDRixPQUFPO1FBQ0wsYUFBYSxDQUFDLEVBQUU7WUFDZCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUE7WUFDdEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFBO1FBQzFCLENBQUM7UUFFRCxPQUFPLENBQUMsRUFBRTtZQUNSLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQTtZQUNqQixFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxHQUFHLENBQUE7WUFDN0IsRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQTtZQUVyQyxxQkFBcUIsQ0FBQyxHQUFHLEVBQUU7Z0JBQ3pCLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFBO1lBQ3RELENBQUMsQ0FBQyxDQUFBO1lBRUYsSUFBSSxtQkFBbUIsRUFBRTtnQkFDdkIsRUFBRSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUE7YUFDakQ7UUFDSCxDQUFDO1FBRUQsWUFBWSxDQUFDLEVBQUU7WUFDYixFQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQTtZQUNuRCxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUE7UUFDakIsQ0FBQztRQUVELGFBQWEsQ0FBQyxFQUFFO1lBQ2QsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ25CLENBQUM7UUFFRCxPQUFPLENBQUMsRUFBRTtZQUNSLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUE7WUFDckMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUE7WUFFcEQscUJBQXFCLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQzlELENBQUM7UUFFRCxZQUFZLENBQUMsRUFBRTtZQUNiLHFCQUFxQixDQUFDLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBQzlDLENBQUM7S0FDRixDQUFBO0FBQ0gsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIEluaXRpYWxTdHlsZXMge1xuICB0cmFuc2l0aW9uOiBzdHJpbmcgfCBudWxsXG4gIHByb3BTaXplOiBzdHJpbmdcbiAgaGVpZ2h0PzogbnVtYmVyXG4gIHdpZHRoPzogbnVtYmVyXG59XG5cbmNvbnN0IGluaXQ6IEluaXRpYWxTdHlsZXMgPSB7XG4gIHRyYW5zaXRpb246IG51bGwsXG4gIHByb3BTaXplOiAnJyxcbiAgaGVpZ2h0OiAwLFxuICB3aWR0aDogMCxcbn1cblxuY29uc3QgcmVzZXRTdHlsZXMgPSBlbCA9PiB7XG4gIGVsLnN0eWxlW2luaXQucHJvcFNpemVdID0gJydcbiAgZWwuc3R5bGUudHJhbnNpdGlvbiA9ICcnXG59XG5cbmNvbnN0IGdldENoaWxkcmVuU2l6ZXMgPSBlbCA9PiB7XG4gIHJldHVybiBBcnJheS5wcm90b3R5cGUucmVkdWNlLmNhbGwoXG4gICAgZWwuY2hpbGRyZW4sXG4gICAgKGFjYzogbnVtYmVyLCBpdDogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgIGNvbnN0IGhlaWdodCA9IGdldENvbXB1dGVkU3R5bGUoaXQpW2luaXQucHJvcFNpemVdXG5cbiAgICAgIHJldHVybiAoYWNjICs9IHBhcnNlRmxvYXQoaGVpZ2h0KSlcbiAgICB9LFxuICAgIDAsXG4gICkgYXMgbnVtYmVyXG59XG5cbmNvbnN0IHNldEluaXRTdHlsZXMgPSBlbCA9PiB7XG4gIGluaXQudHJhbnNpdGlvbiA9IGdldENvbXB1dGVkU3R5bGUoZWwpLnRyYW5zaXRpb25cbiAgaW5pdFtpbml0LnByb3BTaXplXSA9IGdldENoaWxkcmVuU2l6ZXMoZWwpXG59XG5cbmV4cG9ydCBjb25zdCBleHBhbmRIb29rcyA9IChcbiAgZXhwYW5kZWRQYXJlbnRDbGFzczogc3RyaW5nLFxuICB4OiBib29sZWFuID0gZmFsc2UsXG4pID0+IHtcbiAgcmV0dXJuIHtcbiAgICBvbkJlZm9yZUVudGVyKGVsKSB7XG4gICAgICBpbml0LnByb3BTaXplID0geCA/ICd3aWR0aCcgOiAnaGVpZ2h0J1xuICAgICAgZWwuc3R5bGUudHJhbnNpdGlvbiA9ICcnXG4gICAgfSxcblxuICAgIG9uRW50ZXIoZWwpIHtcbiAgICAgIHNldEluaXRTdHlsZXMoZWwpXG4gICAgICBlbC5zdHlsZVtpbml0LnByb3BTaXplXSA9ICcwJ1xuICAgICAgZWwuc3R5bGUudHJhbnNpdGlvbiA9IGluaXQudHJhbnNpdGlvblxuXG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICBlbC5zdHlsZVtpbml0LnByb3BTaXplXSA9IGAke2luaXRbaW5pdC5wcm9wU2l6ZV19cHhgXG4gICAgICB9KVxuXG4gICAgICBpZiAoZXhwYW5kZWRQYXJlbnRDbGFzcykge1xuICAgICAgICBlbC5wYXJlbnROb2RlLmNsYXNzTGlzdC5hZGQoZXhwYW5kZWRQYXJlbnRDbGFzcylcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgb25BZnRlckVudGVyKGVsKSB7XG4gICAgICBlbC5wYXJlbnROb2RlLmNsYXNzTGlzdC5yZW1vdmUoZXhwYW5kZWRQYXJlbnRDbGFzcylcbiAgICAgIHJlc2V0U3R5bGVzKGVsKVxuICAgIH0sXG5cbiAgICBvbkJlZm9yZUxlYXZlKGVsKSB7XG4gICAgICBzZXRJbml0U3R5bGVzKGVsKVxuICAgIH0sXG5cbiAgICBvbkxlYXZlKGVsKSB7XG4gICAgICBlbC5zdHlsZS50cmFuc2l0aW9uID0gaW5pdC50cmFuc2l0aW9uXG4gICAgICBlbC5zdHlsZVtpbml0LnByb3BTaXplXSA9IGAke2luaXRbaW5pdC5wcm9wU2l6ZV19cHhgXG5cbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiAoZWwuc3R5bGVbaW5pdC5wcm9wU2l6ZV0gPSAnMCcpKVxuICAgIH0sXG5cbiAgICBvbkFmdGVyTGVhdmUoZWwpIHtcbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiByZXNldFN0eWxlcyhlbCkpXG4gICAgfSxcbiAgfVxufVxuIl19