import { render, h } from 'vue';
import { VOverlay } from '../components/VOverlay';
import { addOnceListener } from '../helpers';
export const overlayProps = () => ({
    overlay: Boolean,
    overlayColor: {
        type: String,
        default: '#000000'
    }
});
export function useOverlay(props, overlayOn) {
    const container = document.createElement('div');
    let overlayElement = null;
    const renderOverlay = () => render(h(VOverlay, {
        active: false,
        color: props.overlayColor
    }), container);
    const createOverlay = () => {
        overlayElement.style.zIndex = '99';
        overlayOn.style.zIndex = '100';
        overlayOn?.parentNode?.insertBefore(overlayElement, overlayOn);
        overlayElement?.classList.remove('v-overlay--hidden');
        requestAnimationFrame(() => {
            overlayElement?.classList.add('v-overlay--active');
        });
    };
    const removeOverlay = () => {
        overlayElement.classList.remove('v-overlay--active');
        requestAnimationFrame(() => {
            overlayElement?.classList.add('v-overlay--hidden');
        });
        const remove = () => {
            overlayElement?.parentNode?.removeChild(overlayElement);
        };
        addOnceListener(overlayElement, 'transitionend', remove);
    };
    renderOverlay();
    overlayElement = container.firstChild;
    return {
        createOverlay,
        removeOverlay
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLW92ZXJsYXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9zYWJsZS91c2Utb3ZlcmxheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEtBQUssQ0FBQTtBQUcvQixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sd0JBQXdCLENBQUE7QUFJakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFlBQVksQ0FBQTtBQU81QyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUNqQyxPQUFPLEVBQUUsT0FBTztJQUNoQixZQUFZLEVBQUU7UUFDWixJQUFJLEVBQUUsTUFBTTtRQUNaLE9BQU8sRUFBRSxTQUFTO0tBQ25CO0NBQ0YsQ0FBQyxDQUFBO0FBRUYsTUFBTSxVQUFVLFVBQVUsQ0FBQyxLQUFVLEVBQUUsU0FBdUI7SUFDNUQsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUUvQyxJQUFJLGNBQWMsR0FBdUIsSUFBSSxDQUFBO0lBRTdDLE1BQU0sYUFBYSxHQUFHLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFO1FBQzdDLE1BQU0sRUFBRSxLQUFLO1FBQ2IsS0FBSyxFQUFFLEtBQUssQ0FBQyxZQUFZO0tBQzFCLENBQUMsRUFBRSxTQUFVLENBQUMsQ0FBQTtJQUVmLE1BQU0sYUFBYSxHQUFHLEdBQUcsRUFBRTtRQUN6QixjQUFlLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUE7UUFDbkMsU0FBVSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFBO1FBRS9CLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxDQUFDLGNBQWUsRUFBRSxTQUFTLENBQUMsQ0FBQTtRQUMvRCxjQUFjLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBO1FBRXJELHFCQUFxQixDQUFDLEdBQUcsRUFBRTtZQUN6QixjQUFjLEVBQUUsU0FBUyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBO1FBQ3BELENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQyxDQUFBO0lBRUQsTUFBTSxhQUFhLEdBQUcsR0FBRyxFQUFFO1FBQ3pCLGNBQWUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUE7UUFFckQscUJBQXFCLENBQUMsR0FBRyxFQUFFO1lBQ3pCLGNBQWMsRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUE7UUFDcEQsQ0FBQyxDQUFDLENBQUE7UUFFRixNQUFNLE1BQU0sR0FBRyxHQUFHLEVBQUU7WUFDbEIsY0FBYyxFQUFFLFVBQVUsRUFBRSxXQUFXLENBQUMsY0FBZSxDQUFDLENBQUE7UUFDMUQsQ0FBQyxDQUFBO1FBRUQsZUFBZSxDQUFDLGNBQWUsRUFBRSxlQUFlLEVBQUUsTUFBTSxDQUFDLENBQUE7SUFDM0QsQ0FBQyxDQUFBO0lBRUQsYUFBYSxFQUFFLENBQUE7SUFDZixjQUFjLEdBQUcsU0FBUyxDQUFDLFVBQXlCLENBQUE7SUFFcEQsT0FBTztRQUNMLGFBQWE7UUFDYixhQUFhO0tBQ2QsQ0FBQTtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIGggfSBmcm9tICd2dWUnXG5cbi8vIENvbXBvbmVudHNcbmltcG9ydCB7IFZPdmVybGF5IH0gZnJvbSAnLi4vY29tcG9uZW50cy9WT3ZlcmxheSdcbmltcG9ydCB7IE1heWJlIH0gZnJvbSAnLi4vLi4vdHlwZXMvYmFzZSdcblxuLy8gSGVscGVyc1xuaW1wb3J0IHsgYWRkT25jZUxpc3RlbmVyIH0gZnJvbSAnLi4vaGVscGVycydcblxuaW50ZXJmYWNlIE92ZXJsYXlDb250cm9sbGVyIHtcbiAgY3JlYXRlT3ZlcmxheTogKCkgPT4gdm9pZFxuICByZW1vdmVPdmVybGF5OiAoKSA9PiB2b2lkXG59XG5cbmV4cG9ydCBjb25zdCBvdmVybGF5UHJvcHMgPSAoKSA9PiAoe1xuICBvdmVybGF5OiBCb29sZWFuLFxuICBvdmVybGF5Q29sb3I6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgZGVmYXVsdDogJyMwMDAwMDAnXG4gIH1cbn0pXG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VPdmVybGF5KHByb3BzOiBhbnksIG92ZXJsYXlPbj86IEhUTUxFbGVtZW50KTogT3ZlcmxheUNvbnRyb2xsZXIge1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuXG4gIGxldCBvdmVybGF5RWxlbWVudDogTWF5YmU8SFRNTEVsZW1lbnQ+ID0gbnVsbFxuXG4gIGNvbnN0IHJlbmRlck92ZXJsYXkgPSAoKSA9PiByZW5kZXIoaChWT3ZlcmxheSwge1xuICAgIGFjdGl2ZTogZmFsc2UsXG4gICAgY29sb3I6IHByb3BzLm92ZXJsYXlDb2xvclxuICB9KSwgY29udGFpbmVyISlcblxuICBjb25zdCBjcmVhdGVPdmVybGF5ID0gKCkgPT4ge1xuICAgIG92ZXJsYXlFbGVtZW50IS5zdHlsZS56SW5kZXggPSAnOTknXG4gICAgb3ZlcmxheU9uIS5zdHlsZS56SW5kZXggPSAnMTAwJ1xuXG4gICAgb3ZlcmxheU9uPy5wYXJlbnROb2RlPy5pbnNlcnRCZWZvcmUob3ZlcmxheUVsZW1lbnQhLCBvdmVybGF5T24pXG4gICAgb3ZlcmxheUVsZW1lbnQ/LmNsYXNzTGlzdC5yZW1vdmUoJ3Ytb3ZlcmxheS0taGlkZGVuJylcblxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICBvdmVybGF5RWxlbWVudD8uY2xhc3NMaXN0LmFkZCgndi1vdmVybGF5LS1hY3RpdmUnKVxuICAgIH0pXG4gIH1cblxuICBjb25zdCByZW1vdmVPdmVybGF5ID0gKCkgPT4ge1xuICAgIG92ZXJsYXlFbGVtZW50IS5jbGFzc0xpc3QucmVtb3ZlKCd2LW92ZXJsYXktLWFjdGl2ZScpXG5cbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgb3ZlcmxheUVsZW1lbnQ/LmNsYXNzTGlzdC5hZGQoJ3Ytb3ZlcmxheS0taGlkZGVuJylcbiAgICB9KVxuXG4gICAgY29uc3QgcmVtb3ZlID0gKCkgPT4ge1xuICAgICAgb3ZlcmxheUVsZW1lbnQ/LnBhcmVudE5vZGU/LnJlbW92ZUNoaWxkKG92ZXJsYXlFbGVtZW50ISlcbiAgICB9XG5cbiAgICBhZGRPbmNlTGlzdGVuZXIob3ZlcmxheUVsZW1lbnQhLCAndHJhbnNpdGlvbmVuZCcsIHJlbW92ZSlcbiAgfVxuXG4gIHJlbmRlck92ZXJsYXkoKVxuICBvdmVybGF5RWxlbWVudCA9IGNvbnRhaW5lci5maXJzdENoaWxkIGFzIEhUTUxFbGVtZW50XG5cbiAgcmV0dXJuIHtcbiAgICBjcmVhdGVPdmVybGF5LFxuICAgIHJlbW92ZU92ZXJsYXlcbiAgfVxufVxuIl19