{"version":3,"sources":["../../../../src/components/VSelect/VSelectList.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;AAGA;;AAGA;;AACA;;AACA;;;;;;;;AAKO,IAAM,WAAW,GAAG,0BAAgB;AACzC,EAAA,IAAI,EAAE,eADmC;AAEzC,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE,KADF;AAEL,IAAA,QAAQ,EAAE,MAFL;AAGL,IAAA,KAAK,EAAE,MAHF;AAIL,IAAA,MAAM,EAAE,OAJH;AAKL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADG;AAET,iBAAS;AAFA;AALN,GAFkC;AAazC,EAAA,KAbyC,iBAanC,KAbmC,QAapB;AAAA,QAAN,IAAM,QAAN,IAAM;;AAAA,qBACE,2BAAU,KAAV,EAAiB,QAAjB,CADF;AAAA,QACX,QADW,cACX,QADW;;AAAA,wBAEU,iCAAa,KAAb,CAFV;AAAA,QAEX,gBAFW,iBAEX,gBAFW;;AAInB,aAAS,QAAT,GAAiB;AACf,UAAM,GAAG,GAAG,KAAK,CAAC,QAAlB;AAEA,aAAO,KAAK,CAAC,KAAN,CAAa,GAAb,CAAiB,UAAC,EAAD,EAAY;AAClC,YAAM,IAAI,GAAG,YAAE,qBAAF,EAAkB,EAAlB,EAAsB;AAC/B,qBAAS;AAAA,mBAAO,GAAG,GAAG,EAAE,CAAC,GAAD,CAAL,GAAa,EAAvB;AAAA;AADsB,SAAtB,CAAb;AAKA,eAAO,YAAE,gBAAF,EAAa;AAChB,UAAA,GAAG,EAAE,KAAK,CAAC,KADK;AAEhB,UAAA,OAAO,EAAE;AAAA,mBAAM,IAAI,CAAC,QAAD,EAAW,EAAX,CAAV;AAAA;AAFO,SAAb,EAGF;AACD,qBAAS;AAAA,mBAAM,IAAN;AAAA;AADR,SAHE,CAAP;AAOD,OAbM,CAAP;AAcD;;AAED,aAAS,aAAT,GAAsB;AACpB,UAAM,SAAS,GAAG,YAAE,YAAF,EAAS;AACvB,iBAAO;AADgB,OAAT,EAEb;AAAE,mBAAS;AAAA,iBAAM,QAAQ,EAAd;AAAA;AAAX,OAFa,CAAlB;AAKA,aAAO,yBACL,YAAE,KAAF,EAAS;AACP;AACE,2BAAiB;AADnB,WAEK,gBAAgB,CAAC,KAFtB;AADO,OAAT,EAKG,SALH,CADK,EAOL,CAAC,CAAC,UAAD,EAAQ,QAAQ,CAAC,KAAjB,CAAD,CAPK,CAAP;AASD;;AAED,WAAO;AAAA,aAAM,kCAAc,aAAa,EAA3B,EAA+B,MAA/B,CAAN;AAAA,KAAP;AACD;AAtDwC,CAAhB,CAApB","sourcesContent":["// Styles\nimport './VSelectList.scss'\n\n// Vue API\nimport { h, defineComponent, withDirectives, vShow } from 'vue'\n\n// Components\nimport { VList, VListItem, VListItemTitle } from '../VList'\n\n// Effects\nimport { useToggle } from '../../effects/use-toggle'\nimport { useTransition } from '../../effects/use-transition'\nimport { useElevation } from '../../effects/use-elevation'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VSelectList = defineComponent({\n  name: 'v-select-list',\n  props: {\n    items: Array,\n    valueKey: String,\n    idKey: String,\n    active: Boolean,\n    elevation: {\n      type: [String, Number],\n      default: 4,\n    },\n  } as any,\n\n  setup(props, { emit }) {\n    const { isActive } = useToggle(props, 'active')\n    const { elevationClasses } = useElevation(props)\n\n    function genItems(): VNode[] {\n      const key = props.valueKey\n\n      return props.items!.map((it: any) => {\n        const item = h(VListItemTitle, {}, {\n            default: () => (key ? it[key] : it),\n          },\n        )\n\n        return h(VListItem, {\n            key: props.idKey,\n            onClick: () => emit('select', it),\n          }, {\n            default: () => item,\n          },\n        )\n      })\n    }\n\n    function genSelectList(): VNode {\n      const listVNode = h(VList, {\n          class: 'v-select--items-list',\n        }, { default: () => genItems() },\n      )\n\n      return withDirectives(\n        h('div', {\n          class: {\n            'v-select-list': true,\n            ...elevationClasses.value,\n          },\n        }, listVNode),\n        [[vShow, isActive.value]],\n      )\n    }\n\n    return () => useTransition(genSelectList(), 'fade')\n  },\n})\n"],"sourceRoot":"","file":"VSelectList.js"}