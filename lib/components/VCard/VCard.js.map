{"version":3,"sources":["../../../../src/components/VCard/VCard.ts"],"names":[],"mappings":"AACA,OAAO,0CAAP;AAGA,SAAS,eAAT,EAA0B,CAA1B,EAA6B,QAA7B,QAA6C,KAA7C;AAGA,SAAS,UAAT,EAAqB,SAArB,QAAsC,0BAAtC;AACA,SAAS,cAAT,EAAyB,YAAzB,QAA6C,6BAA7C;AAKA,OAAO,MAAM,KAAK,GAAG,eAAe,CAAC;AACnC,EAAA,IAAI,EAAE,QAD6B;AAGnC,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADD;AAEL,MAAA,OAAO,EAAE;AAFJ,KADF;AAKL,OAAG,UAAU,EALR;AAML,OAAG,cAAc;AANZ,GAH4B;;AAYnC,EAAA,KAAK,CAAC,KAAD,EAAQ;AAAE,IAAA;AAAF,GAAR,EAAiB;AACpB,UAAM;AAAE,MAAA;AAAF,QAAoB,SAAS,EAAnC;AACA,UAAM;AAAE,MAAA;AAAF,QAAuB,YAAY,CAAC,KAAD,CAAzC;AAEA,UAAM,OAAO,GAAG,QAAQ,CACtB,MAA8B;AAC5B,aAAO;AACL,kBAAU,IADL;AAEL,WAAG,gBAAgB,CAAC;AAFf,OAAP;AAID,KANqB,CAAxB;AASA,UAAM,MAAM,GAAG,QAAQ,CAAC,OAAO;AAC7B,MAAA,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK;AADQ,KAAP,CAAD,CAAvB;AAIA,UAAM,aAAa,GAAG,QAAQ,CAAQ,MAAK;AACzC,YAAM,SAAS,GAAG;AAChB,QAAA,KAAK,EAAE,OAAO,CAAC,KADC;AAEhB,QAAA,KAAK,EAAE,MAAM,CAAC;AAFE,OAAlB;AAIA,aAAO,CAAC,CACN,KADM,EAEN,KAAK,CAAC,KAAN,GAAc,aAAa,CAAC,KAAK,CAAC,KAAP,EAAc,SAAd,CAA3B,GAAsD,SAFhD,EAGN,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,EAHX,CAAR;AAKD,KAV6B,CAA9B;AAYA,WAAO,MAAM,aAAa,CAAC,KAA3B;AACD;;AA1CkC,CAAD,CAA7B","sourcesContent":["// Styles\nimport './VCard.scss'\n\n// Vue API\nimport { defineComponent, h, computed } from 'vue'\n\n// Compositions\nimport { colorProps, useColors } from '../../effects/use-colors'\nimport { elevationProps, useElevation } from '../../effects/use-elevation'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VCard = defineComponent({\n  name: 'v-card',\n\n  props: {\n    width: {\n      type: [String, Number],\n      default: 350,\n    },\n    ...colorProps(),\n    ...elevationProps(),\n  } as any,\n\n  setup(props, { slots }): () => VNode {\n    const { setBackground } = useColors()\n    const { elevationClasses } = useElevation(props)\n\n    const classes = computed(\n      (): Record<string, boolean> => {\n        return {\n          'v-card': true,\n          ...elevationClasses.value,\n        }\n      }\n    )\n\n    const styles = computed(() => ({\n      width: `${props.width}px`,\n    }))\n\n    const genCachedCard = computed<VNode>(() => {\n      const propsData = {\n        class: classes.value,\n        style: styles.value,\n      }\n      return h(\n        'div',\n        props.color ? setBackground(props.color, propsData) : propsData,\n        slots.default && slots.default()\n      )\n    })\n\n    return () => genCachedCard.value\n  },\n})\n"],"sourceRoot":"","file":"VCard.js"}