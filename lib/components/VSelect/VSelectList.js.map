{"version":3,"sources":["../../../../src/components/VSelect/VSelectList.ts"],"names":[],"mappings":"AACA,OAAO,kDAAP;AAGA,SAAS,CAAT,EAAY,eAAZ,EAA6B,cAA7B,EAA6C,KAA7C,QAA0D,KAA1D;AAGA,SAAS,KAAT,EAAgB,SAAhB,EAA2B,cAA3B,QAAiD,UAAjD;AAGA,SAAS,SAAT,QAA0B,0BAA1B;AACA,SAAS,aAAT,QAA8B,8BAA9B;AACA,SAAS,YAAT,QAA6B,6BAA7B;AACA,SAAS,UAAT,EAAqB,SAArB,QAAsC,0BAAtC;AAKA,OAAO,MAAM,WAAW,GAAG,eAAe,CAAC;AACzC,EAAA,IAAI,EAAE,eADmC;AAEzC,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE,KADF;AAEL,IAAA,QAAQ,EAAE,MAFL;AAGL,IAAA,KAAK,EAAE,MAHF;AAIL,IAAA,MAAM,EAAE,OAJH;AAKL,IAAA,SAAS,EAAE,MALN;AAML,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADG;AAET,MAAA,OAAO,EAAE;AAFA,KANN;AAUL,OAAG,UAAU;AAVR,GAFkC;;AAezC,EAAA,KAAK,CAAC,KAAD,EAAQ;AAAE,IAAA;AAAF,GAAR,EAAgB;AACnB,UAAM;AAAE,MAAA;AAAF,QAAe,SAAS,CAAC,KAAD,EAAQ,QAAR,CAA9B;AACA,UAAM;AAAE,MAAA;AAAF,QAAuB,YAAY,CAAC,KAAD,CAAzC;AACA,UAAM;AAAE,MAAA,YAAF;AAAgB,MAAA;AAAhB,QAAkC,SAAS,EAAjD;;AAEA,aAAS,QAAT,GAAiB;AACf,YAAM,GAAG,GAAG,KAAK,CAAC,QAAlB;AAEA,YAAM,SAAS,GAAG;AAChB,QAAA,KAAK,EAAE,EADS;AAEhB,QAAA,KAAK,EAAE;AAFS,OAAlB;AAKA,aAAO,KAAK,CAAC,KAAN,CAAa,GAAb,CAAkB,EAAD,IAAY;AAClC,cAAM,IAAI,GAAG,CAAC,CAAC,cAAD,EACZ,KAAK,CAAC,KAAN,GAAc,YAAY,CAAC,KAAK,CAAC,KAAP,EAAc,SAAd,CAA1B,GAAqD,SADzC,EAEZ;AACE,UAAA,OAAO,EAAE,MAAO,GAAG,GAAG,EAAE,CAAC,GAAD,CAAL,GAAa;AADlC,SAFY,CAAd;AAOA,eAAO,CAAC,CAAC,SAAD,EAAY;AAChB,UAAA,GAAG,EAAE,KAAK,CAAC,KADK;AAEhB,UAAA,OAAO,EAAE,MAAM,IAAI,CAAC,QAAD,EAAW,EAAX;AAFH,SAAZ,EAGH;AACD,UAAA,OAAO,EAAE,MAAM;AADd,SAHG,CAAR;AAOD,OAfM,CAAP;AAgBD;;AAED,aAAS,kBAAT,GAA2B;AACzB,aAAO,CAAC,CAAC,KAAD,EAAQ;AACZ,QAAA,KAAK,EAAE;AADK,OAAR,EAEH;AAAE,QAAA,OAAO,EAAE,MAAM,QAAQ;AAAzB,OAFG,CAAR;AAID;;AAED,aAAS,OAAT,GAAgB;AACd,YAAM,SAAS,GAAG;AAChB,QAAA,KAAK,EAAE;AACL,2BAAiB,IADZ;AAEL,aAAG,gBAAgB,CAAC;AAFf,SADS;AAKhB,QAAA,KAAK,EAAE;AALS,OAAlB;AAQA,aAAO,cAAc,CAAC,CAAC,CAAC,KAAD,EACrB,KAAK,CAAC,SAAN,GAAkB,aAAa,CAAC,KAAK,CAAC,SAAP,EAAkB,SAAlB,CAA/B,GAA8D,SADzC,EAErB,kBAAkB,EAFG,CAAF,EAGlB,CAAC,CAAC,KAAD,EAAQ,QAAQ,CAAC,KAAjB,CAAD,CAHkB,CAArB;AAID;;AAED,WAAO,MAAM,aAAa,CAAC,OAAO,EAAR,EAAY,MAAZ,CAA1B;AACD;;AArEwC,CAAD,CAAnC","sourcesContent":["// Styles\nimport './VSelectList.scss'\n\n// Vue API\nimport { h, defineComponent, withDirectives, vShow } from 'vue'\n\n// Components\nimport { VList, VListItem, VListItemTitle } from '../VList'\n\n// Effects\nimport { useToggle } from '../../effects/use-toggle'\nimport { useTransition } from '../../effects/use-transition'\nimport { useElevation } from '../../effects/use-elevation'\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VSelectList = defineComponent({\n  name: 'v-select-list',\n  props: {\n    items: Array,\n    valueKey: String,\n    idKey: String,\n    active: Boolean,\n    listColor: String,\n    elevation: {\n      type: [String, Number],\n      default: 4,\n    },\n    ...colorProps(),\n  } as any,\n\n  setup(props, { emit }) {\n    const { isActive } = useToggle(props, 'active')\n    const { elevationClasses } = useElevation(props)\n    const { setTextColor, setBackground } = useColors()\n\n    function genItems(): VNode[] {\n      const key = props.valueKey\n\n      const propsData = {\n        class: {},\n        style: {},\n      }\n\n      return props.items!.map((it: any) => {\n        const item = h(VListItemTitle,\n          props.color ? setTextColor(props.color, propsData) : propsData,\n          {\n            default: () => (key ? it[key] : it),\n          },\n        )\n\n        return h(VListItem, {\n            key: props.idKey,\n            onClick: () => emit('select', it),\n          }, {\n            default: () => item,\n          },\n        )\n      })\n    }\n\n    function genSelectListItems(): VNode {\n      return h(VList, {\n          class: 'v-select--items-list',\n        }, { default: () => genItems() },\n      )\n    }\n\n    function genList(): VNode {\n      const propsData = {\n        class: {\n          'v-select-list': true,\n          ...elevationClasses.value,\n        },\n        style: {},\n      }\n\n      return withDirectives(h('div',\n        props.listColor ? setBackground(props.listColor, propsData) : propsData,\n        genSelectListItems(),\n      ), [[vShow, isActive.value]])\n    }\n\n    return () => useTransition(genList(), 'fade')\n  },\n})\n"],"sourceRoot":"","file":"VSelectList.js"}