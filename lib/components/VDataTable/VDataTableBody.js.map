{"version":3,"sources":["../../../../src/components/VDataTable/VDataTableBody.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VDataTableBody.scss'\n\n// Vue API\nimport { h, ref, watch, computed, defineComponent } from 'vue'\n\n// Effects\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Components\nimport { VDataTableCell } from './VDataTableCell'\nimport { VCheckbox } from '../VCheckbox'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VDataTableBody = defineComponent({\n  name: 'v-data-table-body',\n\n  props: {\n    cols: Array,\n    rows: Array,\n    dark: Boolean,\n    showSequence: Boolean,\n    showCheckbox: Boolean,\n    checkAllRows: Boolean,\n    align: String,\n    colWidth: {\n      type: [String, Number],\n      default: 125,\n    },\n    page: Number,\n    rowsOnPage: Number,\n    ...colorProps(),\n  } as any,\n\n  emits: ['select', 'click:row', 'dblclick:row', 'contextmenu:row'],\n\n  setup(props, { slots, emit }): () => VNode {\n    const checkedRows = ref([])\n\n    const { setBackground } = useColors()\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-data-table__body': true,\n    }))\n\n    const rowsOnTable = computed<any[]>(() => {\n      return props.rows?.slice(\n        (props.page - 1) * props.rowsOnPage,\n        props.page * props.rowsOnPage\n      )\n    })\n\n    watch(\n      () => props.checkAllRows,\n      (to) => {\n        if (to) onSelectRows(props.rows)\n        else onSelectRows([])\n      }\n    )\n\n    function onSelectRows(rows) {\n      checkedRows.value = rows\n      emit('select', checkedRows.value)\n    }\n\n    function genNumberCell(count): VNode {\n      return h(\n        VDataTableCell,\n        {\n          width: 50,\n          align: 'center',\n          dark: props.dark,\n          color: props.color,\n          class: 'v-data-table__row-number',\n        },\n        {\n          default: () => count + 1,\n        }\n      )\n    }\n\n    function genCheckboxCell(row): VNode {\n      return h(\n        VDataTableCell,\n        {\n          width: 50,\n          align: 'center',\n          dark: props.dark,\n          color: props.color,\n          class: 'v-data-table__row-checkbox',\n        },\n        {\n          default: () =>\n            h(VCheckbox, {\n              modelValue: checkedRows.value,\n              color: props.dark ? 'white' : '',\n              value: row,\n              onChecked: onSelectRows,\n            }),\n        }\n      )\n    }\n\n    function genRowCell(col, row): VNode {\n      const { format } = col\n      const slotContent =\n        slots[col.key] &&\n        slots[col.key]!({\n          row,\n          format,\n        })\n\n      return h(\n        VDataTableCell,\n        {\n          width: col.width,\n          align: col.align || props.align,\n          dark: props.dark,\n          class: { [col.rowCellClass]: !!col.rowCellClass },\n        },\n        {\n          default: () =>\n            slotContent\n              ? slotContent\n              : format\n              ? format(row)\n              : String(row[col.key]),\n        }\n      )\n    }\n\n    function genTableRow(row, rowCount: number): VNode {\n      const rowCells: VNode[] = []\n\n      props.showSequence && rowCells.push(genNumberCell(rowCount))\n      props.showCheckbox && rowCells.push(genCheckboxCell(row))\n\n      props.cols.forEach((col) => {\n        col.show && rowCells.push(genRowCell(col, row))\n      })\n\n      return h(\n        'div',\n        {\n          class: { 'v-data-table__row': true },\n          onClick: () => emit('click:row', row),\n          onDblclick: () => emit('dblclick:row', row),\n          onContextmenu: (e) => {\n            e.preventDefault()\n            emit('contextmenu:row', row)\n          },\n        },\n        rowCells\n      )\n    }\n\n    function genTableRows(): VNode[] {\n      const tableRows: VNode[] = []\n      const rowsLength = rowsOnTable.value?.length\n      const count = (props.page - 1) * props.rowsOnPage\n\n      for (let i = 0; i < rowsLength; i += 1) {\n        tableRows.push(genTableRow(rowsOnTable.value[i], count + i))\n      }\n\n      return tableRows\n    }\n\n    return () => {\n      const propsData = {\n        class: classes.value,\n      }\n\n      return h(\n        'div',\n        props.options?.color\n          ? setBackground(props.options.color, propsData)\n          : propsData,\n        genTableRows()\n      )\n    }\n  },\n})\n"],"sourceRoot":"","file":"VDataTableBody.js"}