{"version":3,"sources":["../../../src/helpers/index.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,EAA0B,CAA1B,QAAmC,KAAnC;AAEA,OAAM,SAAU,sBAAV,CAAiC,CAAjC,EAA4C,EAAE,GAAG,KAAjD,EAAsD;AAC1D,SAAO,eAAe,CAAC;AACrB,IAAA,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,GAAjB,CADO;;AAGrB,IAAA,KAAK,CAAC,CAAD,EAAI;AAAE,MAAA;AAAF,KAAJ,EAAa;AAChB,aAAO,MACL,CAAC,CACC,EADD,EAEC;AACE,QAAA,KAAK,EAAE;AACL,WAAC,CAAC,CAAC,IAAF,EAAD,GAAY;AADP;AADT,OAFD,EAOC,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,EAPlB,CADH;AAUD;;AAdoB,GAAD,CAAtB;AAgBD;AAED,OAAM,SAAU,eAAV,CACJ,EADI,EAEJ,SAFI,EAGJ,EAHI,EAIJ,OAAA,GAA6C,KAJzC,EAI8C;AAElD,QAAM,IAAI,GAAI,KAAD,IAAiB;AAC5B,IAAA,EAAE,CAAC,KAAD,CAAF;AACA,IAAA,EAAE,CAAC,mBAAH,CAAuB,SAAvB,EAAkC,IAAlC,EAAwC,OAAxC;AACD,GAHD;;AAKA,EAAA,EAAE,CAAC,gBAAH,CAAoB,SAApB,EAA+B,IAA/B,EAAqC,OAArC;AACD;AAED,OAAM,SAAU,aAAV,CAAyB,GAAzB,EAAkE,IAAI,GAAG,IAAzE,EAA6E;AACjF,MAAI,GAAG,IAAI,IAAP,IAAe,GAAG,KAAK,EAA3B,EAA+B;AAC7B,WAAO,SAAP;AACD,GAFD,MAEO,IAAI,KAAK,CAAC,CAAC,GAAF,CAAT,EAAkB;AACvB,WAAO,MAAM,CAAC,GAAD,CAAb;AACD,GAFM,MAEA;AACL,WAAO,GAAG,MAAM,CAAC,GAAD,CAAK,GAAG,IAAI,EAA5B;AACD;AACF","sourcesContent":["import { defineComponent, h } from 'vue'\n\nexport function createSimpleFunctional(c: string, el = 'div') {\n  return defineComponent({\n    name: name || c.replace(/__/g, '-'),\n\n    setup(_, { slots }) {\n      return () =>\n        h(\n          el,\n          {\n            class: {\n              [c.trim()]: true,\n            },\n          },\n          slots.default && slots.default(),\n        )\n    },\n  })\n}\n\nexport function addOnceListener(\n  el: EventTarget,\n  eventName: string,\n  cb: (event: Event) => void,\n  options: boolean | AddEventListenerOptions = false,\n): void {\n  const once = (event: Event) => {\n    cb(event)\n    el.removeEventListener(eventName, once, options)\n  }\n\n  el.addEventListener(eventName, once, options)\n}\n\nexport function convertToUnit (str: string | number | null | undefined, unit = 'px'): string | undefined {\n  if (str == null || str === '') {\n    return undefined\n  } else if (isNaN(+str!)) {\n    return String(str)\n  } else {\n    return `${Number(str)}${unit}`\n  }\n}\n"],"sourceRoot":"","file":"index.js"}