import { ref } from 'vue';
import { defaultTheme } from './composables/use-theme';
export class Vueland {
    theme;
    icons;
    constructor() {
        this.icons = null;
        this.theme = ref(null);
    }
    install(app, args = {}) {
        if (this.install.installed)
            return;
        this.install.installed = true;
        const { components, directives } = args;
        for (const key in components) {
            if (components[key]) {
                app.component(key, components[key]);
            }
        }
        for (const key in directives) {
            if (directives[key]) {
                app.directive(key, directives[key]);
            }
        }
        if (!this.theme.value) {
            this.setTheme(defaultTheme);
        }
        app.provide('$v', this);
        app.provide('$v_theme', this.theme);
        app.provide('$v_icons', this.icons);
    }
    setTheme(theme) {
        if (typeof document === 'undefined') {
            return;
        }
        const root = document.documentElement;
        this.theme.value = Object.assign(this.theme.value || {}, theme);
        Object.keys(this.theme.value).forEach(key => {
            root.style.setProperty(`--${key}`, this.theme.value[key]);
        });
    }
    setIcons(icons) {
        this.icons = icons;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWJyYXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBTyxHQUFHLEVBQUUsTUFBTSxLQUFLLENBQUE7QUFHOUIsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFBO0FBRXRELE1BQU0sT0FBTyxPQUFPO0lBQ2xCLEtBQUssQ0FBa0M7SUFDdkMsS0FBSyxDQUE2QjtJQUVsQztRQUNFLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFBO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3hCLENBQUM7SUFFRCxPQUFPLENBQUMsR0FBUSxFQUFFLE9BQVksRUFBRTtRQUM5QixJQUFLLElBQUksQ0FBQyxPQUFlLENBQUMsU0FBUztZQUFFLE9BQU07UUFFMUMsSUFBSSxDQUFDLE9BQWUsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFBO1FBRXRDLE1BQU0sRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEdBQUcsSUFBSSxDQUFBO1FBRXZDLEtBQUssTUFBTSxHQUFHLElBQUksVUFBVSxFQUFFO1lBQzVCLElBQUksVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUNuQixHQUFHLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTthQUNwQztTQUNGO1FBRUQsS0FBSyxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUU7WUFDNUIsSUFBSSxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ25CLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO2FBQ3BDO1NBQ0Y7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUU7WUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQTtTQUM1QjtRQUVELEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFBO1FBQ3ZCLEdBQUcsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUNuQyxHQUFHLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7SUFDckMsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUEyQjtRQUNsQyxJQUFJLE9BQU8sUUFBUSxLQUFLLFdBQVcsRUFBRTtZQUNuQyxPQUFNO1NBQ1A7UUFFRCxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsZUFBZSxDQUFBO1FBRXJDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLElBQUksRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFBO1FBRS9ELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDMUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsS0FBTSxHQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQzlELENBQUMsQ0FBQyxDQUFBO0lBRUosQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUEyQjtRQUNsQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQTtJQUNwQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUeXBlc1xuaW1wb3J0IHsgUmVmLCByZWYgfSBmcm9tICd2dWUnXG5pbXBvcnQgeyBMaWJyYXJ5LCBVc2VyT3B0aW9ucyB9IGZyb20gJy4uL3R5cGVzJ1xuaW1wb3J0IHsgQXBwIH0gZnJvbSAndnVlJ1xuaW1wb3J0IHsgZGVmYXVsdFRoZW1lIH0gZnJvbSAnLi9jb21wb3NhYmxlcy91c2UtdGhlbWUnXG5cbmV4cG9ydCBjbGFzcyBWdWVsYW5kIGltcGxlbWVudHMgTGlicmFyeSB7XG4gIHRoZW1lOiBSZWY8TWF5YmU8VXNlck9wdGlvbnNbJ3RoZW1lJ10+PlxuICBpY29uczogTWF5YmU8VXNlck9wdGlvbnNbJ2ljb25zJ10+XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5pY29ucyA9IG51bGxcbiAgICB0aGlzLnRoZW1lID0gcmVmKG51bGwpXG4gIH1cblxuICBpbnN0YWxsKGFwcDogQXBwLCBhcmdzOiBhbnkgPSB7fSkge1xuICAgIGlmICgodGhpcy5pbnN0YWxsIGFzIGFueSkuaW5zdGFsbGVkKSByZXR1cm5cblxuICAgICh0aGlzLmluc3RhbGwgYXMgYW55KS5pbnN0YWxsZWQgPSB0cnVlXG5cbiAgICBjb25zdCB7IGNvbXBvbmVudHMsIGRpcmVjdGl2ZXMgfSA9IGFyZ3NcblxuICAgIGZvciAoY29uc3Qga2V5IGluIGNvbXBvbmVudHMpIHtcbiAgICAgIGlmIChjb21wb25lbnRzW2tleV0pIHtcbiAgICAgICAgYXBwLmNvbXBvbmVudChrZXksIGNvbXBvbmVudHNba2V5XSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IGtleSBpbiBkaXJlY3RpdmVzKSB7XG4gICAgICBpZiAoZGlyZWN0aXZlc1trZXldKSB7XG4gICAgICAgIGFwcC5kaXJlY3RpdmUoa2V5LCBkaXJlY3RpdmVzW2tleV0pXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLnRoZW1lLnZhbHVlKSB7XG4gICAgICB0aGlzLnNldFRoZW1lKGRlZmF1bHRUaGVtZSlcbiAgICB9XG5cbiAgICBhcHAucHJvdmlkZSgnJHYnLCB0aGlzKVxuICAgIGFwcC5wcm92aWRlKCckdl90aGVtZScsIHRoaXMudGhlbWUpXG4gICAgYXBwLnByb3ZpZGUoJyR2X2ljb25zJywgdGhpcy5pY29ucylcbiAgfVxuXG4gIHNldFRoZW1lKHRoZW1lOiBVc2VyT3B0aW9uc1sndGhlbWUnXSkge1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCByb290ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG5cbiAgICB0aGlzLnRoZW1lLnZhbHVlID0gT2JqZWN0LmFzc2lnbih0aGlzLnRoZW1lLnZhbHVlIHx8IHt9LCB0aGVtZSlcblxuICAgIE9iamVjdC5rZXlzKHRoaXMudGhlbWUudmFsdWUpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoYC0tJHsga2V5IH1gLCB0aGlzLnRoZW1lLnZhbHVlIVtrZXldKVxuICAgIH0pXG5cbiAgfVxuXG4gIHNldEljb25zKGljb25zOiBVc2VyT3B0aW9uc1snaWNvbnMnXSkge1xuICAgIHRoaXMuaWNvbnMgPSBpY29uc1xuICB9XG59XG4iXX0=