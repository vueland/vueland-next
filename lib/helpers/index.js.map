{"version":3,"sources":["../../../src/helpers/index.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,EAA0B,CAA1B,QAA0C,KAA1C;AAEA,OAAO,MAAM,sBAAsB,GAAG,CACpC,CADoC,EAEpC,EAAE,GAAG,KAF+B,EAGpC,IAAA,GAAe,EAHqB,KAIlC;AACF,SAAO,eAAe,CAAC;AACrB,IAAA,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,GAAjB,CADO;;AAGrB,IAAA,KAAK,CAAC,CAAD,EAAI;AAAE,MAAA;AAAF,KAAJ,EAAa;AAChB,YAAM,SAAS,GAAG;AAChB,QAAA,KAAK,EAAE;AACL,WAAC,CAAC,CAAC,IAAF,EAAD,GAAY;AADP;AADS,OAAlB;AAMA,aAAO,MAAM,CAAC,CAAC,EAAD,EAAK,SAAL,EAAgB,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,EAAjC,CAAd;AACD;;AAXoB,GAAD,CAAtB;AAaD,CAlBM;AAoBP,OAAO,MAAM,eAAe,GAAG,CAC7B,EAD6B,EAE7B,SAF6B,EAG7B,EAH6B,EAI7B,OAAA,GAA6C,KAJhB,KAKrB;AACR,QAAM,IAAI,GAAI,KAAD,IAAiB;AAC5B,IAAA,EAAE,CAAC,KAAD,CAAF;AACA,IAAA,EAAE,CAAC,mBAAH,CAAuB,SAAvB,EAAkC,IAAlC,EAAwC,OAAxC;AACD,GAHD;;AAKA,EAAA,EAAE,CAAC,gBAAH,CAAoB,SAApB,EAA+B,IAA/B,EAAqC,OAArC;AACD,CAZM;AAcP,OAAO,MAAM,aAAa,GAAG,CAC3B,GAD2B,EAE3B,IAAI,GAAG,IAFoB,KAGL;AACtB,MAAI,GAAG,IAAI,IAAP,IAAe,GAAG,KAAK,EAA3B,EAA+B;AAC7B,WAAO,SAAP;AACD,GAFD,MAEO,IAAI,KAAK,CAAC,CAAC,GAAF,CAAT,EAAkB;AACvB,WAAO,MAAM,CAAC,GAAD,CAAb;AACD,GAFM,MAEA;AACL,WAAO,GAAI,MAAM,CAAC,GAAD,CAAM,GAAI,IAAK,EAAhC;AACD;AACF,CAXM;AAaP,OAAO,MAAM,OAAO,GAAI,WAAD,IAAgB;AACrC,EAAA,OAAO,CAAC,IAAR,CAAa,WAAb;AACD,CAFM;AAIP,OAAO,MAAM,eAAe,GAAI,GAAD,IAAQ;AACrC,SAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,GAAf,CAAX,CAAP;AACD,CAFM;AAIP,OAAO,MAAM,aAAa,GAAG,CAAC,QAAD,EAAmB,KAAnB,KAAmC;AAC9D,SAAQ,MAAD,IAAW;AAChB,UAAM,GAAG,GAAQ,EAAE,GAAG;AAAL,KAAjB;AAEA,WAAO,KAAK,CAAC,QAAD,CAAL,IAAmB,KAAK,CAAC,QAAD,CAAL,CAAiB,GAAjB,CAA1B;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAM,qBAAqB,GAAG,CAAI,QAAJ,EAAsB,MAAtB,KAA2C;AAC9E,SAAO,QAAQ,CAAC,KAAT,CAAe,GAAf,EAAoB,MAApB,CAA2B,CAAC,GAAD,EAAM,EAAN,KAAa,GAAG,CAAC,EAAD,CAA3C,EAAiD,MAAjD,CAAP;AACD,CAFM","sourcesContent":["import { defineComponent, h, Slots } from 'vue'\n\nexport const createSimpleFunctional = (\n  c: string,\n  el = 'div',\n  name: string = ''\n) => {\n  return defineComponent({\n    name: name || c.replace(/__/g, '-'),\n\n    setup(_, { slots }) {\n      const propsData = {\n        class: {\n          [c.trim()]: true\n        }\n      }\n\n      return () => h(el, propsData, slots.default && slots.default())\n    }\n  })\n}\n\nexport const addOnceListener = (\n  el: EventTarget,\n  eventName: string,\n  cb: (event: Event) => void,\n  options: boolean | AddEventListenerOptions = false\n): void => {\n  const once = (event: Event) => {\n    cb(event)\n    el.removeEventListener(eventName, once, options)\n  }\n\n  el.addEventListener(eventName, once, options)\n}\n\nexport const convertToUnit = (\n  str: string | number | null | undefined,\n  unit = 'px'\n): string | undefined => {\n  if (str == null || str === '') {\n    return undefined\n  } else if (isNaN(+str!)) {\n    return String(str)\n  } else {\n    return `${ Number(str) }${ unit }`\n  }\n}\n\nexport const warning = (warningText) => {\n  console.warn(warningText)\n}\n\nexport const copyWithoutLink = (obj) => {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nexport const addScopedSlot = (slotName: string, slots: Slots) => {\n  return (scoped) => {\n    const arg: any = { ...scoped }\n\n    return slots[slotName] && slots[slotName]!(arg)\n  }\n}\n\nexport const getKeyValueFromTarget = <T>(valueKey: string, target: T): string => {\n  return valueKey.split('.').reduce((acc, it) => acc[it], target)\n}\n"],"sourceRoot":"","file":"index.js"}