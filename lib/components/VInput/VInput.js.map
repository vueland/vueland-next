{"version":3,"sources":["../../../../src/components/VInput/VInput.ts"],"names":[],"mappings":"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","sourcesContent":["// Style\nimport './VInput.scss'\n\n// Vue API\nimport {\n  h,\n  defineComponent,\n  computed,\n  reactive\n} from 'vue'\n\n// Components\nimport { VLabel } from '../VLabel'\n\n// Types\nimport { SetupContext, VNode } from 'vue'\n\n// Effects\nimport { useTransition } from '../../effects/use-transition'\nimport { colorProps, useColors } from '../../effects/use-colors'\n\nimport { validateProps, useValidate } from '../../effects/use-validate'\n\nconst vInputProps = {\n  label: String,\n  height: [String, Number],\n  dark: Boolean,\n  type: {\n    type: String,\n    default: 'text',\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  required: {\n    type: Boolean,\n    default: false,\n  },\n  modelValue: [String, Number],\n  ...validateProps(),\n  ...colorProps(),\n}\n\ntype InputState = {\n  value: string | number\n  focused: boolean\n}\n\nexport const VInput = defineComponent({\n  name: 'v-input',\n  props: vInputProps,\n\n  setup(props, ctx) {\n    const state: InputState = reactive({\n      value: '',\n      focused: false,\n    })\n\n    state.value = props.modelValue!\n\n    const {\n      validate,\n      focused,\n      validateClasses,\n      update,\n      computedColor,\n      validationState,\n      errorState,\n    } = useValidate(props)\n\n    const { setTextColor } = useColors()\n\n    const isDirty = computed<boolean>(() => {\n      return errorState.isDirty\n    })\n\n    const isValid = computed<boolean>(() => {\n      return errorState.isDirty && !errorState.innerError\n    })\n\n    const isNotValid = computed<boolean>(() => {\n      return errorState.isDirty && errorState.innerError!\n    })\n\n    const classes = computed<Record<string, boolean>>(() => {\n      return {\n        'v-input': true,\n        'v-input--disabled': props.disabled,\n        'v-input--dirty': isDirty.value,\n        'v-input--valid': isValid.value,\n        'v-input--not-valid': isNotValid.value,\n        'v-input--focused': state.focused,\n        ...validateClasses(),\n      }\n    })\n\n    const validateValue = () => {\n      return props.rules &&\n        props.rules.length &&\n        validate(state.value)\n    }\n\n    const focusHandler = () => {\n      focused()\n      update(errorState.innerError)\n      state.focused = true\n      ctx.emit('focus')\n    }\n\n    const blurHandler = () => {\n      ctx.emit('blur')\n      state.focused = false\n      validateValue()\n    }\n\n    const inputHandler = e => {\n      state.value = e.target.value\n      ctx.emit('update:modelValue', state.value)\n    }\n\n    const genLabel = (): VNode => {\n      const labelProps = {\n        absolute: true,\n        hasState: !!state.value,\n        disabled: props.disabled,\n        focused: state.focused,\n        color: validationState.value,\n      }\n\n      return h(\n        VLabel.setup!(\n          labelProps as typeof VLabel.props,\n          ctx as SetupContext,\n        ) as any,\n        props.label,\n      )\n    }\n\n    const genTextField = (): VNode => {\n      const textFieldProps = {\n        type: props.type,\n        disabled: props.disabled,\n        value: state.value,\n        class: {\n          'v-input__field': true,\n        },\n        onFocus: focusHandler,\n        onBlur: blurHandler,\n        onInput: inputHandler,\n      }\n\n      return h('input', setTextColor(computedColor.value!, textFieldProps))\n    }\n\n    const genTextFieldSlot = (): VNode => {\n      return h(\n        'div',\n        {\n          class: {\n            'v-input__text-slot': true,\n          },\n        },\n        [genLabel(), genTextField()],\n      )\n    }\n\n    const genStatusMessage = (): VNode => {\n      return h(\n        'span',\n        {\n          class: {\n            'v-input__status-message': true,\n          },\n        },\n        [errorState.innerErrorMessage],\n      )\n    }\n\n    const genStatus = (): VNode => {\n      const transitionedMessage = useTransition(\n        { transition: 'fade' },\n        errorState.innerErrorMessage! && genStatusMessage(),\n      )\n\n      return h(\n        'div',\n        {\n          class: {\n            'v-input__status': true,\n          },\n        },\n        [transitionedMessage()],\n      )\n    }\n\n    const genDataProps = () => {\n      return {\n        class: {\n          ...classes.value,\n        },\n        methods: {\n          validateValue,\n        },\n      }\n    }\n\n    const genInput = () => {\n      return h('div', genDataProps(), [genTextFieldSlot(), genStatus()])\n    }\n\n    return () => genInput()\n  },\n})\n"],"sourceRoot":"","file":"VInput.js"}