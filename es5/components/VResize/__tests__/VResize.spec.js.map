{"version":3,"sources":["../../../../../src/components/VResize/__tests__/VResize.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { mount, VueWrapper } from '@vue/test-utils'\nimport { VResize } from '../VResize'\nimport { VCard } from '../../VCard'\nimport { SetupContext } from 'vue'\nimport 'regenerator-runtime/runtime'\n\ndescribe('VResize', () => {\n  let mountInWrapFunction: (options?: any) => VueWrapper<any>\n  let mountFunction: (options?: any) => VueWrapper<any>\n\n  beforeEach(() => {\n    mountInWrapFunction = (options = {}) =>\n      mount(VCard, {\n        slots: {\n          default: VResize.setup!(options, {} as SetupContext),\n        },\n        ...options,\n      })\n    mountFunction = (options = {}) =>\n      mount(VResize, {\n        ...options,\n      })\n  })\n\n  it('should mount the component and match snapshot', () => {\n    const cmp = mountFunction()\n\n    expect(cmp.html()).toMatchSnapshot()\n  })\n\n  it('should set top prop and match snapshot', () => {\n    const top = true\n    const cmp = mountFunction({ propsData: { top } })\n\n    expect(cmp.find('.v-resize').attributes().class).toContain('v-resize--top')\n    expect(cmp.html()).toMatchSnapshot()\n  })\n\n  it('should set left prop and match snapshot', () => {\n    const left = true\n    const cmp = mountFunction({ propsData: { left } })\n\n    expect(cmp.find('.v-resize').attributes().class).toContain('v-resize--left')\n    expect(cmp.html()).toMatchSnapshot()\n  })\n\n  it('should set right prop and match snapshot', () => {\n    const right = true\n    const cmp = mountFunction({ propsData: { right } })\n\n    expect(cmp.find('.v-resize').attributes().class).toContain(\n      'v-resize--right',\n    )\n    expect(cmp.html()).toMatchSnapshot()\n  })\n\n  it('should set bottom prop and match snapshot', () => {\n    const bottom = true\n    const cmp = mountFunction({ propsData: { bottom } })\n\n    expect(cmp.find('.v-resize').attributes().class).toContain(\n      'v-resize--bottom',\n    )\n    expect(cmp.html()).toMatchSnapshot()\n  })\n\n  it('should set top prop and match snapshot', async () => {\n    const cmp = mountInWrapFunction({\n      top: true,\n    })\n    const resizer = cmp.find('.v-resize')\n\n    await resizer.trigger('mousedown')\n    await resizer.trigger('mousemove')\n\n    expect(cmp.html()).toMatchSnapshot()\n  })\n})\n"],"sourceRoot":"","file":"VResize.spec.js"}