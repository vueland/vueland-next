{"version":3,"sources":["../../../../src/components/VBadge/VBadge.ts"],"names":[],"mappings":"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","sourcesContent":["import './VBadge.scss'\n\n// Vue API\nimport { vShow, h, computed, withDirectives, defineComponent } from 'vue'\n\n// Effects\nimport { positionProps } from '../../effects/use-position'\nimport { useColors } from '../../effects/use-colors'\nimport { useToggle } from '../../effects/use-toggle'\nimport { useElevation, elevationProps } from '../../effects/use-elevation'\nimport { useTransition } from '../../effects/use-transition'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VBadge = defineComponent({\n  name: 'v-badge',\n\n  props: {\n    dot: Boolean,\n    avatar: Boolean,\n    border: Boolean,\n    toggle: Boolean,\n    content: {\n      required: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    transition: {\n      type: String,\n      default: 'scaleIn',\n    },\n    ...positionProps(),\n    ...elevationProps(),\n  } as any,\n\n  setup(props, { slots }): () => VNode {\n    const { elevationClasses } = useElevation(props)\n    const { setBackground } = useColors()\n\n    const offset = computed<number>(() => {\n      return props.dot ? 4 : 12\n    })\n\n    const calcPosition = (offsetVal: string | number = 0): string => {\n      const value = -offset.value - Number(offsetVal)\n      return `${value}px`\n    }\n\n    const computedLeft = computed<string | boolean>(() => {\n      return props.left && calcPosition(props.offsetX)\n    })\n\n    const computedRight = computed<string | boolean>(() => {\n      return props.right && calcPosition(props.offsetX)\n    })\n\n    const computedTop = computed<string | boolean>(() => {\n      return props.top && calcPosition(props.offsetY)\n    })\n\n    const computedBottom = computed<string | boolean>(() => {\n      return props.bottom && calcPosition(props.offsetY)\n    })\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-badge': true,\n      'v-badge--border': props.border,\n      'v-badge--dot': props.dot,\n      'v-badge--avatar': props.avatar,\n    }))\n\n    const badgeClasses = computed<Record<string, boolean>>(() => {\n      return {\n        'v-badge__badge': true,\n        ...elevationClasses.value,\n      }\n    })\n\n    const styles = computed<Record<string, string | boolean>>(() => {\n      return {\n        top: computedTop.value,\n        right: computedRight.value,\n        bottom: computedBottom.value,\n        left: computedLeft.value,\n      }\n    })\n\n    function addContent(): string | undefined {\n      if (props.dot) return undefined\n      if (props.content) return String(props.content)\n\n      return undefined\n    }\n\n    function genBadgeSlot(): VNode | null {\n      const propsData = {\n        class: {\n          'v-badge__badge-slot': true,\n        },\n      }\n\n      return slots.badge ? h('div', propsData, slots.badge()) : null\n    }\n\n    function genContent(): VNode {\n      const propsData = {\n        class: {\n          'v-badge__content': true,\n        },\n      }\n\n      return h('div', propsData, [addContent(), genBadgeSlot()])\n    }\n\n    function genBadge(): VNode {\n      const propsData = setBackground(props.color, {\n        class: badgeClasses.value,\n        style: styles.value,\n      })\n\n      return h('div', propsData, genContent())\n    }\n\n    return () => {\n      let badge = genBadge()\n\n      if (props.toggle && !slots.badge) {\n        const { isActive } = useToggle(props, 'content')\n        badge = withDirectives(badge, [[vShow, isActive.value]])\n      }\n\n      const propsData = {\n        class: classes.value,\n      }\n\n      const children = [\n        useTransition(badge, props.transition),\n        slots.default && slots.default(),\n      ]\n\n      return h('div', propsData, children)\n    }\n  },\n})\n"],"sourceRoot":"","file":"VBadge.js"}