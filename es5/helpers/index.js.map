{"version":3,"sources":["../../../src/helpers/index.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;AAEO,IAAM,sBAAsB,GAAG,SAAzB,sBAAyB,CACpC,CADoC,EAIlC;AAAA,MAFF,EAEE,uEAFG,KAEH;AAAA,MADF,IACE,uEADa,EACb;AACF,SAAO,0BAAgB;AACrB,IAAA,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,GAAjB,CADO;AAGrB,IAAA,KAHqB,iBAGf,CAHe,QAGH;AAAA,UAAP,KAAO,QAAP,KAAO;AAChB,UAAM,SAAS,GAAG;AAChB,qCACG,CAAC,CAAC,IAAF,EADH,EACc,IADd;AADgB,OAAlB;AAMA,aAAO;AAAA,eAAM,YAAE,EAAF,EAAM,SAAN,EAAiB,KAAK,WAAL,IAAiB,KAAK,WAAL,EAAlC,CAAN;AAAA,OAAP;AACD;AAXoB,GAAhB,CAAP;AAaD,CAlBM;;;;AAoBA,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAC7B,EAD6B,EAE7B,SAF6B,EAG7B,EAH6B,EAKrB;AAAA,MADR,OACQ,uEADqC,KACrC;;AACR,MAAM,IAAI,GAAG,SAAP,IAAO,CAAC,KAAD,EAAiB;AAC5B,IAAA,EAAE,CAAC,KAAD,CAAF;AACA,IAAA,EAAE,CAAC,mBAAH,CAAuB,SAAvB,EAAkC,IAAlC,EAAwC,OAAxC;AACD,GAHD;;AAKA,EAAA,EAAE,CAAC,gBAAH,CAAoB,SAApB,EAA+B,IAA/B,EAAqC,OAArC;AACD,CAZM;;;;AAcA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAC3B,GAD2B,EAGL;AAAA,MADtB,IACsB,uEADf,IACe;;AACtB,MAAI,GAAG,IAAI,IAAP,IAAe,GAAG,KAAK,EAA3B,EAA+B;AAC7B,WAAO,SAAP;AACD,GAFD,MAEO,IAAI,KAAK,CAAC,CAAC,GAAF,CAAT,EAAkB;AACvB,WAAO,MAAM,CAAC,GAAD,CAAb;AACD,GAFM,MAEA;AACL,qBAAW,MAAM,CAAC,GAAD,CAAjB,SAA2B,IAA3B;AACD;AACF,CAXM;;;;AAaA,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,WAAD,EAAgB;AACrC,EAAA,OAAO,CAAC,IAAR,CAAa,WAAb;AACD,CAFM;;;;AAIA,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,GAAD,EAAQ;AACrC,SAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,GAAf,CAAX,CAAP;AACD,CAFM;;;;AAIA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,QAAD,EAAmB,KAAnB,EAAmC;AAC9D,SAAO,UAAC,MAAD,EAAW;AAChB,QAAM,GAAG,qBAAa,MAAb,CAAT;;AAEA,WAAO,KAAK,CAAC,QAAD,CAAL,IAAmB,KAAK,CAAC,QAAD,CAAL,CAAiB,GAAjB,CAA1B;AACD,GAJD;AAKD,CANM;;;;AAQA,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAI,QAAJ,EAAsB,MAAtB,EAA2C;AAC9E,SAAO,QAAQ,CAAC,KAAT,CAAe,GAAf,EAAoB,MAApB,CAA2B,UAAC,GAAD,EAAM,EAAN;AAAA,WAAa,GAAG,CAAC,EAAD,CAAhB;AAAA,GAA3B,EAAiD,MAAjD,CAAP;AACD,CAFM","sourcesContent":["import { defineComponent, h, Slots } from 'vue'\n\nexport const createSimpleFunctional = (\n  c: string,\n  el = 'div',\n  name: string = ''\n) => {\n  return defineComponent({\n    name: name || c.replace(/__/g, '-'),\n\n    setup(_, { slots }) {\n      const propsData = {\n        class: {\n          [c.trim()]: true\n        }\n      }\n\n      return () => h(el, propsData, slots.default && slots.default())\n    }\n  })\n}\n\nexport const addOnceListener = (\n  el: EventTarget,\n  eventName: string,\n  cb: (event: Event) => void,\n  options: boolean | AddEventListenerOptions = false\n): void => {\n  const once = (event: Event) => {\n    cb(event)\n    el.removeEventListener(eventName, once, options)\n  }\n\n  el.addEventListener(eventName, once, options)\n}\n\nexport const convertToUnit = (\n  str: string | number | null | undefined,\n  unit = 'px'\n): string | undefined => {\n  if (str == null || str === '') {\n    return undefined\n  } else if (isNaN(+str!)) {\n    return String(str)\n  } else {\n    return `${ Number(str) }${ unit }`\n  }\n}\n\nexport const warning = (warningText) => {\n  console.warn(warningText)\n}\n\nexport const copyWithoutLink = (obj) => {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nexport const addScopedSlot = (slotName: string, slots: Slots) => {\n  return (scoped) => {\n    const arg: any = { ...scoped }\n\n    return slots[slotName] && slots[slotName]!(arg)\n  }\n}\n\nexport const getKeyValueFromTarget = <T>(valueKey: string, target: T): string => {\n  return valueKey.split('.').reduce((acc, it) => acc[it], target)\n}\n"],"sourceRoot":"","file":"index.js"}