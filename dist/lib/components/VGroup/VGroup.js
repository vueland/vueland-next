import { defineComponent, h, withDirectives, ref, watch, computed, vShow } from 'vue';
import { ExpandTransition } from '../transitions';
import { VIcon } from '../VIcon';
import { useColors, colorProps } from '../../composable/use-colors';
import { useIcons } from '../../composable/use-icons';
export default defineComponent({
    name: 'v-group',
    props: {
        expand: Boolean,
        subgroup: Boolean,
        title: {
            type: String,
            default: '',
        },
        activeClass: {
            type: String,
            default: 'main--text text--evo',
        },
        prependIcon: {
            type: String,
            default: '',
        },
        appendIcon: {
            type: String,
            default: '',
        },
        ...colorProps(),
    },
    setup(props, { slots }) {
        const { icons } = useIcons();
        const { setBackgroundCssColor, setBackgroundClassNameColor } = useColors();
        const isActive = ref(false);
        const classes = computed(() => ({
            'v-group': true,
            'v-group--subgroup': props.subgroup,
            'v-group--active': isActive.value,
            'v-group--default': !isActive.value,
            [props.activeClass]: !!props.activeClass && isActive.value,
            ...setBackgroundClassNameColor(props.color),
        }));
        const styles = computed(() => ({
            ...setBackgroundCssColor(props.color),
        }));
        const genHeaderContent = () => {
            const content = props.title || slots.header?.();
            return h('div', {
                class: 'v-group__header-content',
            }, content);
        };
        const genExpandIcon = (icon) => {
            return h('div', {
                class: 'v-group__expand-icon',
            }, icon);
        };
        const genSubExpandIcon = (icon) => {
            return h('div', {
                class: 'v-group__sub-expand-icon',
            }, icon);
        };
        const genPrependIcon = (icon) => {
            return h('div', {
                class: 'v-group__prepend-icon',
            }, icon);
        };
        const genAppendIcon = (icon) => {
            return h('div', {
                class: 'v-group__append-icon',
            }, icon);
        };
        const genIcon = (iconName) => {
            return h(VIcon, {
                icon: iconName,
                size: 16,
            });
        };
        const genGroupHeader = () => {
            return h('div', {
                class: 'v-group__header',
                onClick: () => isActive.value = !isActive.value,
            }, [
                props.subgroup && genSubExpandIcon(genIcon(icons.$caretDown)),
                props.prependIcon && genPrependIcon(genIcon(props.prependIcon)),
                genHeaderContent(),
                props.appendIcon && genAppendIcon(genIcon(props.appendIcon)),
                !props.subgroup && genExpandIcon(genIcon(icons.$chevronDown)),
            ]);
        };
        const genGroupChildContent = () => {
            return withDirectives(h('div', {
                class: 'v-group__content',
            }, {
                default: () => slots.default?.(),
            }), [[vShow, isActive.value]]);
        };
        watch(() => props.expand, to => isActive.value = to, { immediate: true });
        return () => h('div', {
            class: classes.value,
            style: styles.value,
        }, [
            genGroupHeader(),
            ExpandTransition(genGroupChildContent()),
        ]);
    },
});
//# sourceMappingURL=data:application/json;base64,