{"version":3,"sources":["../../../src/effects/use-elevation.ts"],"names":[],"mappings":"AAAA;AACA,SAAS,QAAT,QAAsC,KAAtC;AASA,OAAM,SAAU,cAAV,GAAwB;AAC5B,SAAO;AACL,IAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT;AADN,GAAP;AAGD;AAED,OAAM,SAAU,YAAV,CAAuB,KAAvB,EAAmC;AACvC,QAAM,iBAAiB,GAAG,QAAQ,CAA8B,MAAU;AACxE,WAAO,KAAK,CAAC,SAAb;AACD,GAFiC,CAAlC;AAIA,QAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAK;AACrC,WAAO;AACL,OAAC,aAAa,KAAK,CAAC,SAAS,EAA7B,GAAkC,CAAC,CAAC,iBAAiB,CAAC;AADjD,KAAP;AAGD,GAJgC,CAAjC;AAMA,SAAO;AAAE,IAAA;AAAF,GAAP;AACD","sourcesContent":["// Vue API\nimport { computed, ComputedRef } from 'vue'\n\n// Types\nimport { Props } from '../types'\n\ntype Elevetable = {\n  elevationClasses: ComputedRef<Record<string, boolean>>\n}\n\nexport function elevationProps(): Props {\n  return {\n    elevation: [String, Number],\n  }\n}\n\nexport function useElevation(props: Props): Elevetable {\n  const computedElevation = computed<string | number | undefined>((): any => {\n    return props.elevation\n  })\n\n  const elevationClasses = computed(() => {\n    return {\n      [`elevation-${props.elevation}`]: !!computedElevation.value,\n    }\n  })\n\n  return { elevationClasses }\n}\n"],"sourceRoot":"","file":"use-elevation.js"}