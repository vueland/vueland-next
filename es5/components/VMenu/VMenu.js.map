{"version":3,"sources":["../../../../src/components/VMenu/VMenu.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VMenu.scss'\n\n// Vue API\nimport {\n  h,\n  defineComponent,\n  withDirectives,\n  computed,\n  watch,\n  onMounted,\n  onBeforeUnmount,\n} from 'vue'\n\n// Effects\nimport { useAutoPosition } from '../../effects/use-auto-position'\nimport { useActivator } from '../../effects/use-activator'\nimport { useDetachable } from '../../effects/use-detachable'\nimport { useTransition } from '../../effects/use-transition'\nimport { useElevation } from '../../effects/use-elevation'\nimport { useToggle } from '../../effects/use-toggle'\nimport { positionProps } from '../../effects/use-position'\n\n// Helpers\nimport { convertToUnit } from '../../helpers'\n\n// Directives\nimport { clickOutside, resize } from '../../directives'\nimport { vShow } from 'vue'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VMenu = defineComponent({\n  name: 'v-menu',\n  props: {\n    maxHeight: {\n      type: [Number, String],\n      default: 200,\n    },\n    width: {\n      type: [Number, String],\n      default: 0,\n    },\n    openOnHover: Boolean,\n    openOnClick: Boolean,\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    elevation: {\n      type: [Number, String],\n      default: 10,\n    },\n    ...positionProps(),\n  },\n\n  emits: ['open', 'close'],\n\n  setup(props, { emit, slots }) {\n    const { elevationClasses } = useElevation(props)\n    const { isActive } = useToggle(props)\n    const { contentRef, setDimensions, dimensions } = useAutoPosition(props)\n    const { setDetached, removeDetached } = useDetachable()\n    const {\n      activatorRef,\n      genActivatorListeners,\n      addActivatorEvents,\n      removeActivatorEvents,\n    } = useActivator()\n\n    const handlers = {\n      click: () => {\n        setDimensions(activatorRef.value).then(() => {\n          requestAnimationFrame(() => (isActive.value = true))\n        })\n      },\n      mouseenter: () => (isActive.value = true),\n      mouseleave: () => (isActive.value = false),\n    }\n\n    const listeners = genActivatorListeners(props, handlers)\n\n    const directive = computed(() => {\n      return isActive.value\n        ? {\n            handler: (e) => {\n              if (activatorRef.value!.contains(e.target)) return\n              isActive.value = false\n            },\n            closeConditional: props.closeOnContentClick,\n          }\n        : undefined\n    })\n\n    const calcWidth = computed<string | number>(() => {\n      return props.width || dimensions.content.width\n    })\n\n    watch(\n      () => isActive.value,\n      (to) => {\n        to && emit('open')\n        !to && emit('close')\n      }\n    )\n\n    function genActivatorSlot(): VNode | null {\n      if (slots.activator) {\n        const slotContent = slots.activator({ on: listeners })\n\n        if (typeof slotContent![0].type === 'object') {\n          return h('div', { ref: activatorRef }, h(slotContent![0]))\n        }\n\n        return h(slotContent![0], { ref: activatorRef })\n      }\n\n      return null\n    }\n\n    function genContentSlot() {\n      const propsData = {\n        ref: contentRef,\n        class: {\n          'v-menu__content': true,\n          ...elevationClasses.value,\n        },\n        style: {\n          maxHeight: convertToUnit(props.maxHeight),\n          width: convertToUnit(calcWidth.value),\n          top: convertToUnit(dimensions.content.top),\n          left: convertToUnit(dimensions.content.left),\n        },\n        onClick: () => {\n          isActive.value = !props.closeOnContentClick\n        },\n      }\n\n      const content = h('div', propsData, [slots.default && slots.default()])\n\n      const directives: any = [\n        [vShow, isActive.value],\n        [resize, onResize],\n      ]\n\n      if (props.closeOnClick) directives.push([clickOutside, directive.value])\n\n      return withDirectives(content, directives)\n    }\n\n    onMounted(() => {\n      activatorRef.value = slots.activator\n        ? activatorRef.value\n        : contentRef.value.parentNode\n\n      addActivatorEvents()\n      setDetached(contentRef.value)\n    })\n\n    onBeforeUnmount(() => {\n      removeActivatorEvents()\n      removeDetached(contentRef.value)\n    })\n\n    function onResize() {\n      if (!isActive.value) return\n      requestAnimationFrame(() => setDimensions(activatorRef))\n    }\n\n    return () => [\n      h('div', { class: { 'v-menu': true } }),\n      slots.activator && genActivatorSlot(),\n      useTransition(genContentSlot(), 'fade'),\n    ]\n  },\n})\n"],"sourceRoot":"","file":"VMenu.js"}