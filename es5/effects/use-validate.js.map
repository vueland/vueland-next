{"version":3,"sources":["../../../src/effects/use-validate.ts"],"names":[],"mappings":";;;;;;;;AAAA;;AAEO,IAAM,aAAa,GAAG,SAAhB,aAAgB,GAAK;AAChC,SAAO;AACL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,KADD;AAEL,iBAAS;AAFJ,KADF;AAKL,IAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT;AALF,GAAP;AAOD,CARM;;;;AAUD,SAAU,WAAV,CAAsB,KAAtB,EAA2B;AAE/B,MAAM,UAAU,GAAG,mBAAS;AAC1B,IAAA,UAAU,EAAE,IADc;AAE1B,IAAA,iBAAiB,EAAE,IAFO;AAG1B,IAAA,OAAO,EAAE;AAHiB,GAAT,CAAnB;AAMA,MAAM,QAAQ,GAAG,mBAAS,YAAK;AAC7B,WAAO,KAAK,CAAC,KAAN,KAAgB,KAAK,CAArB,IACL,KAAK,CAAC,KAAN,KAAgB,IADX,IAEL,KAAK,CAAC,KAAN,CAAY,MAAZ,GAAqB,CAFvB;AAGD,GAJgB,CAAjB;;AAMA,MAAM,OAAO,GAAG,SAAV,OAAU,GAAK;AACnB,IAAA,UAAU,CAAC,OAAX,GAAqB,IAArB;AACD,GAFD;;AAIA,MAAM,QAAQ,GAAG,SAAX,QAAW,GAAsC;AAAA,QAArC,GAAqC,uEAA/B,KAAK,CAAC,KAAyB;AACrD,QAAI,CAAC,QAAQ,CAAC,KAAd,EAAqB,OAAO,IAAP;AAErB,IAAA,OAAO;;AAEP,QAAM,MAAM,GAAG,SAAT,MAAS,CAAC,GAAD,EAAoB;AAAA,UAAd,GAAc,uEAAR,IAAQ;;AACjC,UAAI,UAAU,CAAC,UAAX,KAA0B,GAA9B,EAAmC;AACjC,QAAA,UAAU,CAAC,UAAX,GAAwB,GAAxB;AACD;;AAED,UAAI,GAAG,IAAI,UAAU,CAAC,iBAAX,KAAiC,GAA5C,EAAiD;AAC/C,QAAA,UAAU,CAAC,iBAAX,GAA+B,GAA/B;AACD;AACF,KARD;;AAUA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,KAAK,CAAC,KAAN,CAAY,MAAlC,EAA0C,CAAC,GAAG,GAA9C,EAAmD,CAAC,IAAI,CAAxD,EAA2D;AACzD,UAAM,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY,CAAZ,CAAb;AAEA,UAAI,MAAM,SAAV;;AAEA,UAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AAC9B,QAAA,MAAM,GAAG,IAAI,CAAC,GAAD,CAAb;AACD;;AAED,UAAI,MAAM,KAAK,KAAX,IAAoB,OAAO,MAAP,KAAkB,QAA1C,EAAoD;AAClD,QAAA,MAAM,CAAC,IAAD,EAAO,MAAP,CAAN;AACA,eAAO,KAAP;AACD;;AAED,UAAI,MAAM,KAAK,IAAX,IAAmB,CAAC,KAAK,GAAG,GAAG,CAAnC,EAAsC;AACpC,QAAA,MAAM,CAAC,KAAD,CAAN;AACA,eAAO,IAAP;AACD;AACF;AACF,GAlCD;;AAoCA,SAAO;AACL,IAAA,QAAQ,EAAR,QADK;AAEL,IAAA,OAAO,EAAP,OAFK;AAGL,IAAA,UAAU,EAAV;AAHK,GAAP;AAKD","sourcesContent":["import { reactive, computed } from 'vue'\n\nexport const validateProps = () => {\n  return {\n    rules: {\n      type: Array,\n      default: null\n    },\n    value: [String, Number]\n  }\n}\n\nexport function useValidate(props) {\n\n  const validState = reactive({\n    innerError: null,\n    innerErrorMessage: null,\n    isDirty: false\n  })\n\n  const hasRules = computed(() => {\n    return props.rules !== void 0 &&\n      props.rules !== null &&\n      props.rules.length > 0\n  })\n\n  const focused = () => {\n    validState.isDirty = true\n  }\n\n  const validate = (val = props.value): boolean | void => {\n    if (!hasRules.value) return true\n\n    focused()\n\n    const update = (err, msg = null) => {\n      if (validState.innerError !== err) {\n        validState.innerError = err\n      }\n\n      if (msg && validState.innerErrorMessage !== msg) {\n        validState.innerErrorMessage = msg\n      }\n    }\n\n    for (let i = 0, len = props.rules.length; i < len; i += 1) {\n      const rule = props.rules[i]\n\n      let result\n\n      if (typeof rule === 'function') {\n        result = rule(val)\n      }\n\n      if (result === false || typeof result === 'string') {\n        update(true, result)\n        return false\n      }\n\n      if (result === true && i === len - 1) {\n        update(false)\n        return true\n      }\n    }\n  }\n\n  return {\n    validate,\n    focused,\n    validState,\n  }\n}\n"],"sourceRoot":"","file":"use-validate.js"}