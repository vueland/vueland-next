{"version":3,"sources":["../../../../src/components/VProgressCircular/VProgressCircular.ts"],"names":[],"mappings":"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","sourcesContent":["import './VProgressCircular.scss'\n\nimport { h, computed, defineComponent } from 'vue'\n\n// Effects\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Types\nimport { VNode } from 'vue'\nimport { convertToUnit } from '../../helpers'\n\nexport const VProgressCircular = defineComponent({\n  name: 'v-progress-circular',\n  props: {\n    indeterminate: Boolean,\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    ...colorProps(),\n  },\n  setup(props, { slots }) {\n    const radius = 20\n\n    const { setTextColor } = useColors()\n\n    const normalizedValue = computed<number>(() => {\n      if (props.value < 0) return 0\n\n      if (props.value > 100) return 100\n\n      return parseFloat(props.value as string)\n    })\n\n    const classes = computed<Record<string, boolean>>(() => {\n      return {\n        'v-progress-circular': true,\n        'v-progress-circular--indeterminate': props.indeterminate,\n      }\n    })\n\n    const circumference = computed<number>(() => {\n      return 2 * Math.PI * radius\n    })\n\n    const strokeDashArray = computed<number>(() => {\n      return Math.round(circumference.value * 1000) / 1000\n    })\n\n    const strokeDashOffset = computed<string>(() => {\n      return ((100 - normalizedValue.value) / 100) * circumference.value + 'px'\n    })\n\n    const viewBoxSize = computed<number>(() => {\n      return radius / (1 - Number(props.width) / +props.size)\n    })\n\n    const strokeWidth = computed<number>(() => {\n      return (Number(props.width) / +props.size) * viewBoxSize.value * 2\n    })\n\n    const styles = computed<object>(() => {\n      return {\n        width: convertToUnit(props.size),\n        height: convertToUnit(props.size),\n      }\n    })\n\n    const svgStyle = computed(() => {\n      return {\n        transform: `rotate(${+props.rotate}deg)`,\n      }\n    })\n\n    function genCircle(name: string, offset: string | number): VNode {\n      return h('circle', {\n        class: `v-progress-circular__${name}`,\n        fill: 'transparent',\n        cx: 2 * viewBoxSize.value,\n        cy: 2 * viewBoxSize.value,\n        r: radius,\n        'stroke-width': strokeWidth.value,\n        'stroke-dasharray': strokeDashArray.value,\n        'stroke-dashoffset': offset,\n      })\n    }\n\n    function genSvg() {\n      const children = [\n        props.indeterminate || genCircle('underlay', 0),\n        genCircle('overlay', strokeDashOffset.value),\n      ]\n\n      const propsData = {\n        xmlns: 'http://www.w3.org/2000/svg',\n        viewBox: `${viewBoxSize.value} ${viewBoxSize.value} ${\n          2 * viewBoxSize.value\n        } ${2 * viewBoxSize.value}`,\n\n        style: svgStyle.value,\n      }\n\n      return h('svg', propsData, children)\n    }\n\n    function genInfo() {\n      const propsData = {\n        class: 'v-progress-circular__info',\n      }\n      return h('div', propsData, slots.default && slots.default())\n    }\n\n    return () => {\n      const propsData = setTextColor(props.color!, {\n        class: classes.value,\n        style: styles.value,\n      })\n      return h('div', propsData, [genSvg(), genInfo()])\n    }\n  },\n})\n"],"sourceRoot":"","file":"VProgressCircular.js"}