{"version":3,"sources":["../../../src/effects/use-dimensions.ts"],"names":[],"mappings":";;;;;;;AAAA;;AAEM,SAAU,aAAV,GAAuB;AAC3B,MAAM,UAAU,GAAG,mBAAS;AAC1B,IAAA,SAAS,EAAE;AACT,MAAA,GAAG,EAAE,CADI;AAET,MAAA,IAAI,EAAE,CAFG;AAGT,MAAA,MAAM,EAAE,CAHC;AAIT,MAAA,KAAK,EAAE,CAJE;AAKT,MAAA,KAAK,EAAE,CALE;AAMT,MAAA,MAAM,EAAE;AANC,KADe;AAS1B,IAAA,OAAO,EAAE;AACP,MAAA,GAAG,EAAE,CADE;AAEP,MAAA,IAAI,EAAE,CAFC;AAGP,MAAA,MAAM,EAAE,CAHD;AAIP,MAAA,KAAK,EAAE,CAJA;AAKP,MAAA,KAAK,EAAE,CALA;AAMP,MAAA,MAAM,EAAE;AAND,KATiB;AAiB1B,IAAA,WAAW,EAAE,CAjBa;AAkB1B,IAAA,SAAS,EAAE;AAlBe,GAAT,CAAnB;AAqBA,MAAM,UAAU,GAAG,cAA8B,IAA9B,CAAnB;AACA,MAAI,SAAJ;AACA,MAAI,cAAJ;AAGA,EAAA,UAAU,CAAC,WAAX,GAAyB,YAAY,EAArC;;AAEA,WAAS,oBAAT,CAA8B,EAA9B,EAAgC;AAC9B,QAAM,IAAI,GAAG,EAAE,CAAC,qBAAH,EAAb;AAEA,WAAO;AACL,MAAA,GAAG,EAAE,IAAI,CAAC,GADL;AAEL,MAAA,IAAI,EAAE,IAAI,CAAC,IAFN;AAGL,MAAA,MAAM,EAAE,IAAI,CAAC,MAHR;AAIL,MAAA,KAAK,EAAE,IAAI,CAAC,KAJP;AAKL,MAAA,KAAK,EAAE,IAAI,CAAC,KALP;AAML,MAAA,MAAM,EAAE,IAAI,CAAC;AANR,KAAP;AAQD;;AAQD,WAAS,YAAT,GAAqB;AACnB,QAAI,CAAC,MAAL,EAAa,OAAO,CAAP;AAEb,WAAO,MAAM,CAAC,WAAP,IAAsB,QAAQ,CAAC,eAAT,CAAyB,SAAtD;AACD;;AAiBD,WAAS,aAAT,CAAuB,YAAvB,EAAmC;AACjC,IAAA,SAAS,GAAG,YAAY,CAAC,KAAzB;AACA,IAAA,cAAc,GAAG,oBAAoB,CAAC,SAAD,CAArC;AAEA,IAAA,sBAAsB;AACtB,IAAA,oBAAoB;AACrB;;AAED,WAAS,sBAAT,GAA+B;AAC7B,IAAA,UAAU,CAAC,SAAX,CAAqB,KAArB,GAA6B,cAAc,CAAC,KAA5C;AACA,IAAA,UAAU,CAAC,SAAX,CAAqB,GAArB,GAA2B,cAAc,CAAC,GAAf,GAAqB,WAAhD;AACA,IAAA,UAAU,CAAC,SAAX,CAAqB,IAArB,GAA4B,cAAc,CAAC,IAA3C;AACD;;AAED,WAAS,oBAAT,GAA6B;AAC3B,IAAA,UAAU,CAAC,OAAX,CAAmB,GAAnB,GAAyB,cAAc,CAAC,GAAf,GAAqB,WAA9C;AACA,IAAA,UAAU,CAAC,OAAX,CAAmB,IAAnB,GAA0B,cAAc,CAAC,IAAzC;AACA,IAAA,UAAU,CAAC,OAAX,CAAmB,KAAnB,GAA2B,cAAc,CAAC,KAA1C;AACD;;AAED,SAAO;AACL,IAAA,UAAU,EAAV,UADK;AAEL,IAAA,UAAU,EAAV,UAFK;AAGL,IAAA,aAAa,EAAb;AAHK,GAAP;AAKD","sourcesContent":["import { ref, reactive } from 'vue'\n\nexport function useDimensions() {\n  const dimensions = reactive({\n    activator: {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n    },\n    content: {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n    },\n    pageYOffset: 0,\n    pageWidth: 0,\n  })\n\n  const contentRef = ref<HTMLElement | any | null>(null)\n  let activator\n  let activatorRects\n\n  // const calcYOffset = computed(() => {})\n  dimensions.pageYOffset = getOffsetTop()\n\n  function getBoundedClientRect(el) {\n    const rect = el.getBoundingClientRect()\n\n    return {\n      top: rect.top,\n      left: rect.left,\n      bottom: rect.bottom,\n      right: rect.right,\n      width: rect.width,\n      height: rect.height,\n    }\n  }\n\n  // function getInnerHeight(): number {\n  //   if (!window) return 0\n  //\n  //   return window.innerHeight || document.documentElement.clientHeight\n  // }\n\n  function getOffsetTop(): number {\n    if (!window) return 0\n\n    return window.pageYOffset || document.documentElement.scrollTop\n  }\n\n  // function snapShot(cb) {\n  //   requestAnimationFrame(() => {\n  //     const el = contentRef.value\n  //\n  //     if (!el || el.style.display !== 'none') {\n  //       cb()\n  //       return\n  //     }\n  //\n  //     el.style.display = 'inline-block'\n  //     cb()\n  //     el.style.display = 'none'\n  //   })\n  // }\n\n  function setDimensions(activatorRef) {\n    activator = activatorRef.value!\n    activatorRects = getBoundedClientRect(activator)\n\n    setActivatorDimensions()\n    setContentDimensions()\n  }\n\n  function setActivatorDimensions() {\n    dimensions.activator.width = activatorRects.width\n    dimensions.activator.top = activatorRects.top + pageYOffset\n    dimensions.activator.left = activatorRects.left\n  }\n\n  function setContentDimensions() {\n    dimensions.content.top = activatorRects.top + pageYOffset\n    dimensions.content.left = activatorRects.left\n    dimensions.content.width = activatorRects.width\n  }\n\n  return {\n    dimensions,\n    contentRef,\n    setDimensions,\n  }\n}\n"],"sourceRoot":"","file":"use-dimensions.js"}