{"version":3,"sources":["../../../../src/components/VSelect/VSelect.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VSelect.scss'\n\n// Vue API\nimport {\n  h,\n  reactive,\n  computed,\n  defineComponent,\n  withDirectives,\n  watch,\n  inject,\n  onBeforeUnmount,\n} from 'vue'\n\n// Effects\nimport { validateProps, useValidate } from '../../effects/use-validate'\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Types\nimport { VNode, Ref } from 'vue'\n\n// Components\nimport { VInput } from '../VInput'\nimport { VSelectList } from './VSelectList'\n\n// Directives\nimport { clickOutside } from '../../directives'\n\n\ntype SelectState = {\n  selected: any | null\n  focused: boolean\n  isMenuActive: boolean\n}\n\nexport const VSelect = defineComponent({\n  name: 'v-select',\n\n  props: {\n    label: String,\n    items: Array,\n    dark: Boolean,\n    valueKey: String,\n    idKey: String,\n    listColor: String,\n    disabled: Boolean,\n    readonly: Boolean,\n    modelValue: [Array, String, Object],\n    ...validateProps(),\n    ...colorProps(),\n  } as any,\n\n  setup(props, { emit }): () => VNode {\n    const state: SelectState = reactive({\n      selected: null,\n      focused: false,\n      isMenuActive: false,\n    })\n\n    const { setTextColor } = useColors()\n\n    const {\n      validate,\n      dirty,\n      update,\n      errorState,\n      computedColor,\n      validateClasses,\n      validationState,\n    } = useValidate(props)\n\n    const fields: Ref<any[]> | undefined = inject('fields')\n\n    const validateValue = () => {\n      return props.rules?.length && validate(state.selected || props.modelValue)\n    }\n\n    const directive = computed(() => {\n      return state.focused ? {\n        handler: onBlur,\n        closeConditional: true,\n      } : undefined\n    })\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-select': true,\n      'v-select--disabled': props.disabled,\n      'v-select--focused': state.focused,\n      ...validateClasses.value,\n    }))\n\n    watch(\n      () => props.modelValue,\n      value => (state.selected = value as any),\n      { immediate: true },\n    )\n\n    if (fields?.value && props.rules?.length) {\n      fields!.value.push(validateValue)\n    }\n\n    function toggleState() {\n      state.focused = !state.focused\n      state.isMenuActive = !state.isMenuActive\n    }\n\n    function onBlur() {\n      requestAnimationFrame(validateValue)\n      setTimeout(toggleState)\n      emit('blur')\n    }\n\n    function onClick() {\n      dirty()\n      update(errorState.innerError)\n      toggleState()\n      emit('focus')\n    }\n\n    function selectItem(it) {\n      state.selected = it\n      emit('select', it)\n      emit('update:modelValue', it)\n    }\n\n    function genInput(): VNode {\n      const selectedValue = typeof state.selected === 'string' ?\n        state.selected : state.selected[props.valueKey as string]\n\n      const inputProps = {\n        value: selectedValue,\n        disabled: props.disabled,\n        readonly: props.readonly,\n        class: {\n          'v-select__input': true,\n        },\n        onClick,\n      }\n      return h('input', setTextColor(computedColor.value!, inputProps))\n    }\n\n    function genSelectList(): VNode {\n      const propsData = {\n        class: {},\n        items: props.items,\n        valueKey: props.valueKey,\n        idKey: props.idKey,\n        active: state.isMenuActive,\n        color: props.dark ? 'white' : '',\n        listColor: props.listColor,\n        onSelect: it => selectItem(it),\n      }\n      return h(VSelectList, propsData)\n    }\n\n    function genSelect(): VNode {\n      const selectVNode = h('div', {\n          class: classes.value,\n        },\n        [genInput(), genSelectList()],\n      )\n\n      return withDirectives(selectVNode, [[clickOutside, directive.value]])\n    }\n\n    onBeforeUnmount(() => {\n      if (fields!.value) {\n        fields!.value = fields!.value.filter(v => v !== validateValue)\n      }\n    })\n\n    return () => {\n      const propsData = {\n        label: props.label,\n        focused: state.focused,\n        hasState: !!state.selected,\n        hasError: errorState.innerError,\n        dark: !!props.dark,\n        color: validationState.value,\n        disabled: !!props.disabled,\n        isDirty: !!errorState.isDirty,\n        message: errorState.innerErrorMessage,\n      } as any\n\n      return h(VInput, propsData, {\n          select: () => (props.items?.length ? genSelect() : null),\n        },\n      )\n    }\n\n  },\n})\n"],"sourceRoot":"","file":"VSelect.js"}