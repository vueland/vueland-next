{"version":3,"sources":["../../../../src/components/VTextField/VTextField.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VTextField.scss'\n\n// Vue API\nimport { h, watch, computed, reactive, defineComponent } from 'vue'\n\n// Effects\nimport { validateProps } from '../../effects/use-validate'\nimport { useColors, colorProps } from '../../effects/use-colors'\nimport { useTheme } from '../../effects/use-theme'\n\n// Components\nimport { VInput } from '../VInput'\n\n// Types\nimport { VNode } from 'vue'\n\ntype TextFieldState = {\n  value: string | number\n  focused: boolean\n}\n\nexport const VTextField = defineComponent({\n  name: 'v-text-field',\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    readonly: Boolean,\n    label: String,\n    isDirty: Boolean,\n    type: {\n      type: String,\n      default: 'text',\n    },\n    modelValue: [String, Number, Date],\n    tag: {\n      type: String,\n      default: 'input',\n    },\n    ...validateProps(),\n    ...colorProps(),\n  } as any,\n\n  emits: [\n    'input',\n    'focus',\n    'blur',\n    'change',\n    'clear',\n    'update:value',\n    'update:modelValue',\n  ],\n\n  setup(props, { emit, attrs }): () => VNode {\n    const state: TextFieldState = reactive({\n      value: '',\n      focused: false,\n    })\n\n    state.value = props.modelValue || props.value\n\n    const { setTextColor } = useColors()\n    const { base } = useTheme()\n\n    const computedValue = computed(() => {\n      return props.modelValue || props.value\n    })\n\n    watch(\n      () => computedValue.value,\n      (value) => (state.value = value as any)\n    )\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-text-field': true,\n      'v-text-field--disabled': props.disabled,\n    }))\n\n    function onClear() {\n      state.value = ''\n      emit('update:modelValue', state.value)\n      emit('update:value', state.value)\n      emit('input', state.value)\n      emit('clear', state.value)\n    }\n\n    function onBlur() {\n      setTimeout(() => {\n        state.focused = false\n        emit('blur')\n      })\n    }\n\n    function onFocus() {\n      state.focused = true\n      emit('focus')\n    }\n\n    function onChange() {\n      emit('change', state.value)\n    }\n\n    function onInput(e) {\n      state.value = e.target.value\n      emit('update:modelValue', state.value)\n      emit('update:value', state.value)\n      emit('input', state.value)\n    }\n\n    function genInput(): VNode {\n      const propsData = {\n        disabled: props.disabled,\n        readonly: props.readonly,\n        value: state.value,\n        autocomplete: attrs.autocomplete,\n        class: 'v-text-field__input',\n        onFocus,\n        onBlur,\n        onInput,\n        onChange,\n      } as any\n\n      if (props.tag === 'input') {\n        propsData.type = props.type\n      }\n\n      return h(props.tag, setTextColor(props.dark ? 'white' : base, propsData))\n    }\n\n    function genTextField(): VNode {\n      return h('div', { class: classes.value }, genInput())\n    }\n\n    return () => {\n      const propsData = {\n        label: props.label,\n        focused: state.focused,\n        hasState: !!computedValue.value,\n        dark: props.dark,\n        disabled: props.disabled,\n        clearable: props.clearable,\n        rules: props.rules,\n        value: computedValue.value,\n        color: props.color,\n        onClear,\n      }\n\n      return h(VInput, propsData, {\n        textField: () => genTextField(),\n      })\n    }\n  },\n})\n"],"sourceRoot":"","file":"VTextField.js"}