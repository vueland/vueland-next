{"version":3,"sources":["../../../../src/components/VList/VListItem.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;AAGA;;AACA;;;;;;;;AAEO,IAAM,SAAS,GAAG,0BAAgB;AACvC,EAAA,IAAI,EAAE,aADiC;AAGvC,EAAA,KAAK;AACH,IAAA,WAAW,EAAE;AACX,MAAA,IAAI,EAAE,MADK;AAEX,iBAAS;AAFE,KADV;AAKH,IAAA,IAAI,EAAE,OALH;AAMH,IAAA,QAAQ,EAAE,OANP;AAOH,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,CADD;AAEL,iBAAS;AAFJ;AAPJ,KAWA,6BAXA,CAHkC;AAiBvC,EAAA,KAAK,EAAE,CAAC,OAAD,CAjBgC;AAmBvC,EAAA,KAnBuC,iBAmBjC,KAnBiC,QAmBX;AAAA,QAAb,KAAa,QAAb,KAAa;AAAA,QAAN,IAAM,QAAN,IAAM;;AAC1B,qBAAyB,4BAAzB;AAAA,QAAQ,YAAR,cAAQ,YAAR;;AACA,qBAAqB,2BAAU,KAAV,CAArB;AAAA,QAAQ,QAAR,cAAQ,QAAR;;AAEA,QAAM,OAAO,GAAG,mBAAkC;AAAA,aAAO;AACvD,uBAAe,IADwC;AAEvD,+BAAuB,QAAQ,CAAC;AAFuB,OAAP;AAAA,KAAlC,CAAhB;;AAKA,aAAS,OAAT,CAAiB,CAAjB,EAAkB;AAChB,MAAA,CAAC,CAAC,cAAF;AACA,MAAA,QAAQ,CAAC,KAAT,GAAiB,CAAC,QAAQ,CAAC,KAA3B;AACA,MAAA,IAAI,CAAC,OAAD,EAAU,CAAV,CAAJ;AACD;;AAED,WAAO,YAAK;AACV,UAAM,OAAO,GAAG,KAAK,WAAL,IAAiB,KAAK,WAAL,CAAc;AAAE,QAAA,MAAM,EAAE,QAAQ,CAAC;AAAnB,OAAd,CAAjC;AAEA,UAAM,SAAS,GAAG;AAChB,iBAAO,OAAO,CAAC,KADC;AAEhB,QAAA,OAAO,EAAP;AAFgB,OAAlB;AAKA,UAAM,KAAK,GAAG,KAAK,CAAC,IAAN,GAAa,OAAb,GAAuB,KAAK,CAAC,KAA3C;AAEA,aAAO,YACL,KADK,EAEL,KAAK,IAAI,QAAQ,CAAC,KAAlB,GAA0B,YAAY,CAAC,KAAD,EAAQ,SAAR,CAAtC,GAA2D,SAFtD,EAGL,OAHK,CAAP;AAKD,KAfD;AAgBD;AAlDsC,CAAhB,CAAlB","sourcesContent":["// Styles\nimport './VListItem.scss'\n\n// Vue API\nimport { h, computed, defineComponent } from 'vue'\n\n// Effects\nimport { useColors, colorProps } from '../../effects/use-colors'\nimport { useToggle } from '../../effects/use-toggle'\n\nexport const VListItem = defineComponent({\n  name: 'v-list-item',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    dark: Boolean,\n    inactive: Boolean,\n    value: {\n      type: [Object, String, Number, Boolean],\n      default: null,\n    },\n    ...colorProps(),\n  },\n\n  emits: ['click'],\n\n  setup(props, { slots, emit }) {\n    const { setTextColor } = useColors()\n    const { isActive } = useToggle(props)\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-list-item': true,\n      'v-list-item--active': isActive.value,\n    }))\n\n    function onClick(e) {\n      e.preventDefault()\n      isActive.value = !isActive.value\n      emit('click', e)\n    }\n\n    return () => {\n      const content = slots.default && slots.default({ active: isActive.value })\n\n      const propsData = {\n        class: classes.value,\n        onClick,\n      }\n\n      const color = props.dark ? 'white' : props.color\n\n      return h(\n        'div',\n        color && isActive.value ? setTextColor(color, propsData) : propsData,\n        content\n      )\n    }\n  },\n})\n"],"sourceRoot":"","file":"VListItem.js"}