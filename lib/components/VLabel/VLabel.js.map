{"version":3,"sources":["../../../../src/components/VLabel/VLabel.ts"],"names":[],"mappings":"AACA,OAAO,4CAAP;AAGA,SAAS,CAAT,EAAY,QAAZ,EAAsB,eAAtB,QAA6C,KAA7C;AAGA,SAAS,aAAT,QAA8B,eAA9B;AAGA,SAAS,UAAT,EAAqB,SAArB,QAAsC,0BAAtC;AAKA,OAAO,MAAM,MAAM,GAAG,eAAe,CAAC;AACpC,EAAA,IAAI,EAAE,SAD8B;AAGpC,EAAA,KAAK,EAAE;AACL,IAAA,QAAQ,EAAE,OADL;AAEL,IAAA,QAAQ,EAAE,OAFL;AAGL,IAAA,OAAO,EAAE,OAHJ;AAIL,IAAA,OAAO,EAAE,OAJJ;AAKL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADF;AAEJ,MAAA,OAAO,EAAE;AAFL,KALD;AASL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CADD;AAEL,MAAA,OAAO,EAAE;AAFJ,KATF;AAaL,IAAA,QAAQ,EAAE,OAbL;AAcL,OAAG,UAAU;AAdR,GAH6B;;AAoBpC,EAAA,KAAK,CAAC,KAAD,EAAQ;AAAE,IAAA;AAAF,GAAR,EAAiB;AACpB,UAAM;AAAE,MAAA;AAAF,QAAmB,SAAS,EAAlC;AAEA,UAAM,QAAQ,GAAG,QAAQ,CAAU,MAAK;AACtC,aAAO,CAAC,CAAC,KAAK,CAAC,QAAR,IAAoB,CAAC,CAAC,KAAK,CAAC,OAAnC;AACD,KAFwB,CAAzB;AAIA,UAAM,OAAO,GAAG,QAAQ,CAA0B,OAAO;AACvD,iBAAW,IAD4C;AAEvD,yBAAmB,QAAQ,CAAC,KAF2B;AAGvD,2BAAqB,KAAK,CAAC,OAH4B;AAIvD,4BAAsB,KAAK,CAAC,QAJ2B;AAKvD,8BAAwB,CAAC,CAAC,KAAK,CAAC;AALuB,KAAP,CAA1B,CAAxB;;AAQA,aAAS,YAAT,GAAqB;AACnB,aAAO;AACL,QAAA,KAAK,EAAE,OAAO,CAAC,KADV;AAEL,QAAA,KAAK,EAAE;AACL,UAAA,IAAI,EAAE,aAAa,CAAC,KAAK,CAAC,IAAP,CADd;AAEL,UAAA,KAAK,EAAE,aAAa,CAAC,KAAK,CAAC,KAAP,CAFf;AAGL,UAAA,QAAQ,EAAE,KAAK,CAAC,QAAN,GAAiB,UAAjB,GAA8B;AAHnC;AAFF,OAAP;AAQD;;AAED,WAAO,MAAY;AACjB,YAAM,SAAS,GAAG,YAAY,EAA9B;AAEA,aAAO,CAAC,CACN,OADM,EAEN,KAAK,CAAC,KAAN,GAAc,YAAY,CAAC,KAAK,CAAC,KAAP,EAAe,SAAf,CAA1B,GAAsD,SAFhD,EAGN,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,EAHX,CAAR;AAKD,KARD;AASD;;AAvDmC,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VLabel.scss'\n\n// Vue API\nimport { h, computed, defineComponent } from 'vue'\n\n// Helpers\nimport { convertToUnit } from '../../helpers'\n\n// Effects\nimport { colorProps, useColors } from '../../effects/use-colors'\n\n// Types\nimport { VNode } from 'vue'\n\nexport const VLabel = defineComponent({\n  name: 'v-label',\n\n  props: {\n    absolute: Boolean,\n    disabled: Boolean,\n    focused: Boolean,\n    onField: Boolean,\n    left: {\n      type: [Number, String],\n      default: 0,\n    },\n    right: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    hasState: Boolean,\n    ...colorProps(),\n  } as any,\n\n  setup(props, { slots }): () => VNode {\n    const { setTextColor } = useColors()\n\n    const isActive = computed<boolean>(() => {\n      return !!props.hasState || !!props.focused\n    })\n\n    const classes = computed<Record<string, boolean>>(() => ({\n      'v-label': true,\n      'v-label--active': isActive.value,\n      'v-label--on-field': props.onField,\n      'v-label--has-state': props.hasState,\n      'v-label--is-disabled': !!props.disabled,\n    }))\n\n    function genPropsData(): Record<string, any> {\n      return {\n        class: classes.value,\n        style: {\n          left: convertToUnit(props.left),\n          right: convertToUnit(props.right),\n          position: props.absolute ? 'absolute' : 'relative',\n        },\n      }\n    }\n\n    return (): VNode => {\n      const propsData = genPropsData()\n\n      return h(\n        'label',\n        props.color ? setTextColor(props.color!, propsData) : propsData,\n        slots.default && slots.default()\n      )\n    }\n  },\n})\n"],"sourceRoot":"","file":"VLabel.js"}