import './VSelectList.scss';
import { h, defineComponent, withDirectives, vShow } from 'vue';
import { VList, VListItem, VListItemTitle } from '../VList';
import { useToggle } from '../../effects/use-toggle';
import { useTransition } from '../../effects/use-transition';
import { useElevation } from '../../effects/use-elevation';
import { colorProps, useColors } from '../../effects/use-colors';
export const VSelectList = defineComponent({
    name: 'v-select-list',
    props: {
        items: Array,
        valueKey: String,
        idKey: String,
        active: Boolean,
        listColor: String,
        elevation: {
            type: [String, Number],
            default: 4,
        },
        ...colorProps(),
    },
    setup(props, { emit }) {
        const { isActive } = useToggle(props, 'active');
        const { elevationClasses } = useElevation(props);
        const { setTextColor, setBackground } = useColors();
        function genItems() {
            const key = props.valueKey;
            const propsData = {
                class: {},
                style: {},
            };
            return props.items.map((it) => {
                const item = h(VListItemTitle, props.color ? setTextColor(props.color, propsData) : propsData, {
                    default: () => (key ? it[key] : it),
                });
                return h(VListItem, {
                    key: props.idKey,
                    onClick: () => emit('select', it),
                }, {
                    default: () => item,
                });
            });
        }
        function genSelectListItems() {
            return h(VList, {
                class: 'v-select--items-list',
            }, { default: () => genItems() });
        }
        function genList() {
            const propsData = {
                class: {
                    'v-select-list': true,
                    ...elevationClasses.value,
                },
                style: {},
            };
            return withDirectives(h('div', props.listColor ? setBackground(props.listColor, propsData) : propsData, genSelectListItems()), [[vShow, isActive.value]]);
        }
        return () => useTransition(genList(), 'fade');
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVlNlbGVjdExpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L1ZTZWxlY3RMaXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sb0JBQW9CLENBQUE7QUFHM0IsT0FBTyxFQUFFLENBQUMsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxNQUFNLEtBQUssQ0FBQTtBQUcvRCxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsTUFBTSxVQUFVLENBQUE7QUFHM0QsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBQ3BELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQTtBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNkJBQTZCLENBQUE7QUFDMUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQTtBQUtoRSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsZUFBZSxDQUFDO0lBQ3pDLElBQUksRUFBRSxlQUFlO0lBQ3JCLEtBQUssRUFBRTtRQUNMLEtBQUssRUFBRSxLQUFLO1FBQ1osUUFBUSxFQUFFLE1BQU07UUFDaEIsS0FBSyxFQUFFLE1BQU07UUFDYixNQUFNLEVBQUUsT0FBTztRQUNmLFNBQVMsRUFBRSxNQUFNO1FBQ2pCLFNBQVMsRUFBRTtZQUNULElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUM7WUFDdEIsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUNELEdBQUcsVUFBVSxFQUFFO0tBQ1Q7SUFFUixLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFO1FBQ25CLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxTQUFTLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFBO1FBQy9DLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxHQUFHLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUNoRCxNQUFNLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxHQUFHLFNBQVMsRUFBRSxDQUFBO1FBRW5ELFNBQVMsUUFBUTtZQUNmLE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUE7WUFDMUIsTUFBTSxTQUFTLEdBQUc7Z0JBQ2hCLEtBQUssRUFBRSxFQUFFO2dCQUNULEtBQUssRUFBRSxFQUFFO2FBQ1YsQ0FBQTtZQUVELE9BQU8sS0FBSyxDQUFDLEtBQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFPLEVBQUUsRUFBRTtnQkFDbEMsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLGNBQWMsRUFDM0IsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFDOUQ7b0JBQ0UsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztpQkFDcEMsQ0FDRixDQUFBO2dCQUVELE9BQU8sQ0FBQyxDQUFDLFNBQVMsRUFBRTtvQkFDaEIsR0FBRyxFQUFFLEtBQUssQ0FBQyxLQUFLO29CQUNoQixPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUM7aUJBQ2xDLEVBQUU7b0JBQ0QsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUk7aUJBQ3BCLENBQ0YsQ0FBQTtZQUNILENBQUMsQ0FBQyxDQUFBO1FBQ0osQ0FBQztRQUVELFNBQVMsa0JBQWtCO1lBQ3pCLE9BQU8sQ0FBQyxDQUFDLEtBQUssRUFBRTtnQkFDWixLQUFLLEVBQUUsc0JBQXNCO2FBQzlCLEVBQUUsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FDakMsQ0FBQTtRQUNILENBQUM7UUFFRCxTQUFTLE9BQU87WUFDZCxNQUFNLFNBQVMsR0FBRztnQkFDaEIsS0FBSyxFQUFFO29CQUNMLGVBQWUsRUFBRSxJQUFJO29CQUNyQixHQUFHLGdCQUFnQixDQUFDLEtBQUs7aUJBQzFCO2dCQUNELEtBQUssRUFBRSxFQUFFO2FBQ1YsQ0FBQTtZQUVELE9BQU8sY0FBYyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQzNCLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQ3ZFLGtCQUFrQixFQUFFLENBQ3JCLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBQy9CLENBQUM7UUFFRCxPQUFPLEdBQUcsRUFBRSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQTtJQUMvQyxDQUFDO0NBQ0YsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU3R5bGVzXG5pbXBvcnQgJy4vVlNlbGVjdExpc3Quc2NzcydcblxuLy8gVnVlIEFQSVxuaW1wb3J0IHsgaCwgZGVmaW5lQ29tcG9uZW50LCB3aXRoRGlyZWN0aXZlcywgdlNob3cgfSBmcm9tICd2dWUnXG5cbi8vIENvbXBvbmVudHNcbmltcG9ydCB7IFZMaXN0LCBWTGlzdEl0ZW0sIFZMaXN0SXRlbVRpdGxlIH0gZnJvbSAnLi4vVkxpc3QnXG5cbi8vIEVmZmVjdHNcbmltcG9ydCB7IHVzZVRvZ2dsZSB9IGZyb20gJy4uLy4uL2VmZmVjdHMvdXNlLXRvZ2dsZSdcbmltcG9ydCB7IHVzZVRyYW5zaXRpb24gfSBmcm9tICcuLi8uLi9lZmZlY3RzL3VzZS10cmFuc2l0aW9uJ1xuaW1wb3J0IHsgdXNlRWxldmF0aW9uIH0gZnJvbSAnLi4vLi4vZWZmZWN0cy91c2UtZWxldmF0aW9uJ1xuaW1wb3J0IHsgY29sb3JQcm9wcywgdXNlQ29sb3JzIH0gZnJvbSAnLi4vLi4vZWZmZWN0cy91c2UtY29sb3JzJ1xuXG4vLyBUeXBlc1xuaW1wb3J0IHsgVk5vZGUgfSBmcm9tICd2dWUnXG5cbmV4cG9ydCBjb25zdCBWU2VsZWN0TGlzdCA9IGRlZmluZUNvbXBvbmVudCh7XG4gIG5hbWU6ICd2LXNlbGVjdC1saXN0JyxcbiAgcHJvcHM6IHtcbiAgICBpdGVtczogQXJyYXksXG4gICAgdmFsdWVLZXk6IFN0cmluZyxcbiAgICBpZEtleTogU3RyaW5nLFxuICAgIGFjdGl2ZTogQm9vbGVhbixcbiAgICBsaXN0Q29sb3I6IFN0cmluZyxcbiAgICBlbGV2YXRpb246IHtcbiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sXG4gICAgICBkZWZhdWx0OiA0LFxuICAgIH0sXG4gICAgLi4uY29sb3JQcm9wcygpLFxuICB9IGFzIGFueSxcblxuICBzZXR1cChwcm9wcywgeyBlbWl0IH0pIHtcbiAgICBjb25zdCB7IGlzQWN0aXZlIH0gPSB1c2VUb2dnbGUocHJvcHMsICdhY3RpdmUnKVxuICAgIGNvbnN0IHsgZWxldmF0aW9uQ2xhc3NlcyB9ID0gdXNlRWxldmF0aW9uKHByb3BzKVxuICAgIGNvbnN0IHsgc2V0VGV4dENvbG9yLCBzZXRCYWNrZ3JvdW5kIH0gPSB1c2VDb2xvcnMoKVxuXG4gICAgZnVuY3Rpb24gZ2VuSXRlbXMoKTogVk5vZGVbXSB7XG4gICAgICBjb25zdCBrZXkgPSBwcm9wcy52YWx1ZUtleVxuICAgICAgY29uc3QgcHJvcHNEYXRhID0ge1xuICAgICAgICBjbGFzczoge30sXG4gICAgICAgIHN0eWxlOiB7fSxcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByb3BzLml0ZW1zIS5tYXAoKGl0OiBhbnkpID0+IHtcbiAgICAgICAgY29uc3QgaXRlbSA9IGgoVkxpc3RJdGVtVGl0bGUsXG4gICAgICAgICAgcHJvcHMuY29sb3IgPyBzZXRUZXh0Q29sb3IocHJvcHMuY29sb3IsIHByb3BzRGF0YSkgOiBwcm9wc0RhdGEsXG4gICAgICAgICAge1xuICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gKGtleSA/IGl0W2tleV0gOiBpdCksXG4gICAgICAgICAgfSxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBoKFZMaXN0SXRlbSwge1xuICAgICAgICAgICAga2V5OiBwcm9wcy5pZEtleSxcbiAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGVtaXQoJ3NlbGVjdCcsIGl0KSxcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiBpdGVtLFxuICAgICAgICAgIH0sXG4gICAgICAgIClcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2VuU2VsZWN0TGlzdEl0ZW1zKCk6IFZOb2RlIHtcbiAgICAgIHJldHVybiBoKFZMaXN0LCB7XG4gICAgICAgICAgY2xhc3M6ICd2LXNlbGVjdC0taXRlbXMtbGlzdCcsXG4gICAgICAgIH0sIHsgZGVmYXVsdDogKCkgPT4gZ2VuSXRlbXMoKSB9LFxuICAgICAgKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdlbkxpc3QoKTogVk5vZGUge1xuICAgICAgY29uc3QgcHJvcHNEYXRhID0ge1xuICAgICAgICBjbGFzczoge1xuICAgICAgICAgICd2LXNlbGVjdC1saXN0JzogdHJ1ZSxcbiAgICAgICAgICAuLi5lbGV2YXRpb25DbGFzc2VzLnZhbHVlLFxuICAgICAgICB9LFxuICAgICAgICBzdHlsZToge30sXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB3aXRoRGlyZWN0aXZlcyhoKCdkaXYnLFxuICAgICAgICBwcm9wcy5saXN0Q29sb3IgPyBzZXRCYWNrZ3JvdW5kKHByb3BzLmxpc3RDb2xvciwgcHJvcHNEYXRhKSA6IHByb3BzRGF0YSxcbiAgICAgICAgZ2VuU2VsZWN0TGlzdEl0ZW1zKCksXG4gICAgICApLCBbW3ZTaG93LCBpc0FjdGl2ZS52YWx1ZV1dKVxuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB1c2VUcmFuc2l0aW9uKGdlbkxpc3QoKSwgJ2ZhZGUnKVxuICB9LFxufSlcbiJdfQ==