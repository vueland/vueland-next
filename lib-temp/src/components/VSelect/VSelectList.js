import { defineComponent, h, computed } from 'vue';
import { VList, VListItem, VListItemTitle } from '../VList';
import { getStringKeysValue } from '../../helpers';
export const VSelectList = defineComponent({
    name: 'v-select-list',
    props: {
        items: {
            type: Array,
            default: null
        },
        color: {
            type: String,
            default: '#ffffff'
        },
        textColor: {
            type: String,
            default: ''
        },
        valueKey: {
            type: String,
            default: ''
        },
        selected: {
            type: [String, Number, Object],
            default: null
        },
        activeClass: {
            type: String,
            default: ''
        }
    },
    emits: ['select'],
    setup(props, { emit }) {
        const computedSelect = computed({
            get() {
                return props.selected
                    ? props.items.findIndex((it) => {
                        const itemValue = getStringKeysValue(props.valueKey, it);
                        const selectedValue = getStringKeysValue(props.valueKey, props.selected);
                        return itemValue === selectedValue;
                    })
                    : null;
            },
            set(val) {
                emit('select', props.items[val]);
            }
        });
        const genItems = () => {
            return props.items.reduce((acc, it, i) => {
                const content = props.valueKey ?
                    getStringKeysValue(props.valueKey, it) : it;
                acc.push(h(VListItem, { key: i }, {
                    default: () => h(VListItemTitle, {}, {
                        default: () => content
                    })
                }));
                return acc;
            }, []);
        };
        const genItemsList = () => {
            return h(VList, {
                active: true,
                color: '#ffffff',
                activeClass: props.activeClass,
                ['onUpdate:value']: val => computedSelect.value = val
            }, {
                default: () => genItems()
            });
        };
        return () => h('div', {
            class: 'v-select-list'
        }, [props.items ? genItemsList() : null]);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVlNlbGVjdExpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L1ZTZWxlY3RMaXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxNQUFNLEtBQUssQ0FBQTtBQUVsRCxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsTUFBTSxVQUFVLENBQUE7QUFFM0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZUFBZSxDQUFBO0FBSWxELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxlQUFlLENBQUM7SUFDekMsSUFBSSxFQUFFLGVBQWU7SUFDckIsS0FBSyxFQUFFO1FBQ0wsS0FBSyxFQUFFO1lBQ0wsSUFBSSxFQUFFLEtBQUs7WUFDWCxPQUFPLEVBQUUsSUFBSTtTQUNkO1FBQ0QsS0FBSyxFQUFFO1lBQ0wsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsU0FBUztTQUNuQjtRQUNELFNBQVMsRUFBRTtZQUNULElBQUksRUFBRSxNQUFNO1lBQ1osT0FBTyxFQUFFLEVBQUU7U0FDWjtRQUNELFFBQVEsRUFBRTtZQUNSLElBQUksRUFBRSxNQUFNO1lBQ1osT0FBTyxFQUFFLEVBQUU7U0FDWjtRQUNELFFBQVEsRUFBRTtZQUNSLElBQUksRUFBRSxDQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFFO1lBQ2hDLE9BQU8sRUFBRSxJQUFJO1NBQ2Q7UUFDRCxXQUFXLEVBQUU7WUFDWCxJQUFJLEVBQUUsTUFBTTtZQUNaLE9BQU8sRUFBRSxFQUFFO1NBQ1o7S0FDRjtJQUNELEtBQUssRUFBRSxDQUFFLFFBQVEsQ0FBRTtJQUNuQixLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFO1FBQ25CLE1BQU0sY0FBYyxHQUFHLFFBQVEsQ0FBZ0I7WUFDN0MsR0FBRztnQkFDRCxPQUFPLEtBQUssQ0FBQyxRQUFRO29CQUNuQixDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRTt3QkFDN0IsTUFBTSxTQUFTLEdBQUcsa0JBQWtCLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQTt3QkFDeEQsTUFBTSxhQUFhLEdBQUcsa0JBQWtCLENBQ3RDLEtBQUssQ0FBQyxRQUFRLEVBQ2QsS0FBSyxDQUFDLFFBQVEsQ0FDZixDQUFBO3dCQUNELE9BQU8sU0FBUyxLQUFLLGFBQWEsQ0FBQTtvQkFDcEMsQ0FBQyxDQUFDO29CQUNGLENBQUMsQ0FBQyxJQUFJLENBQUE7WUFDVixDQUFDO1lBQ0QsR0FBRyxDQUFDLEdBQVc7Z0JBQ2IsSUFBSSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7WUFDbEMsQ0FBQztTQUNGLENBQUMsQ0FBQTtRQUVGLE1BQU0sUUFBUSxHQUFHLEdBQUcsRUFBRTtZQUNwQixPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDdkMsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO29CQUM5QixrQkFBa0IsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFTLENBQUE7Z0JBRW5ELEdBQWEsQ0FBQyxJQUFJLENBQ2pCLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQ3ZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsY0FBYyxFQUFFLEVBQUUsRUFBRTt3QkFDbkMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU87cUJBQ3ZCLENBQUM7aUJBQ0gsQ0FBQyxDQUFDLENBQUE7Z0JBRUwsT0FBTyxHQUFHLENBQUE7WUFDWixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUE7UUFDUixDQUFDLENBQUE7UUFFRCxNQUFNLFlBQVksR0FBRyxHQUFHLEVBQUU7WUFDeEIsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFO2dCQUNkLE1BQU0sRUFBRSxJQUFJO2dCQUNaLEtBQUssRUFBRSxTQUFTO2dCQUNoQixXQUFXLEVBQUUsS0FBSyxDQUFDLFdBQVc7Z0JBQzlCLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEdBQUcsR0FBRzthQUN0RCxFQUFFO2dCQUNELE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUU7YUFDMUIsQ0FBQyxDQUFBO1FBQ0osQ0FBQyxDQUFBO1FBRUQsT0FBTyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFO1lBQ3BCLEtBQUssRUFBRSxlQUFlO1NBQ3ZCLEVBQUUsQ0FBRSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFFLENBQUMsQ0FBQTtJQUM3QyxDQUFDO0NBQ0YsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50LCBoLCBjb21wdXRlZCB9IGZyb20gJ3Z1ZSdcbi8vIENvbXBvbmVudHNcbmltcG9ydCB7IFZMaXN0LCBWTGlzdEl0ZW0sIFZMaXN0SXRlbVRpdGxlIH0gZnJvbSAnLi4vVkxpc3QnXG4vLyBIZWxwZXJzXG5pbXBvcnQgeyBnZXRTdHJpbmdLZXlzVmFsdWUgfSBmcm9tICcuLi8uLi9oZWxwZXJzJ1xuLy8gVHlwZXNcbmltcG9ydCB7IE1heWJlIH0gZnJvbSAnLi4vLi4vLi4vdHlwZXMvYmFzZSdcblxuZXhwb3J0IGNvbnN0IFZTZWxlY3RMaXN0ID0gZGVmaW5lQ29tcG9uZW50KHtcbiAgbmFtZTogJ3Ytc2VsZWN0LWxpc3QnLFxuICBwcm9wczoge1xuICAgIGl0ZW1zOiB7XG4gICAgICB0eXBlOiBBcnJheSxcbiAgICAgIGRlZmF1bHQ6IG51bGxcbiAgICB9LFxuICAgIGNvbG9yOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnI2ZmZmZmZidcbiAgICB9LFxuICAgIHRleHRDb2xvcjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJydcbiAgICB9LFxuICAgIHZhbHVlS2V5OiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJ1xuICAgIH0sXG4gICAgc2VsZWN0ZWQ6IHtcbiAgICAgIHR5cGU6IFsgU3RyaW5nLCBOdW1iZXIsIE9iamVjdCBdLFxuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH0sXG4gICAgYWN0aXZlQ2xhc3M6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnXG4gICAgfVxuICB9LFxuICBlbWl0czogWyAnc2VsZWN0JyBdLFxuICBzZXR1cChwcm9wcywgeyBlbWl0IH0pIHtcbiAgICBjb25zdCBjb21wdXRlZFNlbGVjdCA9IGNvbXB1dGVkPE1heWJlPG51bWJlcj4+KHtcbiAgICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLnNlbGVjdGVkXG4gICAgICAgICAgPyBwcm9wcy5pdGVtcy5maW5kSW5kZXgoKGl0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpdGVtVmFsdWUgPSBnZXRTdHJpbmdLZXlzVmFsdWUocHJvcHMudmFsdWVLZXksIGl0KVxuICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRWYWx1ZSA9IGdldFN0cmluZ0tleXNWYWx1ZShcbiAgICAgICAgICAgICAgcHJvcHMudmFsdWVLZXksXG4gICAgICAgICAgICAgIHByb3BzLnNlbGVjdGVkXG4gICAgICAgICAgICApXG4gICAgICAgICAgICByZXR1cm4gaXRlbVZhbHVlID09PSBzZWxlY3RlZFZhbHVlXG4gICAgICAgICAgfSlcbiAgICAgICAgICA6IG51bGxcbiAgICAgIH0sXG4gICAgICBzZXQodmFsOiBudW1iZXIpIHtcbiAgICAgICAgZW1pdCgnc2VsZWN0JywgcHJvcHMuaXRlbXNbdmFsXSlcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgY29uc3QgZ2VuSXRlbXMgPSAoKSA9PiB7XG4gICAgICByZXR1cm4gcHJvcHMuaXRlbXMucmVkdWNlKChhY2MsIGl0LCBpKSA9PiB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSBwcm9wcy52YWx1ZUtleSA/XG4gICAgICAgICAgZ2V0U3RyaW5nS2V5c1ZhbHVlKHByb3BzLnZhbHVlS2V5LCBpdCkgOiBpdCBhcyBhbnlcblxuICAgICAgICAoYWNjIGFzIGFueVtdKS5wdXNoKFxuICAgICAgICAgIGgoVkxpc3RJdGVtLCB7IGtleTogaSB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiBoKFZMaXN0SXRlbVRpdGxlLCB7fSwge1xuICAgICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiBjb250ZW50XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH0pKVxuXG4gICAgICAgIHJldHVybiBhY2NcbiAgICAgIH0sIFtdKVxuICAgIH1cblxuICAgIGNvbnN0IGdlbkl0ZW1zTGlzdCA9ICgpID0+IHtcbiAgICAgIHJldHVybiBoKFZMaXN0LCB7XG4gICAgICAgIGFjdGl2ZTogdHJ1ZSxcbiAgICAgICAgY29sb3I6ICcjZmZmZmZmJyxcbiAgICAgICAgYWN0aXZlQ2xhc3M6IHByb3BzLmFjdGl2ZUNsYXNzLFxuICAgICAgICBbJ29uVXBkYXRlOnZhbHVlJ106IHZhbCA9PiBjb21wdXRlZFNlbGVjdC52YWx1ZSA9IHZhbFxuICAgICAgfSwge1xuICAgICAgICBkZWZhdWx0OiAoKSA9PiBnZW5JdGVtcygpXG4gICAgICB9KVxuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiBoKCdkaXYnLCB7XG4gICAgICBjbGFzczogJ3Ytc2VsZWN0LWxpc3QnXG4gICAgfSwgWyBwcm9wcy5pdGVtcyA/IGdlbkl0ZW1zTGlzdCgpIDogbnVsbCBdKVxuICB9XG59KVxuXG4iXX0=