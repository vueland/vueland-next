{"version":3,"sources":["../../../src/effects/use-toggle.ts"],"names":[],"mappings":"AACA,SAAS,GAAT,EAAc,KAAd,QAA2B,KAA3B;AAgBA,OAAM,SAAU,SAAV,CAAoB,KAApB,EAAkC,QAAlC,EAAmD;AACvD,QAAM,QAAQ,GAAG,GAAG,CAAC,KAAD,CAApB;AACA,QAAM,IAAI,GAAG,QAAQ,GAAG,QAAH,GAAc,YAAnC;AAEA,EAAA,KAAK,CACH,MAAM,KAAK,CAAC,IAAD,CADR,EAEF,EAAD,IAAS,QAAQ,CAAC,KAAT,GAAiB,CAAC,CAAC,EAFzB,EAGH;AAAE,IAAA,SAAS,EAAE;AAAb,GAHG,CAAL;AAMA,SAAO;AACL,IAAA;AADK,GAAP;AAGD","sourcesContent":["// Vue API\nimport { ref, watch } from 'vue'\n\n// Types\nimport { Props } from '../types'\nimport { Ref } from 'vue'\n\ntype Toggleable = {\n  isActive: Ref<boolean>;\n};\n\n/***\n *\n * @param props {object} - props object of the component\n * @param propName {string} - the prop name which is tracked for changes\n */\n\nexport function useToggle(props: Props, propName?: string): Toggleable {\n  const isActive = ref(false)\n  const prop = propName ? propName : 'modelValue'\n\n  watch(\n    () => props[prop],\n    (to) => (isActive.value = !!to),\n    { immediate: true },\n  )\n\n  return {\n    isActive,\n  }\n}\n"],"sourceRoot":"","file":"use-toggle.js"}