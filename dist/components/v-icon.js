!function(Q,F){"object"==typeof exports&&"object"==typeof module?module.exports=F(require("vue")):"function"==typeof define&&define.amd?define("vueland",["vue"],F):"object"==typeof exports?exports.vueland=F(require("vue")):Q.vueland=F(Q.Vue)}("undefined"!=typeof self?self:this,(function(__WEBPACK_EXTERNAL_MODULE__895__){return function(){"use strict";var __webpack_modules__={584:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "VIcon": function() { return /* reexport */ VIcon; }\n});\n\n// EXTERNAL MODULE: external {"root":"Vue","commonjs":"vue","commonjs2":"vue","amd":"vue"}\nvar external_root_Vue_commonjs_vue_commonjs2_vue_amd_vue_ = __webpack_require__(895);\n;// CONCATENATED MODULE: ./src/utils/color-parser.ts\nfunction isCssColor(color) {\n  return !!color.match(/^(#|var\\(--|(rgb|hsl)a?\\()/);\n}\n;// CONCATENATED MODULE: ./src/composable/use-colors.ts\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar colorProps = function colorProps() {\n  var defaultColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'\';\n  return {\n    color: {\n      type: String,\n      "default": defaultColor\n    }\n  };\n};\nvar useColors = function useColors() {\n  var setTextClassNameColor = function setTextClassNameColor(color) {\n    var classes = {};\n\n    if (!isCssColor(color)) {\n      var _color$trim$split = color.trim().split(\' \', 2),\n          _color$trim$split2 = _slicedToArray(_color$trim$split, 2),\n          colorName = _color$trim$split2[0],\n          colorModifier = _color$trim$split2[1];\n\n      colorName && (classes["".concat(colorName, "--text")] = true);\n      colorModifier && (classes["text--".concat(colorModifier)] = true);\n    }\n\n    return classes;\n  };\n\n  var setTextCssColor = function setTextCssColor(color) {\n    var styles = {};\n\n    if (isCssColor(color)) {\n      styles.color = color;\n    }\n\n    return styles;\n  };\n\n  var setBackgroundCssColor = function setBackgroundCssColor(color) {\n    var styles = {};\n\n    if (isCssColor(color)) {\n      styles[\'background-color\'] = color;\n      styles[\'border-color\'] = color;\n    }\n\n    return styles;\n  };\n\n  var setBackgroundClassNameColor = function setBackgroundClassNameColor(color) {\n    var classes = {};\n\n    if (!isCssColor(color)) {\n      var _color$trim$split3 = color.trim().split(\' \', 2),\n          _color$trim$split4 = _slicedToArray(_color$trim$split3, 2),\n          colorName = _color$trim$split4[0],\n          colorModifier = _color$trim$split4[1];\n\n      colorName && (classes[colorName] = true);\n      colorModifier && (classes[colorModifier] = true);\n    }\n\n    return classes;\n  };\n\n  return {\n    setTextCssColor: setTextCssColor,\n    setTextClassNameColor: setTextClassNameColor,\n    setBackgroundCssColor: setBackgroundCssColor,\n    setBackgroundClassNameColor: setBackgroundClassNameColor\n  };\n};\n;// CONCATENATED MODULE: ./src/composable/use-size.ts\n\nvar sizeProps = function sizeProps() {\n  var defaultSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'\';\n  return {\n    sm: {\n      type: Boolean,\n      "default": defaultSize === \'sm\'\n    },\n    md: {\n      type: Boolean,\n      "default": defaultSize === \'md\'\n    },\n    lg: {\n      type: Boolean,\n      "default": defaultSize === \'lg\'\n    },\n    xl: {\n      type: Boolean,\n      "default": defaultSize === \'xl\'\n    }\n  };\n};\nvar useSize = function useSize(props) {\n  var sizes = Object.keys(sizeProps());\n  var size = computed(function () {\n    return sizes.find(function (s) {\n      return props[s];\n    });\n  });\n  return {\n    size: size\n  };\n};\n;// CONCATENATED MODULE: ./src/helpers/index.ts\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar createSimpleFunctional = function createSimpleFunctional(c) {\n  var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'div\';\n  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'\';\n  return defineComponent({\n    name: name || c.replace(/__/g, \'-\'),\n    setup: function setup(_, _ref) {\n      var slots = _ref.slots;\n      var propsData = {\n        "class": _defineProperty({}, c.trim(), true)\n      };\n      return function () {\n        return h(el, propsData, slots["default"] && slots["default"]());\n      };\n    }\n  });\n};\nvar addOnceListener = function addOnceListener(el, eventName, cb) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  var once = function once(event) {\n    cb(event);\n    el.removeEventListener(eventName, once, options);\n  };\n\n  el.addEventListener(eventName, once, options);\n};\nvar convertToUnit = function convertToUnit(str) {\n  var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'px\';\n\n  if (isNaN(+str)) {\n    return String(str);\n  } else {\n    return "".concat(Number(str)).concat(unit);\n  }\n};\nvar warning = function warning(warningText) {\n  console.warn(warningText);\n};\nvar copyWithoutLink = function copyWithoutLink(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\nvar addScopedSlot = function addScopedSlot(slotName, slots) {\n  return function (scoped) {\n    var arg = _objectSpread({}, scoped);\n\n    return slots[slotName] && slots[slotName](arg);\n  };\n};\nvar getKeyValueFromTarget = function getKeyValueFromTarget(valueKey, target) {\n  return valueKey.split(\'.\').reduce(function (acc, it) {\n    return acc[it];\n  }, target);\n};\nvar mapToValArray = function mapToValArray(map) {\n  return Array.from(map.values());\n};\nvar uniqueArray = function uniqueArray(arr) {\n  return Object.values(arr.reduce(function (map, it) {\n    if (!map[it.name]) map[it.name] = it;\n    return map;\n  }, {}));\n};\nvar getStringKeysValue = function getStringKeysValue(str, value) {\n  return str.split(\'.\').reduce(function (acc, it) {\n    return acc[it];\n  }, value);\n};\nvar toCamelCase = function toCamelCase() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args.reduce(function (res, s, i) {\n    if (i === 0) res += s;else res += s[0].toUpperCase() + s.slice(1);\n    return res;\n  }, \'\');\n};\n;// CONCATENATED MODULE: ./src/services/sizes.ts\nvar sizes;\n\n(function (sizes) {\n  sizes[sizes["sm"] = 16] = "sm";\n  sizes[sizes["md"] = 20] = "md";\n  sizes[sizes["lg"] = 24] = "lg";\n  sizes[sizes["xl"] = 32] = "xl";\n})(sizes || (sizes = {}));\n;// CONCATENATED MODULE: ./src/components/VIcon/VIcon.ts\nfunction VIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction VIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? VIcon_ownKeys(Object(source), !0).forEach(function (key) { VIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : VIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction VIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar VIcon = (0,external_root_Vue_commonjs_vue_commonjs2_vue_amd_vue_.defineComponent)({\n  name: \'v-icon\',\n  props: VIcon_objectSpread(VIcon_objectSpread({\n    disabled: Boolean,\n    clickable: Boolean,\n    size: [String, Number],\n    icon: String,\n    tag: {\n      type: String,\n      "default": \'i\'\n    }\n  }, colorProps()), sizeProps(\'sm\')),\n  emits: [\'click\'],\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n        emit = _ref.emit;\n\n    var _useColors = useColors(),\n        setTextCssColor = _useColors.setTextCssColor,\n        setTextClassNameColor = _useColors.setTextClassNameColor;\n\n    var iconTag = props.clickable ? \'button\' : props.tag;\n    var computedIcon = (0,external_root_Vue_commonjs_vue_commonjs2_vue_amd_vue_.computed)(function () {\n      var _a;\n\n      return (_a = props.icon || slots["default"] && slots["default"]()[0].children) === null || _a === void 0 ? void 0 : _a.trim();\n    });\n    var classes = (0,external_root_Vue_commonjs_vue_commonjs2_vue_amd_vue_.computed)(function () {\n      return VIcon_objectSpread(VIcon_defineProperty({\n        \'v-icon\': true,\n        \'v-icon--disabled\': props.disabled,\n        \'v-icon--clickable\': props.clickable\n      }, computedIcon.value, !!computedIcon.value), props.color ? setTextClassNameColor(props.color) : {});\n    });\n    var styles = (0,external_root_Vue_commonjs_vue_commonjs2_vue_amd_vue_.computed)(function () {\n      return VIcon_objectSpread({\n        fontSize: getSizes()\n      }, props.color ? setTextCssColor(props.color) : {});\n    });\n\n    var getSizes = function getSizes() {\n      var sizeProps = {\n        sm: props.sm,\n        md: props.md,\n        lg: props.lg,\n        xl: props.xl\n      };\n      var explicitSize = Object.keys(sizeProps).find(function (key) {\n        return sizeProps[key];\n      });\n      return convertToUnit(props.size || explicitSize && sizes[explicitSize]);\n    };\n\n    var onClick = function onClick() {\n      if (!props.disabled && props.clickable) emit(\'click\');\n    };\n\n    return function () {\n      return (0,external_root_Vue_commonjs_vue_commonjs2_vue_amd_vue_.h)(iconTag, {\n        "class": classes.value,\n        style: styles.value,\n        onClick: onClick\n      });\n    };\n  }\n});\n;// CONCATENATED MODULE: ./src/components/VIcon/index.ts\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///584\n')},895:function(Q){Q.exports=__WEBPACK_EXTERNAL_MODULE__895__}},__webpack_module_cache__={};function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var B=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](B,B.exports,__webpack_require__),B.exports}__webpack_require__.d=function(Q,F){for(var B in F)__webpack_require__.o(F,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:F[B]})},__webpack_require__.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},__webpack_require__.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(584);return __webpack_exports__}()}));